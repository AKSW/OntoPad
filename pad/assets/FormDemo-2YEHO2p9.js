var Ba=Object.defineProperty;var Fa=(W,T,m)=>T in W?Ba(W,T,{enumerable:!0,configurable:!0,writable:!0,value:m}):W[T]=m;var Ln=(W,T,m)=>(Fa(W,typeof T!="symbol"?T+"":T,m),m);import{T as Va}from"./Term-1L-1GqcW.js";import{L as Qa,N as Ht,O as Ua,l as Ga,_ as Ja,u as Ha,b as Tn,f as ft,m as za,q as Wa,P as Ka,R as Xa,S as Ya,r as Za,c as eo,a as Be,t as An,d as to,C as Pn,D as no,E as ao,F as oo,o as ro}from"./index-Bwyx5tYB.js";var io=function(T){for(var m=[],$=1;$<arguments.length;$++)m[$-1]=arguments[$];var f=[],S=typeof T=="string"?[T]:T.slice();S[S.length-1]=S[S.length-1].replace(/\r?\n([\t ]*)$/,"");for(var E=0;E<S.length;E++){var j=void 0;(j=S[E].match(/\n[\t ]+/g))&&f.push.apply(f,j)}if(f.length)for(var i=Math.min.apply(Math,f.map(function(h){return h.length-1})),u=new RegExp(`
[	 ]{`+i+"}","g"),E=0;E<S.length;E++)S[E]=S[E].replace(u,`
`);S[0]=S[0].replace(/^\r?\n/,"");for(var c=S[0],E=0;E<m.length;E++)c+=m[E]+S[E+1];return c};const so=Qa(io);var lo={};/*! For license information please see form-default.js.LICENSE.txt */var uo={5250:(W,T,m)=>{const $=m(1472),f=m(6038),S=m(91),E=m(6249),j=m(2211),i=m(8079),u=m(8160);W.exports=function c(h){if(!h)return null;if(h.termType==="BlankNode")return $(h);if(h.termType==="DefaultGraph")return S();if(h.termType==="Literal")return E(h);if(h.termType==="NamedNode")return j(h);if(h.termType==="Quad"||h.subject&&h.predicate&&h.object&&h.graph)return i(h,c);if(h.termType==="Variable")return u(h);if(h[Symbol.iterator])return f(h,c);throw new Error(`unknown termType ${h.termType}`)}},1472:W=>{W.exports=function(T){return"_:"+T.value}},6038:W=>{W.exports=function(T,m){return[...T].map($=>m($)).join(`
`)+`
`}},91:W=>{W.exports=function(){return""}},6249:(W,T,m)=>{const $=m(2211),f=/["\\\\\n\r]/,S=/["\\\\\n\r]/g,E={'"':'\\"',"\\":"\\\\","\n":"\\n","\r":"\\r"};function j(i){return E[i]}W.exports=function(i){const u=(c=i.value,f.test(c)?c.replace(S,j):c);var c;return i.datatype.value==="http://www.w3.org/2001/XMLSchema#string"?'"'+u+'"':i.datatype.value==="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"?'"'+u+'"@'+i.language:'"'+u+'"^^'+$(i.datatype)}},2211:W=>{W.exports=function(T){return"<"+T.value+">"}},8079:W=>{W.exports=function(T,m){const $=m(T.subject),f=m(T.predicate),S=m(T.object),E=m(T.graph);return`${$} ${f} ${S} ${E?E+" ":""}.`}},8160:W=>{W.exports=function(T){return"?"+T.value}},5568:W=>{const{AbortController:T,AbortSignal:m}=typeof self<"u"?self:typeof window<"u"?window:void 0;W.exports=T,W.exports.AbortSignal=m,W.exports.default=T},7526:(W,T)=>{T.byteLength=function(u){var c=j(u),h=c[0],C=c[1];return 3*(h+C)/4-C},T.toByteArray=function(u){var c,h,C=j(u),N=C[0],y=C[1],P=new f(function(O,F,ne){return 3*(F+ne)/4-ne}(0,N,y)),b=0,q=y>0?N-4:N;for(h=0;h<q;h+=4)c=$[u.charCodeAt(h)]<<18|$[u.charCodeAt(h+1)]<<12|$[u.charCodeAt(h+2)]<<6|$[u.charCodeAt(h+3)],P[b++]=c>>16&255,P[b++]=c>>8&255,P[b++]=255&c;return y===2&&(c=$[u.charCodeAt(h)]<<2|$[u.charCodeAt(h+1)]>>4,P[b++]=255&c),y===1&&(c=$[u.charCodeAt(h)]<<10|$[u.charCodeAt(h+1)]<<4|$[u.charCodeAt(h+2)]>>2,P[b++]=c>>8&255,P[b++]=255&c),P},T.fromByteArray=function(u){for(var c,h=u.length,C=h%3,N=[],y=16383,P=0,b=h-C;P<b;P+=y)N.push(i(u,P,P+y>b?b:P+y));return C===1?(c=u[h-1],N.push(m[c>>2]+m[c<<4&63]+"==")):C===2&&(c=(u[h-2]<<8)+u[h-1],N.push(m[c>>10]+m[c>>4&63]+m[c<<2&63]+"=")),N.join("")};for(var m=[],$=[],f=typeof Uint8Array<"u"?Uint8Array:Array,S="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",E=0;E<64;++E)m[E]=S[E],$[S.charCodeAt(E)]=E;function j(u){var c=u.length;if(c%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var h=u.indexOf("=");return h===-1&&(h=c),[h,h===c?0:4-h%4]}function i(u,c,h){for(var C,N,y=[],P=c;P<h;P+=3)C=(u[P]<<16&16711680)+(u[P+1]<<8&65280)+(255&u[P+2]),y.push(m[(N=C)>>18&63]+m[N>>12&63]+m[N>>6&63]+m[63&N]);return y.join("")}$[45]=62,$[95]=63},8287:(W,T,m)=>{const $=m(7526),f=m(251),S=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;T.Buffer=i,T.SlowBuffer=function(l){return+l!=l&&(l=0),i.alloc(+l)},T.INSPECT_MAX_BYTES=50;const E=2147483647;function j(l){if(l>E)throw new RangeError('The value "'+l+'" is invalid for option "size"');const p=new Uint8Array(l);return Object.setPrototypeOf(p,i.prototype),p}function i(l,p,_){if(typeof l=="number"){if(typeof p=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return h(l)}return u(l,p,_)}function u(l,p,_){if(typeof l=="string")return function(I,ie){if(typeof ie=="string"&&ie!==""||(ie="utf8"),!i.isEncoding(ie))throw new TypeError("Unknown encoding: "+ie);const $e=0|P(I,ie);let we=j($e);const _e=we.write(I,ie);return _e!==$e&&(we=we.slice(0,_e)),we}(l,p);if(ArrayBuffer.isView(l))return function(I){if(J(I,Uint8Array)){const ie=new Uint8Array(I);return N(ie.buffer,ie.byteOffset,ie.byteLength)}return C(I)}(l);if(l==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof l);if(J(l,ArrayBuffer)||l&&J(l.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(J(l,SharedArrayBuffer)||l&&J(l.buffer,SharedArrayBuffer)))return N(l,p,_);if(typeof l=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const ae=l.valueOf&&l.valueOf();if(ae!=null&&ae!==l)return i.from(ae,p,_);const v=function(I){if(i.isBuffer(I)){const ie=0|y(I.length),$e=j(ie);return $e.length===0||I.copy($e,0,0,ie),$e}return I.length!==void 0?typeof I.length!="number"||le(I.length)?j(0):C(I):I.type==="Buffer"&&Array.isArray(I.data)?C(I.data):void 0}(l);if(v)return v;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof l[Symbol.toPrimitive]=="function")return i.from(l[Symbol.toPrimitive]("string"),p,_);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof l)}function c(l){if(typeof l!="number")throw new TypeError('"size" argument must be of type number');if(l<0)throw new RangeError('The value "'+l+'" is invalid for option "size"')}function h(l){return c(l),j(l<0?0:0|y(l))}function C(l){const p=l.length<0?0:0|y(l.length),_=j(p);for(let ae=0;ae<p;ae+=1)_[ae]=255&l[ae];return _}function N(l,p,_){if(p<0||l.byteLength<p)throw new RangeError('"offset" is outside of buffer bounds');if(l.byteLength<p+(_||0))throw new RangeError('"length" is outside of buffer bounds');let ae;return ae=p===void 0&&_===void 0?new Uint8Array(l):_===void 0?new Uint8Array(l,p):new Uint8Array(l,p,_),Object.setPrototypeOf(ae,i.prototype),ae}function y(l){if(l>=E)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+E.toString(16)+" bytes");return 0|l}function P(l,p){if(i.isBuffer(l))return l.length;if(ArrayBuffer.isView(l)||J(l,ArrayBuffer))return l.byteLength;if(typeof l!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof l);const _=l.length,ae=arguments.length>2&&arguments[2]===!0;if(!ae&&_===0)return 0;let v=!1;for(;;)switch(p){case"ascii":case"latin1":case"binary":return _;case"utf8":case"utf-8":return re(l).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*_;case"hex":return _>>>1;case"base64":return se(l).length;default:if(v)return ae?-1:re(l).length;p=(""+p).toLowerCase(),v=!0}}function b(l,p,_){let ae=!1;if((p===void 0||p<0)&&(p=0),p>this.length||((_===void 0||_>this.length)&&(_=this.length),_<=0)||(_>>>=0)<=(p>>>=0))return"";for(l||(l="utf8");;)switch(l){case"hex":return pe(this,p,_);case"utf8":case"utf-8":return g(this,p,_);case"ascii":return L(this,p,_);case"latin1":case"binary":return de(this,p,_);case"base64":return M(this,p,_);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return me(this,p,_);default:if(ae)throw new TypeError("Unknown encoding: "+l);l=(l+"").toLowerCase(),ae=!0}}function q(l,p,_){const ae=l[p];l[p]=l[_],l[_]=ae}function O(l,p,_,ae,v){if(l.length===0)return-1;if(typeof _=="string"?(ae=_,_=0):_>2147483647?_=2147483647:_<-2147483648&&(_=-2147483648),le(_=+_)&&(_=v?0:l.length-1),_<0&&(_=l.length+_),_>=l.length){if(v)return-1;_=l.length-1}else if(_<0){if(!v)return-1;_=0}if(typeof p=="string"&&(p=i.from(p,ae)),i.isBuffer(p))return p.length===0?-1:F(l,p,_,ae,v);if(typeof p=="number")return p&=255,typeof Uint8Array.prototype.indexOf=="function"?v?Uint8Array.prototype.indexOf.call(l,p,_):Uint8Array.prototype.lastIndexOf.call(l,p,_):F(l,[p],_,ae,v);throw new TypeError("val must be string, number or Buffer")}function F(l,p,_,ae,v){let I,ie=1,$e=l.length,we=p.length;if(ae!==void 0&&((ae=String(ae).toLowerCase())==="ucs2"||ae==="ucs-2"||ae==="utf16le"||ae==="utf-16le")){if(l.length<2||p.length<2)return-1;ie=2,$e/=2,we/=2,_/=2}function _e(Ce,Ie){return ie===1?Ce[Ie]:Ce.readUInt16BE(Ie*ie)}if(v){let Ce=-1;for(I=_;I<$e;I++)if(_e(l,I)===_e(p,Ce===-1?0:I-Ce)){if(Ce===-1&&(Ce=I),I-Ce+1===we)return Ce*ie}else Ce!==-1&&(I-=I-Ce),Ce=-1}else for(_+we>$e&&(_=$e-we),I=_;I>=0;I--){let Ce=!0;for(let Ie=0;Ie<we;Ie++)if(_e(l,I+Ie)!==_e(p,Ie)){Ce=!1;break}if(Ce)return I}return-1}function ne(l,p,_,ae){_=Number(_)||0;const v=l.length-_;ae?(ae=Number(ae))>v&&(ae=v):ae=v;const I=p.length;let ie;for(ae>I/2&&(ae=I/2),ie=0;ie<ae;++ie){const $e=parseInt(p.substr(2*ie,2),16);if(le($e))return ie;l[_+ie]=$e}return ie}function w(l,p,_,ae){return ee(re(p,l.length-_),l,_,ae)}function x(l,p,_,ae){return ee(function(v){const I=[];for(let ie=0;ie<v.length;++ie)I.push(255&v.charCodeAt(ie));return I}(p),l,_,ae)}function Q(l,p,_,ae){return ee(se(p),l,_,ae)}function B(l,p,_,ae){return ee(function(v,I){let ie,$e,we;const _e=[];for(let Ce=0;Ce<v.length&&!((I-=2)<0);++Ce)ie=v.charCodeAt(Ce),$e=ie>>8,we=ie%256,_e.push(we),_e.push($e);return _e}(p,l.length-_),l,_,ae)}function M(l,p,_){return p===0&&_===l.length?$.fromByteArray(l):$.fromByteArray(l.slice(p,_))}function g(l,p,_){_=Math.min(l.length,_);const ae=[];let v=p;for(;v<_;){const I=l[v];let ie=null,$e=I>239?4:I>223?3:I>191?2:1;if(v+$e<=_){let we,_e,Ce,Ie;switch($e){case 1:I<128&&(ie=I);break;case 2:we=l[v+1],(192&we)==128&&(Ie=(31&I)<<6|63&we,Ie>127&&(ie=Ie));break;case 3:we=l[v+1],_e=l[v+2],(192&we)==128&&(192&_e)==128&&(Ie=(15&I)<<12|(63&we)<<6|63&_e,Ie>2047&&(Ie<55296||Ie>57343)&&(ie=Ie));break;case 4:we=l[v+1],_e=l[v+2],Ce=l[v+3],(192&we)==128&&(192&_e)==128&&(192&Ce)==128&&(Ie=(15&I)<<18|(63&we)<<12|(63&_e)<<6|63&Ce,Ie>65535&&Ie<1114112&&(ie=Ie))}}ie===null?(ie=65533,$e=1):ie>65535&&(ie-=65536,ae.push(ie>>>10&1023|55296),ie=56320|1023&ie),ae.push(ie),v+=$e}return function(I){const ie=I.length;if(ie<=D)return String.fromCharCode.apply(String,I);let $e="",we=0;for(;we<ie;)$e+=String.fromCharCode.apply(String,I.slice(we,we+=D));return $e}(ae)}T.kMaxLength=E,i.TYPED_ARRAY_SUPPORT=function(){try{const l=new Uint8Array(1),p={foo:function(){return 42}};return Object.setPrototypeOf(p,Uint8Array.prototype),Object.setPrototypeOf(l,p),l.foo()===42}catch{return!1}}(),i.TYPED_ARRAY_SUPPORT||typeof console>"u"||typeof console.error!="function"||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(i.prototype,"parent",{enumerable:!0,get:function(){if(i.isBuffer(this))return this.buffer}}),Object.defineProperty(i.prototype,"offset",{enumerable:!0,get:function(){if(i.isBuffer(this))return this.byteOffset}}),i.poolSize=8192,i.from=function(l,p,_){return u(l,p,_)},Object.setPrototypeOf(i.prototype,Uint8Array.prototype),Object.setPrototypeOf(i,Uint8Array),i.alloc=function(l,p,_){return function(ae,v,I){return c(ae),ae<=0?j(ae):v!==void 0?typeof I=="string"?j(ae).fill(v,I):j(ae).fill(v):j(ae)}(l,p,_)},i.allocUnsafe=function(l){return h(l)},i.allocUnsafeSlow=function(l){return h(l)},i.isBuffer=function(l){return l!=null&&l._isBuffer===!0&&l!==i.prototype},i.compare=function(l,p){if(J(l,Uint8Array)&&(l=i.from(l,l.offset,l.byteLength)),J(p,Uint8Array)&&(p=i.from(p,p.offset,p.byteLength)),!i.isBuffer(l)||!i.isBuffer(p))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(l===p)return 0;let _=l.length,ae=p.length;for(let v=0,I=Math.min(_,ae);v<I;++v)if(l[v]!==p[v]){_=l[v],ae=p[v];break}return _<ae?-1:ae<_?1:0},i.isEncoding=function(l){switch(String(l).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},i.concat=function(l,p){if(!Array.isArray(l))throw new TypeError('"list" argument must be an Array of Buffers');if(l.length===0)return i.alloc(0);let _;if(p===void 0)for(p=0,_=0;_<l.length;++_)p+=l[_].length;const ae=i.allocUnsafe(p);let v=0;for(_=0;_<l.length;++_){let I=l[_];if(J(I,Uint8Array))v+I.length>ae.length?(i.isBuffer(I)||(I=i.from(I)),I.copy(ae,v)):Uint8Array.prototype.set.call(ae,I,v);else{if(!i.isBuffer(I))throw new TypeError('"list" argument must be an Array of Buffers');I.copy(ae,v)}v+=I.length}return ae},i.byteLength=P,i.prototype._isBuffer=!0,i.prototype.swap16=function(){const l=this.length;if(l%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let p=0;p<l;p+=2)q(this,p,p+1);return this},i.prototype.swap32=function(){const l=this.length;if(l%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let p=0;p<l;p+=4)q(this,p,p+3),q(this,p+1,p+2);return this},i.prototype.swap64=function(){const l=this.length;if(l%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let p=0;p<l;p+=8)q(this,p,p+7),q(this,p+1,p+6),q(this,p+2,p+5),q(this,p+3,p+4);return this},i.prototype.toString=function(){const l=this.length;return l===0?"":arguments.length===0?g(this,0,l):b.apply(this,arguments)},i.prototype.toLocaleString=i.prototype.toString,i.prototype.equals=function(l){if(!i.isBuffer(l))throw new TypeError("Argument must be a Buffer");return this===l||i.compare(this,l)===0},i.prototype.inspect=function(){let l="";const p=T.INSPECT_MAX_BYTES;return l=this.toString("hex",0,p).replace(/(.{2})/g,"$1 ").trim(),this.length>p&&(l+=" ... "),"<Buffer "+l+">"},S&&(i.prototype[S]=i.prototype.inspect),i.prototype.compare=function(l,p,_,ae,v){if(J(l,Uint8Array)&&(l=i.from(l,l.offset,l.byteLength)),!i.isBuffer(l))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof l);if(p===void 0&&(p=0),_===void 0&&(_=l?l.length:0),ae===void 0&&(ae=0),v===void 0&&(v=this.length),p<0||_>l.length||ae<0||v>this.length)throw new RangeError("out of range index");if(ae>=v&&p>=_)return 0;if(ae>=v)return-1;if(p>=_)return 1;if(this===l)return 0;let I=(v>>>=0)-(ae>>>=0),ie=(_>>>=0)-(p>>>=0);const $e=Math.min(I,ie),we=this.slice(ae,v),_e=l.slice(p,_);for(let Ce=0;Ce<$e;++Ce)if(we[Ce]!==_e[Ce]){I=we[Ce],ie=_e[Ce];break}return I<ie?-1:ie<I?1:0},i.prototype.includes=function(l,p,_){return this.indexOf(l,p,_)!==-1},i.prototype.indexOf=function(l,p,_){return O(this,l,p,_,!0)},i.prototype.lastIndexOf=function(l,p,_){return O(this,l,p,_,!1)},i.prototype.write=function(l,p,_,ae){if(p===void 0)ae="utf8",_=this.length,p=0;else if(_===void 0&&typeof p=="string")ae=p,_=this.length,p=0;else{if(!isFinite(p))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");p>>>=0,isFinite(_)?(_>>>=0,ae===void 0&&(ae="utf8")):(ae=_,_=void 0)}const v=this.length-p;if((_===void 0||_>v)&&(_=v),l.length>0&&(_<0||p<0)||p>this.length)throw new RangeError("Attempt to write outside buffer bounds");ae||(ae="utf8");let I=!1;for(;;)switch(ae){case"hex":return ne(this,l,p,_);case"utf8":case"utf-8":return w(this,l,p,_);case"ascii":case"latin1":case"binary":return x(this,l,p,_);case"base64":return Q(this,l,p,_);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,l,p,_);default:if(I)throw new TypeError("Unknown encoding: "+ae);ae=(""+ae).toLowerCase(),I=!0}},i.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const D=4096;function L(l,p,_){let ae="";_=Math.min(l.length,_);for(let v=p;v<_;++v)ae+=String.fromCharCode(127&l[v]);return ae}function de(l,p,_){let ae="";_=Math.min(l.length,_);for(let v=p;v<_;++v)ae+=String.fromCharCode(l[v]);return ae}function pe(l,p,_){const ae=l.length;(!p||p<0)&&(p=0),(!_||_<0||_>ae)&&(_=ae);let v="";for(let I=p;I<_;++I)v+=he[l[I]];return v}function me(l,p,_){const ae=l.slice(p,_);let v="";for(let I=0;I<ae.length-1;I+=2)v+=String.fromCharCode(ae[I]+256*ae[I+1]);return v}function k(l,p,_){if(l%1!=0||l<0)throw new RangeError("offset is not uint");if(l+p>_)throw new RangeError("Trying to access beyond buffer length")}function G(l,p,_,ae,v,I){if(!i.isBuffer(l))throw new TypeError('"buffer" argument must be a Buffer instance');if(p>v||p<I)throw new RangeError('"value" argument is out of bounds');if(_+ae>l.length)throw new RangeError("Index out of range")}function A(l,p,_,ae,v){ge(p,ae,v,l,_,7);let I=Number(p&BigInt(4294967295));l[_++]=I,I>>=8,l[_++]=I,I>>=8,l[_++]=I,I>>=8,l[_++]=I;let ie=Number(p>>BigInt(32)&BigInt(4294967295));return l[_++]=ie,ie>>=8,l[_++]=ie,ie>>=8,l[_++]=ie,ie>>=8,l[_++]=ie,_}function z(l,p,_,ae,v){ge(p,ae,v,l,_,7);let I=Number(p&BigInt(4294967295));l[_+7]=I,I>>=8,l[_+6]=I,I>>=8,l[_+5]=I,I>>=8,l[_+4]=I;let ie=Number(p>>BigInt(32)&BigInt(4294967295));return l[_+3]=ie,ie>>=8,l[_+2]=ie,ie>>=8,l[_+1]=ie,ie>>=8,l[_]=ie,_+8}function Y(l,p,_,ae,v,I){if(_+ae>l.length)throw new RangeError("Index out of range");if(_<0)throw new RangeError("Index out of range")}function Z(l,p,_,ae,v){return p=+p,_>>>=0,v||Y(l,0,_,4),f.write(l,p,_,ae,23,4),_+4}function te(l,p,_,ae,v){return p=+p,_>>>=0,v||Y(l,0,_,8),f.write(l,p,_,ae,52,8),_+8}i.prototype.slice=function(l,p){const _=this.length;(l=~~l)<0?(l+=_)<0&&(l=0):l>_&&(l=_),(p=p===void 0?_:~~p)<0?(p+=_)<0&&(p=0):p>_&&(p=_),p<l&&(p=l);const ae=this.subarray(l,p);return Object.setPrototypeOf(ae,i.prototype),ae},i.prototype.readUintLE=i.prototype.readUIntLE=function(l,p,_){l>>>=0,p>>>=0,_||k(l,p,this.length);let ae=this[l],v=1,I=0;for(;++I<p&&(v*=256);)ae+=this[l+I]*v;return ae},i.prototype.readUintBE=i.prototype.readUIntBE=function(l,p,_){l>>>=0,p>>>=0,_||k(l,p,this.length);let ae=this[l+--p],v=1;for(;p>0&&(v*=256);)ae+=this[l+--p]*v;return ae},i.prototype.readUint8=i.prototype.readUInt8=function(l,p){return l>>>=0,p||k(l,1,this.length),this[l]},i.prototype.readUint16LE=i.prototype.readUInt16LE=function(l,p){return l>>>=0,p||k(l,2,this.length),this[l]|this[l+1]<<8},i.prototype.readUint16BE=i.prototype.readUInt16BE=function(l,p){return l>>>=0,p||k(l,2,this.length),this[l]<<8|this[l+1]},i.prototype.readUint32LE=i.prototype.readUInt32LE=function(l,p){return l>>>=0,p||k(l,4,this.length),(this[l]|this[l+1]<<8|this[l+2]<<16)+16777216*this[l+3]},i.prototype.readUint32BE=i.prototype.readUInt32BE=function(l,p){return l>>>=0,p||k(l,4,this.length),16777216*this[l]+(this[l+1]<<16|this[l+2]<<8|this[l+3])},i.prototype.readBigUInt64LE=fe(function(l){ce(l>>>=0,"offset");const p=this[l],_=this[l+7];p!==void 0&&_!==void 0||X(l,this.length-8);const ae=p+256*this[++l]+65536*this[++l]+this[++l]*2**24,v=this[++l]+256*this[++l]+65536*this[++l]+_*2**24;return BigInt(ae)+(BigInt(v)<<BigInt(32))}),i.prototype.readBigUInt64BE=fe(function(l){ce(l>>>=0,"offset");const p=this[l],_=this[l+7];p!==void 0&&_!==void 0||X(l,this.length-8);const ae=p*2**24+65536*this[++l]+256*this[++l]+this[++l],v=this[++l]*2**24+65536*this[++l]+256*this[++l]+_;return(BigInt(ae)<<BigInt(32))+BigInt(v)}),i.prototype.readIntLE=function(l,p,_){l>>>=0,p>>>=0,_||k(l,p,this.length);let ae=this[l],v=1,I=0;for(;++I<p&&(v*=256);)ae+=this[l+I]*v;return v*=128,ae>=v&&(ae-=Math.pow(2,8*p)),ae},i.prototype.readIntBE=function(l,p,_){l>>>=0,p>>>=0,_||k(l,p,this.length);let ae=p,v=1,I=this[l+--ae];for(;ae>0&&(v*=256);)I+=this[l+--ae]*v;return v*=128,I>=v&&(I-=Math.pow(2,8*p)),I},i.prototype.readInt8=function(l,p){return l>>>=0,p||k(l,1,this.length),128&this[l]?-1*(255-this[l]+1):this[l]},i.prototype.readInt16LE=function(l,p){l>>>=0,p||k(l,2,this.length);const _=this[l]|this[l+1]<<8;return 32768&_?4294901760|_:_},i.prototype.readInt16BE=function(l,p){l>>>=0,p||k(l,2,this.length);const _=this[l+1]|this[l]<<8;return 32768&_?4294901760|_:_},i.prototype.readInt32LE=function(l,p){return l>>>=0,p||k(l,4,this.length),this[l]|this[l+1]<<8|this[l+2]<<16|this[l+3]<<24},i.prototype.readInt32BE=function(l,p){return l>>>=0,p||k(l,4,this.length),this[l]<<24|this[l+1]<<16|this[l+2]<<8|this[l+3]},i.prototype.readBigInt64LE=fe(function(l){ce(l>>>=0,"offset");const p=this[l],_=this[l+7];p!==void 0&&_!==void 0||X(l,this.length-8);const ae=this[l+4]+256*this[l+5]+65536*this[l+6]+(_<<24);return(BigInt(ae)<<BigInt(32))+BigInt(p+256*this[++l]+65536*this[++l]+this[++l]*2**24)}),i.prototype.readBigInt64BE=fe(function(l){ce(l>>>=0,"offset");const p=this[l],_=this[l+7];p!==void 0&&_!==void 0||X(l,this.length-8);const ae=(p<<24)+65536*this[++l]+256*this[++l]+this[++l];return(BigInt(ae)<<BigInt(32))+BigInt(this[++l]*2**24+65536*this[++l]+256*this[++l]+_)}),i.prototype.readFloatLE=function(l,p){return l>>>=0,p||k(l,4,this.length),f.read(this,l,!0,23,4)},i.prototype.readFloatBE=function(l,p){return l>>>=0,p||k(l,4,this.length),f.read(this,l,!1,23,4)},i.prototype.readDoubleLE=function(l,p){return l>>>=0,p||k(l,8,this.length),f.read(this,l,!0,52,8)},i.prototype.readDoubleBE=function(l,p){return l>>>=0,p||k(l,8,this.length),f.read(this,l,!1,52,8)},i.prototype.writeUintLE=i.prototype.writeUIntLE=function(l,p,_,ae){l=+l,p>>>=0,_>>>=0,ae||G(this,l,p,_,Math.pow(2,8*_)-1,0);let v=1,I=0;for(this[p]=255&l;++I<_&&(v*=256);)this[p+I]=l/v&255;return p+_},i.prototype.writeUintBE=i.prototype.writeUIntBE=function(l,p,_,ae){l=+l,p>>>=0,_>>>=0,ae||G(this,l,p,_,Math.pow(2,8*_)-1,0);let v=_-1,I=1;for(this[p+v]=255&l;--v>=0&&(I*=256);)this[p+v]=l/I&255;return p+_},i.prototype.writeUint8=i.prototype.writeUInt8=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,1,255,0),this[p]=255&l,p+1},i.prototype.writeUint16LE=i.prototype.writeUInt16LE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,2,65535,0),this[p]=255&l,this[p+1]=l>>>8,p+2},i.prototype.writeUint16BE=i.prototype.writeUInt16BE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,2,65535,0),this[p]=l>>>8,this[p+1]=255&l,p+2},i.prototype.writeUint32LE=i.prototype.writeUInt32LE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,4,4294967295,0),this[p+3]=l>>>24,this[p+2]=l>>>16,this[p+1]=l>>>8,this[p]=255&l,p+4},i.prototype.writeUint32BE=i.prototype.writeUInt32BE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,4,4294967295,0),this[p]=l>>>24,this[p+1]=l>>>16,this[p+2]=l>>>8,this[p+3]=255&l,p+4},i.prototype.writeBigUInt64LE=fe(function(l,p=0){return A(this,l,p,BigInt(0),BigInt("0xffffffffffffffff"))}),i.prototype.writeBigUInt64BE=fe(function(l,p=0){return z(this,l,p,BigInt(0),BigInt("0xffffffffffffffff"))}),i.prototype.writeIntLE=function(l,p,_,ae){if(l=+l,p>>>=0,!ae){const $e=Math.pow(2,8*_-1);G(this,l,p,_,$e-1,-$e)}let v=0,I=1,ie=0;for(this[p]=255&l;++v<_&&(I*=256);)l<0&&ie===0&&this[p+v-1]!==0&&(ie=1),this[p+v]=(l/I>>0)-ie&255;return p+_},i.prototype.writeIntBE=function(l,p,_,ae){if(l=+l,p>>>=0,!ae){const $e=Math.pow(2,8*_-1);G(this,l,p,_,$e-1,-$e)}let v=_-1,I=1,ie=0;for(this[p+v]=255&l;--v>=0&&(I*=256);)l<0&&ie===0&&this[p+v+1]!==0&&(ie=1),this[p+v]=(l/I>>0)-ie&255;return p+_},i.prototype.writeInt8=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,1,127,-128),l<0&&(l=255+l+1),this[p]=255&l,p+1},i.prototype.writeInt16LE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,2,32767,-32768),this[p]=255&l,this[p+1]=l>>>8,p+2},i.prototype.writeInt16BE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,2,32767,-32768),this[p]=l>>>8,this[p+1]=255&l,p+2},i.prototype.writeInt32LE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,4,2147483647,-2147483648),this[p]=255&l,this[p+1]=l>>>8,this[p+2]=l>>>16,this[p+3]=l>>>24,p+4},i.prototype.writeInt32BE=function(l,p,_){return l=+l,p>>>=0,_||G(this,l,p,4,2147483647,-2147483648),l<0&&(l=4294967295+l+1),this[p]=l>>>24,this[p+1]=l>>>16,this[p+2]=l>>>8,this[p+3]=255&l,p+4},i.prototype.writeBigInt64LE=fe(function(l,p=0){return A(this,l,p,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),i.prototype.writeBigInt64BE=fe(function(l,p=0){return z(this,l,p,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),i.prototype.writeFloatLE=function(l,p,_){return Z(this,l,p,!0,_)},i.prototype.writeFloatBE=function(l,p,_){return Z(this,l,p,!1,_)},i.prototype.writeDoubleLE=function(l,p,_){return te(this,l,p,!0,_)},i.prototype.writeDoubleBE=function(l,p,_){return te(this,l,p,!1,_)},i.prototype.copy=function(l,p,_,ae){if(!i.isBuffer(l))throw new TypeError("argument should be a Buffer");if(_||(_=0),ae||ae===0||(ae=this.length),p>=l.length&&(p=l.length),p||(p=0),ae>0&&ae<_&&(ae=_),ae===_||l.length===0||this.length===0)return 0;if(p<0)throw new RangeError("targetStart out of bounds");if(_<0||_>=this.length)throw new RangeError("Index out of range");if(ae<0)throw new RangeError("sourceEnd out of bounds");ae>this.length&&(ae=this.length),l.length-p<ae-_&&(ae=l.length-p+_);const v=ae-_;return this===l&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(p,_,ae):Uint8Array.prototype.set.call(l,this.subarray(_,ae),p),v},i.prototype.fill=function(l,p,_,ae){if(typeof l=="string"){if(typeof p=="string"?(ae=p,p=0,_=this.length):typeof _=="string"&&(ae=_,_=this.length),ae!==void 0&&typeof ae!="string")throw new TypeError("encoding must be a string");if(typeof ae=="string"&&!i.isEncoding(ae))throw new TypeError("Unknown encoding: "+ae);if(l.length===1){const I=l.charCodeAt(0);(ae==="utf8"&&I<128||ae==="latin1")&&(l=I)}}else typeof l=="number"?l&=255:typeof l=="boolean"&&(l=Number(l));if(p<0||this.length<p||this.length<_)throw new RangeError("Out of range index");if(_<=p)return this;let v;if(p>>>=0,_=_===void 0?this.length:_>>>0,l||(l=0),typeof l=="number")for(v=p;v<_;++v)this[v]=l;else{const I=i.isBuffer(l)?l:i.from(l,ae),ie=I.length;if(ie===0)throw new TypeError('The value "'+l+'" is invalid for argument "value"');for(v=0;v<_-p;++v)this[v+p]=I[v%ie]}return this};const K={};function ue(l,p,_){K[l]=class extends _{constructor(){super(),Object.defineProperty(this,"message",{value:p.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${l}]`,this.stack,delete this.name}get code(){return l}set code(ae){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:ae,writable:!0})}toString(){return`${this.name} [${l}]: ${this.message}`}}}function Ne(l){let p="",_=l.length;const ae=l[0]==="-"?1:0;for(;_>=ae+4;_-=3)p=`_${l.slice(_-3,_)}${p}`;return`${l.slice(0,_)}${p}`}function ge(l,p,_,ae,v,I){if(l>_||l<p){const ie=typeof p=="bigint"?"n":"";let $e;throw $e=I>3?p===0||p===BigInt(0)?`>= 0${ie} and < 2${ie} ** ${8*(I+1)}${ie}`:`>= -(2${ie} ** ${8*(I+1)-1}${ie}) and < 2 ** ${8*(I+1)-1}${ie}`:`>= ${p}${ie} and <= ${_}${ie}`,new K.ERR_OUT_OF_RANGE("value",$e,l)}(function(ie,$e,we){ce($e,"offset"),ie[$e]!==void 0&&ie[$e+we]!==void 0||X($e,ie.length-(we+1))})(ae,v,I)}function ce(l,p){if(typeof l!="number")throw new K.ERR_INVALID_ARG_TYPE(p,"number",l)}function X(l,p,_){throw Math.floor(l)!==l?(ce(l,_),new K.ERR_OUT_OF_RANGE(_||"offset","an integer",l)):p<0?new K.ERR_BUFFER_OUT_OF_BOUNDS:new K.ERR_OUT_OF_RANGE(_||"offset",`>= ${_?1:0} and <= ${p}`,l)}ue("ERR_BUFFER_OUT_OF_BOUNDS",function(l){return l?`${l} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),ue("ERR_INVALID_ARG_TYPE",function(l,p){return`The "${l}" argument must be of type number. Received type ${typeof p}`},TypeError),ue("ERR_OUT_OF_RANGE",function(l,p,_){let ae=`The value of "${l}" is out of range.`,v=_;return Number.isInteger(_)&&Math.abs(_)>2**32?v=Ne(String(_)):typeof _=="bigint"&&(v=String(_),(_>BigInt(2)**BigInt(32)||_<-(BigInt(2)**BigInt(32)))&&(v=Ne(v)),v+="n"),ae+=` It must be ${p}. Received ${v}`,ae},RangeError);const V=/[^+/0-9A-Za-z-_]/g;function re(l,p){let _;p=p||1/0;const ae=l.length;let v=null;const I=[];for(let ie=0;ie<ae;++ie){if(_=l.charCodeAt(ie),_>55295&&_<57344){if(!v){if(_>56319){(p-=3)>-1&&I.push(239,191,189);continue}if(ie+1===ae){(p-=3)>-1&&I.push(239,191,189);continue}v=_;continue}if(_<56320){(p-=3)>-1&&I.push(239,191,189),v=_;continue}_=65536+(v-55296<<10|_-56320)}else v&&(p-=3)>-1&&I.push(239,191,189);if(v=null,_<128){if((p-=1)<0)break;I.push(_)}else if(_<2048){if((p-=2)<0)break;I.push(_>>6|192,63&_|128)}else if(_<65536){if((p-=3)<0)break;I.push(_>>12|224,_>>6&63|128,63&_|128)}else{if(!(_<1114112))throw new Error("Invalid code point");if((p-=4)<0)break;I.push(_>>18|240,_>>12&63|128,_>>6&63|128,63&_|128)}}return I}function se(l){return $.toByteArray(function(p){if((p=(p=p.split("=")[0]).trim().replace(V,"")).length<2)return"";for(;p.length%4!=0;)p+="=";return p}(l))}function ee(l,p,_,ae){let v;for(v=0;v<ae&&!(v+_>=p.length||v>=l.length);++v)p[v+_]=l[v];return v}function J(l,p){return l instanceof p||l!=null&&l.constructor!=null&&l.constructor.name!=null&&l.constructor.name===p.name}function le(l){return l!=l}const he=function(){const l="0123456789abcdef",p=new Array(256);for(let _=0;_<16;++_){const ae=16*_;for(let v=0;v<16;++v)p[ae+v]=l[_]+l[v]}return p}();function fe(l){return typeof BigInt>"u"?ye:l}function ye(){throw new Error("BigInt not supported")}},2341:W=>{W.exports=function T(m){return m===null||typeof m!="object"||m.toJSON!=null?JSON.stringify(m):Array.isArray(m)?"["+m.reduce(($,f,S)=>$+(S===0?"":",")+T(f===void 0||typeof f=="symbol"?null:f),"")+"]":"{"+Object.keys(m).sort().reduce(($,f,S)=>m[f]===void 0||typeof m[f]=="symbol"?$:$+($.length===0?"":",")+T(f)+":"+T(m[f]),"")+"}"}},7833:(W,T,m)=>{T.formatArgs=function(f){if(f[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+f[0]+(this.useColors?"%c ":" ")+"+"+W.exports.humanize(this.diff),!this.useColors)return;const S="color: "+this.color;f.splice(1,0,S,"color: inherit");let E=0,j=0;f[0].replace(/%[a-zA-Z%]/g,i=>{i!=="%%"&&(E++,i==="%c"&&(j=E))}),f.splice(j,0,S)},T.save=function(f){try{f?T.storage.setItem("debug",f):T.storage.removeItem("debug")}catch{}},T.load=function(){let f;try{f=T.storage.getItem("debug")}catch{}return!f&&typeof Ht<"u"&&"env"in Ht&&(f=lo.DEBUG),f},T.useColors=function(){return!(typeof window>"u"||!window.process||window.process.type!=="renderer"&&!window.process.__nwjs)||(typeof navigator>"u"||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&(typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},T.storage=function(){try{return localStorage}catch{}}(),T.destroy=(()=>{let f=!1;return()=>{f||(f=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),T.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],T.log=console.debug||console.log||(()=>{}),W.exports=m(736)(T);const{formatters:$}=W.exports;$.j=function(f){try{return JSON.stringify(f)}catch(S){return"[UnexpectedJSONParseError]: "+S.message}}},736:(W,T,m)=>{W.exports=function($){function f(j){let i,u,c,h=null;function C(...N){if(!C.enabled)return;const y=C,P=Number(new Date),b=P-(i||P);y.diff=b,y.prev=i,y.curr=P,i=P,N[0]=f.coerce(N[0]),typeof N[0]!="string"&&N.unshift("%O");let q=0;N[0]=N[0].replace(/%([a-zA-Z%])/g,(O,F)=>{if(O==="%%")return"%";q++;const ne=f.formatters[F];if(typeof ne=="function"){const w=N[q];O=ne.call(y,w),N.splice(q,1),q--}return O}),f.formatArgs.call(y,N),(y.log||f.log).apply(y,N)}return C.namespace=j,C.useColors=f.useColors(),C.color=f.selectColor(j),C.extend=S,C.destroy=f.destroy,Object.defineProperty(C,"enabled",{enumerable:!0,configurable:!1,get:()=>h!==null?h:(u!==f.namespaces&&(u=f.namespaces,c=f.enabled(j)),c),set:N=>{h=N}}),typeof f.init=="function"&&f.init(C),C}function S(j,i){const u=f(this.namespace+(i===void 0?":":i)+j);return u.log=this.log,u}function E(j){return j.toString().substring(2,j.toString().length-2).replace(/\.\*\?$/,"*")}return f.debug=f,f.default=f,f.coerce=function(j){return j instanceof Error?j.stack||j.message:j},f.disable=function(){const j=[...f.names.map(E),...f.skips.map(E).map(i=>"-"+i)].join(",");return f.enable(""),j},f.enable=function(j){let i;f.save(j),f.namespaces=j,f.names=[],f.skips=[];const u=(typeof j=="string"?j:"").split(/[\s,]+/),c=u.length;for(i=0;i<c;i++)u[i]&&((j=u[i].replace(/\*/g,".*?"))[0]==="-"?f.skips.push(new RegExp("^"+j.slice(1)+"$")):f.names.push(new RegExp("^"+j+"$")))},f.enabled=function(j){if(j[j.length-1]==="*")return!0;let i,u;for(i=0,u=f.skips.length;i<u;i++)if(f.skips[i].test(j))return!1;for(i=0,u=f.names.length;i<u;i++)if(f.names[i].test(j))return!0;return!1},f.humanize=m(6585),f.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys($).forEach(j=>{f[j]=$[j]}),f.names=[],f.skips=[],f.formatters={},f.selectColor=function(j){let i=0;for(let u=0;u<j.length;u++)i=(i<<5)-i+j.charCodeAt(u),i|=0;return f.colors[Math.abs(i)%f.colors.length]},f.enable(f.load()),f}},7007:W=>{var T,m=typeof Reflect=="object"?Reflect:null,$=m&&typeof m.apply=="function"?m.apply:function(b,q,O){return Function.prototype.apply.call(b,q,O)};T=m&&typeof m.ownKeys=="function"?m.ownKeys:Object.getOwnPropertySymbols?function(b){return Object.getOwnPropertyNames(b).concat(Object.getOwnPropertySymbols(b))}:function(b){return Object.getOwnPropertyNames(b)};var f=Number.isNaN||function(b){return b!=b};function S(){S.init.call(this)}W.exports=S,W.exports.once=function(b,q){return new Promise(function(O,F){function ne(x){b.removeListener(q,w),F(x)}function w(){typeof b.removeListener=="function"&&b.removeListener("error",ne),O([].slice.call(arguments))}P(b,q,w,{once:!0}),q!=="error"&&function(x,Q,B){typeof x.on=="function"&&P(x,"error",Q,{once:!0})}(b,ne)})},S.EventEmitter=S,S.prototype._events=void 0,S.prototype._eventsCount=0,S.prototype._maxListeners=void 0;var E=10;function j(b){if(typeof b!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof b)}function i(b){return b._maxListeners===void 0?S.defaultMaxListeners:b._maxListeners}function u(b,q,O,F){var ne,w,x,Q;if(j(O),(w=b._events)===void 0?(w=b._events=Object.create(null),b._eventsCount=0):(w.newListener!==void 0&&(b.emit("newListener",q,O.listener?O.listener:O),w=b._events),x=w[q]),x===void 0)x=w[q]=O,++b._eventsCount;else if(typeof x=="function"?x=w[q]=F?[O,x]:[x,O]:F?x.unshift(O):x.push(O),(ne=i(b))>0&&x.length>ne&&!x.warned){x.warned=!0;var B=new Error("Possible EventEmitter memory leak detected. "+x.length+" "+String(q)+" listeners added. Use emitter.setMaxListeners() to increase limit");B.name="MaxListenersExceededWarning",B.emitter=b,B.type=q,B.count=x.length,Q=B,console&&console.warn&&console.warn(Q)}return b}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function h(b,q,O){var F={fired:!1,wrapFn:void 0,target:b,type:q,listener:O},ne=c.bind(F);return ne.listener=O,F.wrapFn=ne,ne}function C(b,q,O){var F=b._events;if(F===void 0)return[];var ne=F[q];return ne===void 0?[]:typeof ne=="function"?O?[ne.listener||ne]:[ne]:O?function(w){for(var x=new Array(w.length),Q=0;Q<x.length;++Q)x[Q]=w[Q].listener||w[Q];return x}(ne):y(ne,ne.length)}function N(b){var q=this._events;if(q!==void 0){var O=q[b];if(typeof O=="function")return 1;if(O!==void 0)return O.length}return 0}function y(b,q){for(var O=new Array(q),F=0;F<q;++F)O[F]=b[F];return O}function P(b,q,O,F){if(typeof b.on=="function")F.once?b.once(q,O):b.on(q,O);else{if(typeof b.addEventListener!="function")throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof b);b.addEventListener(q,function ne(w){F.once&&b.removeEventListener(q,ne),O(w)})}}Object.defineProperty(S,"defaultMaxListeners",{enumerable:!0,get:function(){return E},set:function(b){if(typeof b!="number"||b<0||f(b))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+b+".");E=b}}),S.init=function(){this._events!==void 0&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},S.prototype.setMaxListeners=function(b){if(typeof b!="number"||b<0||f(b))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+b+".");return this._maxListeners=b,this},S.prototype.getMaxListeners=function(){return i(this)},S.prototype.emit=function(b){for(var q=[],O=1;O<arguments.length;O++)q.push(arguments[O]);var F=b==="error",ne=this._events;if(ne!==void 0)F=F&&ne.error===void 0;else if(!F)return!1;if(F){var w;if(q.length>0&&(w=q[0]),w instanceof Error)throw w;var x=new Error("Unhandled error."+(w?" ("+w.message+")":""));throw x.context=w,x}var Q=ne[b];if(Q===void 0)return!1;if(typeof Q=="function")$(Q,this,q);else{var B=Q.length,M=y(Q,B);for(O=0;O<B;++O)$(M[O],this,q)}return!0},S.prototype.addListener=function(b,q){return u(this,b,q,!1)},S.prototype.on=S.prototype.addListener,S.prototype.prependListener=function(b,q){return u(this,b,q,!0)},S.prototype.once=function(b,q){return j(q),this.on(b,h(this,b,q)),this},S.prototype.prependOnceListener=function(b,q){return j(q),this.prependListener(b,h(this,b,q)),this},S.prototype.removeListener=function(b,q){var O,F,ne,w,x;if(j(q),(F=this._events)===void 0)return this;if((O=F[b])===void 0)return this;if(O===q||O.listener===q)--this._eventsCount==0?this._events=Object.create(null):(delete F[b],F.removeListener&&this.emit("removeListener",b,O.listener||q));else if(typeof O!="function"){for(ne=-1,w=O.length-1;w>=0;w--)if(O[w]===q||O[w].listener===q){x=O[w].listener,ne=w;break}if(ne<0)return this;ne===0?O.shift():function(Q,B){for(;B+1<Q.length;B++)Q[B]=Q[B+1];Q.pop()}(O,ne),O.length===1&&(F[b]=O[0]),F.removeListener!==void 0&&this.emit("removeListener",b,x||q)}return this},S.prototype.off=S.prototype.removeListener,S.prototype.removeAllListeners=function(b){var q,O,F;if((O=this._events)===void 0)return this;if(O.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):O[b]!==void 0&&(--this._eventsCount==0?this._events=Object.create(null):delete O[b]),this;if(arguments.length===0){var ne,w=Object.keys(O);for(F=0;F<w.length;++F)(ne=w[F])!=="removeListener"&&this.removeAllListeners(ne);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(typeof(q=O[b])=="function")this.removeListener(b,q);else if(q!==void 0)for(F=q.length-1;F>=0;F--)this.removeListener(b,q[F]);return this},S.prototype.listeners=function(b){return C(this,b,!0)},S.prototype.rawListeners=function(b){return C(this,b,!1)},S.listenerCount=function(b,q){return typeof b.listenerCount=="function"?b.listenerCount(q):N.call(b,q)},S.prototype.listenerCount=N,S.prototype.eventNames=function(){return this._eventsCount>0?T(this._events):[]}},251:(W,T)=>{T.read=function(m,$,f,S,E){var j,i,u=8*E-S-1,c=(1<<u)-1,h=c>>1,C=-7,N=f?E-1:0,y=f?-1:1,P=m[$+N];for(N+=y,j=P&(1<<-C)-1,P>>=-C,C+=u;C>0;j=256*j+m[$+N],N+=y,C-=8);for(i=j&(1<<-C)-1,j>>=-C,C+=S;C>0;i=256*i+m[$+N],N+=y,C-=8);if(j===0)j=1-h;else{if(j===c)return i?NaN:1/0*(P?-1:1);i+=Math.pow(2,S),j-=h}return(P?-1:1)*i*Math.pow(2,j-S)},T.write=function(m,$,f,S,E,j){var i,u,c,h=8*j-E-1,C=(1<<h)-1,N=C>>1,y=E===23?Math.pow(2,-24)-Math.pow(2,-77):0,P=S?0:j-1,b=S?1:-1,q=$<0||$===0&&1/$<0?1:0;for($=Math.abs($),isNaN($)||$===1/0?(u=isNaN($)?1:0,i=C):(i=Math.floor(Math.log($)/Math.LN2),$*(c=Math.pow(2,-i))<1&&(i--,c*=2),($+=i+N>=1?y/c:y*Math.pow(2,1-N))*c>=2&&(i++,c/=2),i+N>=C?(u=0,i=C):i+N>=1?(u=($*c-1)*Math.pow(2,E),i+=N):(u=$*Math.pow(2,N-1)*Math.pow(2,E),i=0));E>=8;m[f+P]=255&u,P+=b,u/=256,E-=8);for(i=i<<E|u,h+=E;h>0;m[f+P]=255&i,P+=b,i/=256,h-=8);m[f+P-b]|=128*q}},7034:(W,T,m)=>{const{isArray:$,isObject:f,isString:S}=m(7382),{asArray:E}=m(9263),{prependBase:j}=m(470),i=m(2207),u=m(7532);function c(C){throw new i("Invalid JSON-LD syntax; @context must be an object.","jsonld.SyntaxError",{code:"invalid local context",context:C})}function h({context:C,base:N}){if(!C)return;const y=C["@context"];if(S(y))C["@context"]=j(N,y);else if($(y))for(let P=0;P<y.length;++P){const b=y[P];S(b)?y[P]=j(N,b):f(b)&&h({context:{"@context":b},base:N})}else if(f(y))for(const P in y)h({context:y[P],base:N})}W.exports=class{constructor({sharedCache:C}){this.perOpCache=new Map,this.sharedCache=C}async resolve({activeCtx:C,context:N,documentLoader:y,base:P,cycles:b=new Set}){N&&f(N)&&N["@context"]&&(N=N["@context"]),N=E(N);const q=[];for(const O of N){if(S(O)){let w=this._get(O);w||(w=await this._resolveRemoteContext({activeCtx:C,url:O,documentLoader:y,base:P,cycles:b})),$(w)?q.push(...w):q.push(w);continue}if(O===null){q.push(new u({document:null}));continue}f(O)||c(N);const F=JSON.stringify(O);let ne=this._get(F);ne||(ne=new u({document:O}),this._cacheResolvedContext({key:F,resolved:ne,tag:"static"})),q.push(ne)}return q}_get(C){let N=this.perOpCache.get(C);if(!N){const y=this.sharedCache.get(C);y&&(N=y.get("static"),N&&this.perOpCache.set(C,N))}return N}_cacheResolvedContext({key:C,resolved:N,tag:y}){if(this.perOpCache.set(C,N),y!==void 0){let P=this.sharedCache.get(C);P||(P=new Map,this.sharedCache.set(C,P)),P.set(y,N)}return N}async _resolveRemoteContext({activeCtx:C,url:N,documentLoader:y,base:P,cycles:b}){N=j(P,N);const{context:q,remoteDoc:O}=await this._fetchContext({activeCtx:C,url:N,documentLoader:y,cycles:b});h({context:q,base:P=O.documentUrl||N});const F=await this.resolve({activeCtx:C,context:q,documentLoader:y,base:P,cycles:b});return this._cacheResolvedContext({key:N,resolved:F,tag:O.tag}),F}async _fetchContext({activeCtx:C,url:N,documentLoader:y,cycles:P}){if(P.size>10)throw new i("Maximum number of @context URLs exceeded.","jsonld.ContextUrlError",{code:C.processingMode==="json-ld-1.0"?"loading remote context failed":"context overflow",max:10});if(P.has(N))throw new i("Cyclical @context URLs detected.","jsonld.ContextUrlError",{code:C.processingMode==="json-ld-1.0"?"recursive context inclusion":"context overflow",url:N});let b,q;P.add(N);try{q=await y(N),b=q.document||null,S(b)&&(b=JSON.parse(b))}catch(O){throw new i("Dereferencing a URL did not result in a valid JSON-LD object. Possible causes are an inaccessible URL perhaps due to a same-origin policy (ensure the server uses CORS if you are using client-side JavaScript), too many redirects, a non-JSON response, or more than one HTTP Link Header was provided for a remote context.","jsonld.InvalidUrl",{code:"loading remote context failed",url:N,cause:O})}if(!f(b))throw new i("Dereferencing a URL did not result in a JSON object. The response was valid JSON, but it was not a JSON object.","jsonld.InvalidUrl",{code:"invalid remote context",url:N});return b="@context"in b?{"@context":b["@context"]}:{"@context":{}},q.contextUrl&&($(b["@context"])||(b["@context"]=[b["@context"]]),b["@context"].push(q.contextUrl)),{context:b,remoteDoc:q}}}},2207:W=>{W.exports=class extends Error{constructor(T="An unspecified JSON-LD error occurred.",m="jsonld.Error",$={}){super(T),this.name=m,this.message=T,this.details=$}}},5445:W=>{W.exports=T=>{class m{toString(){return"[object JsonLdProcessor]"}}return Object.defineProperty(m,"prototype",{writable:!1,enumerable:!1}),Object.defineProperty(m.prototype,"constructor",{writable:!0,enumerable:!1,configurable:!0,value:m}),m.compact=function($,f){return arguments.length<2?Promise.reject(new TypeError("Could not compact, too few arguments.")):T.compact($,f)},m.expand=function($){return arguments.length<1?Promise.reject(new TypeError("Could not expand, too few arguments.")):T.expand($)},m.flatten=function($){return arguments.length<1?Promise.reject(new TypeError("Could not flatten, too few arguments.")):T.flatten($)},m}},8229:(W,T,m)=>{W.exports=m(989).NQuads},3743:W=>{W.exports=class{constructor(){this._requests={}}wrapLoader(T){const m=this;return m._loader=T,function(){return m.add.apply(m,arguments)}}async add(T){let m=this._requests[T];if(m)return Promise.resolve(m);m=this._requests[T]=this._loader(T);try{return await m}finally{delete this._requests[T]}}}},7532:(W,T,m)=>{const $=m(9749);W.exports=class{constructor({document:f}){this.document=f,this.cache=new $({max:10})}getProcessed(f){return this.cache.get(f)}setProcessed(f,S){this.cache.set(f,S)}}},1058:(W,T,m)=>{const $=m(2207),{isArray:f,isObject:S,isString:E,isUndefined:j}=m(7382),{isList:i,isValue:u,isGraph:c,isSimpleGraph:h,isSubjectReference:C}=m(3978),{expandIri:N,getContextValue:y,isKeyword:P,process:b,processingMode:q}=m(1972),{removeBase:O,prependBase:F}=m(470),{REGEX_KEYWORD:ne,addValue:w,asArray:x,compareShortestLeast:Q}=m(9263),B={};function M(g,D,L){if(N(g,D,{vocab:!0},L)!=="@nest")throw new $("JSON-LD compact error; nested property must have an @nest value resolving to @nest.","jsonld.SyntaxError",{code:"invalid @nest value"})}W.exports=B,B.compact=async({activeCtx:g,activeProperty:D=null,element:L,options:de={}})=>{if(f(L)){let me=[];for(let k=0;k<L.length;++k){const G=await B.compact({activeCtx:g,activeProperty:D,element:L[k],options:de});G!==null&&me.push(G)}return de.compactArrays&&me.length===1&&(y(g,D,"@container")||[]).length===0&&(me=me[0]),me}const pe=y(g,D,"@context");if(j(pe)||(g=await b({activeCtx:g,localCtx:pe,propagate:!0,overrideProtected:!0,options:de})),S(L)){if(de.link&&"@id"in L&&de.link.hasOwnProperty(L["@id"])){const te=de.link[L["@id"]];for(let K=0;K<te.length;++K)if(te[K].expanded===L)return te[K].compacted}if(u(L)||C(L)){const te=B.compactValue({activeCtx:g,activeProperty:D,value:L,options:de});return de.link&&C(L)&&(de.link.hasOwnProperty(L["@id"])||(de.link[L["@id"]]=[]),de.link[L["@id"]].push({expanded:L,compacted:te})),te}if(i(L)&&(y(g,D,"@container")||[]).includes("@list"))return B.compact({activeCtx:g,activeProperty:D,element:L["@list"],options:de});const me=D==="@reverse",k={},G=g;u(L)||C(L)||(g=g.revertToPreviousContext());const A=y(G,D,"@context");j(A)||(g=await b({activeCtx:g,localCtx:A,propagate:!0,overrideProtected:!0,options:de})),de.link&&"@id"in L&&(de.link.hasOwnProperty(L["@id"])||(de.link[L["@id"]]=[]),de.link[L["@id"]].push({expanded:L,compacted:k}));let z=L["@type"]||[];z.length>1&&(z=Array.from(z).sort());const Y=g;for(const te of z){const K=B.compactIri({activeCtx:Y,iri:te,relativeTo:{vocab:!0}}),ue=y(G,K,"@context");j(ue)||(g=await b({activeCtx:g,localCtx:ue,options:de,propagate:!1}))}const Z=Object.keys(L).sort();for(const te of Z){const K=L[te];if(te!=="@id")if(te!=="@type")if(te!=="@reverse")if(te!=="@preserve")if(te!=="@index")if(te!=="@graph"&&te!=="@list"&&te!=="@included"&&P(te)){const ue=B.compactIri({activeCtx:g,iri:te,relativeTo:{vocab:!0}});w(k,ue,K)}else{if(!f(K))throw new $("JSON-LD expansion error; expanded value must be an array.","jsonld.SyntaxError");if(K.length===0){const ue=B.compactIri({activeCtx:g,iri:te,value:K,relativeTo:{vocab:!0},reverse:me}),Ne=g.mappings.has(ue)?g.mappings.get(ue)["@nest"]:null;let ge=k;Ne&&(M(g,Ne,de),S(k[Ne])||(k[Ne]={}),ge=k[Ne]),w(ge,ue,K,{propertyIsArray:!0})}for(const ue of K){const Ne=B.compactIri({activeCtx:g,iri:te,value:ue,relativeTo:{vocab:!0},reverse:me}),ge=g.mappings.has(Ne)?g.mappings.get(Ne)["@nest"]:null;let ce=k;ge&&(M(g,ge,de),S(k[ge])||(k[ge]={}),ce=k[ge]);const X=y(g,Ne,"@container")||[],V=c(ue),re=i(ue);let se;re?se=ue["@list"]:V&&(se=ue["@graph"]);let ee=await B.compact({activeCtx:g,activeProperty:Ne,element:re||V?se:ue,options:de});if(re){if(f(ee)||(ee=[ee]),X.includes("@list")){w(ce,Ne,ee,{valueIsArray:!0,allowDuplicate:!0});continue}ee={[B.compactIri({activeCtx:g,iri:"@list",relativeTo:{vocab:!0}})]:ee},"@index"in ue&&(ee[B.compactIri({activeCtx:g,iri:"@index",relativeTo:{vocab:!0}})]=ue["@index"])}if(V)if(X.includes("@graph")&&(X.includes("@id")||X.includes("@index")&&h(ue))){let J;ce.hasOwnProperty(Ne)?J=ce[Ne]:ce[Ne]=J={};const le=(X.includes("@id")?ue["@id"]:ue["@index"])||B.compactIri({activeCtx:g,iri:"@none",relativeTo:{vocab:!0}});w(J,le,ee,{propertyIsArray:!de.compactArrays||X.includes("@set")})}else X.includes("@graph")&&h(ue)?(f(ee)&&ee.length>1&&(ee={"@included":ee}),w(ce,Ne,ee,{propertyIsArray:!de.compactArrays||X.includes("@set")})):(f(ee)&&ee.length===1&&de.compactArrays&&(ee=ee[0]),ee={[B.compactIri({activeCtx:g,iri:"@graph",relativeTo:{vocab:!0}})]:ee},"@id"in ue&&(ee[B.compactIri({activeCtx:g,iri:"@id",relativeTo:{vocab:!0}})]=ue["@id"]),"@index"in ue&&(ee[B.compactIri({activeCtx:g,iri:"@index",relativeTo:{vocab:!0}})]=ue["@index"]),w(ce,Ne,ee,{propertyIsArray:!de.compactArrays||X.includes("@set")}));else if(X.includes("@language")||X.includes("@index")||X.includes("@id")||X.includes("@type")){let J,le;if(ce.hasOwnProperty(Ne)?J=ce[Ne]:ce[Ne]=J={},X.includes("@language"))u(ee)&&(ee=ee["@value"]),le=ue["@language"];else if(X.includes("@index")){const he=y(g,Ne,"@index")||"@index",fe=B.compactIri({activeCtx:g,iri:he,relativeTo:{vocab:!0}});if(he==="@index")le=ue["@index"],delete ee[fe];else{let ye;if([le,...ye]=x(ee[he]||[]),E(le))switch(ye.length){case 0:delete ee[he];break;case 1:ee[he]=ye[0];break;default:ee[he]=ye}else le=null}}else if(X.includes("@id")){const he=B.compactIri({activeCtx:g,iri:"@id",relativeTo:{vocab:!0}});le=ee[he],delete ee[he]}else if(X.includes("@type")){const he=B.compactIri({activeCtx:g,iri:"@type",relativeTo:{vocab:!0}});let fe;switch([le,...fe]=x(ee[he]||[]),fe.length){case 0:delete ee[he];break;case 1:ee[he]=fe[0];break;default:ee[he]=fe}Object.keys(ee).length===1&&"@id"in ue&&(ee=await B.compact({activeCtx:g,activeProperty:Ne,element:{"@id":ue["@id"]},options:de}))}le||(le=B.compactIri({activeCtx:g,iri:"@none",relativeTo:{vocab:!0}})),w(J,le,ee,{propertyIsArray:X.includes("@set")})}else{const J=!de.compactArrays||X.includes("@set")||X.includes("@list")||f(ee)&&ee.length===0||te==="@list"||te==="@graph";w(ce,Ne,ee,{propertyIsArray:J})}}}else{if((y(g,D,"@container")||[]).includes("@index"))continue;const ue=B.compactIri({activeCtx:g,iri:te,relativeTo:{vocab:!0}});w(k,ue,K)}else{const ue=await B.compact({activeCtx:g,activeProperty:D,element:K,options:de});f(ue)&&ue.length===0||w(k,te,ue)}else{const ue=await B.compact({activeCtx:g,activeProperty:"@reverse",element:K,options:de});for(const Ne in ue)if(g.mappings.has(Ne)&&g.mappings.get(Ne).reverse){const ge=ue[Ne],ce=(y(g,Ne,"@container")||[]).includes("@set")||!de.compactArrays;w(k,Ne,ge,{propertyIsArray:ce}),delete ue[Ne]}if(Object.keys(ue).length>0){const Ne=B.compactIri({activeCtx:g,iri:te,relativeTo:{vocab:!0}});w(k,Ne,ue)}}else{let ue=x(K).map(ce=>B.compactIri({activeCtx:G,iri:ce,relativeTo:{vocab:!0}}));ue.length===1&&(ue=ue[0]);const Ne=B.compactIri({activeCtx:g,iri:"@type",relativeTo:{vocab:!0}}),ge=(y(g,Ne,"@container")||[]).includes("@set")&&q(g,1.1)||f(ue)&&K.length===0;w(k,Ne,ue,{propertyIsArray:ge})}else{let ue=x(K).map(Ne=>B.compactIri({activeCtx:g,iri:Ne,relativeTo:{vocab:!1},base:de.base}));ue.length===1&&(ue=ue[0]),k[B.compactIri({activeCtx:g,iri:"@id",relativeTo:{vocab:!0}})]=ue}}return k}return L},B.compactIri=({activeCtx:g,iri:D,value:L=null,relativeTo:de={vocab:!1},reverse:pe=!1,base:me=null})=>{if(D===null)return D;g.isPropertyTermScoped&&g.previousContext&&(g=g.previousContext);const k=g.getInverse();if(P(D)&&D in k&&"@none"in k[D]&&"@type"in k[D]["@none"]&&"@none"in k[D]["@none"]["@type"])return k[D]["@none"]["@type"]["@none"];if(de.vocab&&D in k){const Z=g["@language"]||"@none",te=[];S(L)&&"@index"in L&&!("@graph"in L)&&te.push("@index","@index@set"),S(L)&&"@preserve"in L&&(L=L["@preserve"][0]),c(L)?("@index"in L&&te.push("@graph@index","@graph@index@set","@index","@index@set"),"@id"in L&&te.push("@graph@id","@graph@id@set"),te.push("@graph","@graph@set","@set"),"@index"in L||te.push("@graph@index","@graph@index@set","@index","@index@set"),"@id"in L||te.push("@graph@id","@graph@id@set")):S(L)&&!u(L)&&te.push("@id","@id@set","@type","@set@type");let K="@language",ue="@null";if(pe)K="@type",ue="@reverse",te.push("@set");else if(i(L)){"@index"in L||te.push("@list");const ge=L["@list"];if(ge.length===0)K="@any",ue="@none";else{let ce=ge.length===0?Z:null,X=null;for(let V=0;V<ge.length;++V){const re=ge[V];let se="@none",ee="@none";if(u(re)?"@direction"in re?se=`${(re["@language"]||"").toLowerCase()}_${re["@direction"]}`:"@language"in re?se=re["@language"].toLowerCase():"@type"in re?ee=re["@type"]:se="@null":ee="@id",ce===null?ce=se:se!==ce&&u(re)&&(ce="@none"),X===null?X=ee:ee!==X&&(X="@none"),ce==="@none"&&X==="@none")break}ce=ce||"@none",X=X||"@none",X!=="@none"?(K="@type",ue=X):ue=ce}}else{if(u(L))if("@language"in L&&!("@index"in L)){te.push("@language","@language@set"),ue=L["@language"];const ge=L["@direction"];ge&&(ue=`${ue}_${ge}`)}else"@direction"in L&&!("@index"in L)?ue=`_${L["@direction"]}`:"@type"in L&&(K="@type",ue=L["@type"]);else K="@type",ue="@id";te.push("@set")}te.push("@none"),S(L)&&!("@index"in L)&&te.push("@index","@index@set"),u(L)&&Object.keys(L).length===1&&te.push("@language","@language@set");const Ne=function(ge,ce,X,V,re,se){se===null&&(se="@null");const ee=[];if((se==="@id"||se==="@reverse")&&S(X)&&"@id"in X){se==="@reverse"&&ee.push("@reverse");const le=B.compactIri({activeCtx:ge,iri:X["@id"],relativeTo:{vocab:!0}});ge.mappings.has(le)&&ge.mappings.get(le)&&ge.mappings.get(le)["@id"]===X["@id"]?ee.push.apply(ee,["@vocab","@id"]):ee.push.apply(ee,["@id","@vocab"])}else{ee.push(se);const le=ee.find(he=>he.includes("_"));le&&ee.push(le.replace(/^[^_]+_/,"_"))}ee.push("@none");const J=ge.inverse[ce];for(const le of V){if(!(le in J))continue;const he=J[le][re];for(const fe of ee)if(fe in he)return he[fe]}return null}(g,D,L,te,K,ue);if(Ne!==null)return Ne}if(de.vocab&&"@vocab"in g){const Z=g["@vocab"];if(D.indexOf(Z)===0&&D!==Z){const te=D.substr(Z.length);if(!g.mappings.has(te))return te}}let G=null;const A=[];let z=g.fastCurieMap;const Y=D.length-1;for(let Z=0;Z<Y&&D[Z]in z;++Z)z=z[D[Z]],""in z&&A.push(z[""][0]);for(let Z=A.length-1;Z>=0;--Z){const te=A[Z],K=te.terms;for(const ue of K){const Ne=ue+":"+D.substr(te.iri.length);g.mappings.get(ue)._prefix&&(!g.mappings.has(Ne)||L===null&&g.mappings.get(Ne)["@id"]===D)&&(G===null||Q(Ne,G)<0)&&(G=Ne)}}if(G!==null)return G;for(const[Z,te]of g.mappings)if(te&&te._prefix&&D.startsWith(Z+":"))throw new $(`Absolute IRI "${D}" confused with prefix "${Z}".`,"jsonld.SyntaxError",{code:"IRI confused with prefix",context:g});if(!de.vocab){if("@base"in g){if(g["@base"]){const Z=O(F(me,g["@base"]),D);return ne.test(Z)?`./${Z}`:Z}return D}return O(me,D)}return D},B.compactValue=({activeCtx:g,activeProperty:D,value:L,options:de})=>{if(u(L)){const G=y(g,D,"@type"),A=y(g,D,"@language"),z=y(g,D,"@direction"),Y=y(g,D,"@container")||[],Z="@index"in L&&!Y.includes("@index");if(!Z&&G!=="@none"&&(L["@type"]===G||"@language"in L&&L["@language"]===A&&"@direction"in L&&L["@direction"]===z||"@language"in L&&L["@language"]===A||"@direction"in L&&L["@direction"]===z))return L["@value"];const te=Object.keys(L).length,K=te===1||te===2&&"@index"in L&&!Z,ue="@language"in g,Ne=E(L["@value"]),ge=g.mappings.has(D)&&g.mappings.get(D)["@language"]===null;if(K&&G!=="@none"&&(!ue||!Ne||ge))return L["@value"];const ce={};return Z&&(ce[B.compactIri({activeCtx:g,iri:"@index",relativeTo:{vocab:!0}})]=L["@index"]),"@type"in L?ce[B.compactIri({activeCtx:g,iri:"@type",relativeTo:{vocab:!0}})]=B.compactIri({activeCtx:g,iri:L["@type"],relativeTo:{vocab:!0}}):"@language"in L&&(ce[B.compactIri({activeCtx:g,iri:"@language",relativeTo:{vocab:!0}})]=L["@language"]),"@direction"in L&&(ce[B.compactIri({activeCtx:g,iri:"@direction",relativeTo:{vocab:!0}})]=L["@direction"]),ce[B.compactIri({activeCtx:g,iri:"@value",relativeTo:{vocab:!0}})]=L["@value"],ce}const pe=N(g,D,{vocab:!0},de),me=y(g,D,"@type"),k=B.compactIri({activeCtx:g,iri:L["@id"],relativeTo:{vocab:me==="@vocab"},base:de.base});return me==="@id"||me==="@vocab"||pe==="@graph"?k:{[B.compactIri({activeCtx:g,iri:"@id",relativeTo:{vocab:!0}})]:k}}},9378:W=>{const T="http://www.w3.org/1999/02/22-rdf-syntax-ns#",m="http://www.w3.org/2001/XMLSchema#";W.exports={LINK_HEADER_REL:"http://www.w3.org/ns/json-ld#context",LINK_HEADER_CONTEXT:"http://www.w3.org/ns/json-ld#context",RDF:T,RDF_LIST:T+"List",RDF_FIRST:T+"first",RDF_REST:T+"rest",RDF_NIL:T+"nil",RDF_TYPE:T+"type",RDF_PLAIN_LITERAL:T+"PlainLiteral",RDF_XML_LITERAL:T+"XMLLiteral",RDF_JSON_LITERAL:T+"JSON",RDF_OBJECT:T+"object",RDF_LANGSTRING:T+"langString",XSD:m,XSD_BOOLEAN:m+"boolean",XSD_DOUBLE:m+"double",XSD_INTEGER:m+"integer",XSD_STRING:m+"string"}},1972:(W,T,m)=>{const $=m(9263),f=m(2207),{isArray:S,isObject:E,isString:j,isUndefined:i}=m(7382),{isAbsolute:u,isRelative:c,prependBase:h}=m(470),{handleEvent:C}=m(2246),{REGEX_BCP47:N,REGEX_KEYWORD:y,asArray:P,compareShortestLeast:b}=m(9263),q=new Map,O={};function F(w,x,Q,B,M,g){if(x===null||!j(x)||O.isKeyword(x))return x;if(x.match(y))return null;if(B&&B.hasOwnProperty(x)&&M.get(x)!==!0&&O.createTermDefinition({activeCtx:w,localCtx:B,term:x,defined:M,options:g}),(Q=Q||{}).vocab){const L=w.mappings.get(x);if(L===null)return null;if(E(L)&&"@id"in L)return L["@id"]}const D=x.indexOf(":");if(D>0){const L=x.substr(0,D),de=x.substr(D+1);if(L==="_"||de.indexOf("//")===0)return x;B&&B.hasOwnProperty(L)&&O.createTermDefinition({activeCtx:w,localCtx:B,term:L,defined:M,options:g});const pe=w.mappings.get(L);if(pe&&pe._prefix)return pe["@id"]+de;if(u(x))return x}if(Q.vocab&&"@vocab"in w)x=w["@vocab"]+x;else if(Q.base){let L,de;"@base"in w?w["@base"]?(de=h(g.base,w["@base"]),L=h(de,x)):(de=w["@base"],L=x):(de=g.base,L=h(g.base,x)),x=L}return x}function ne(w,x){if(!w||typeof w!="object"||!x||typeof x!="object")return w===x;const Q=Array.isArray(w);if(Q!==Array.isArray(x))return!1;if(Q){if(w.length!==x.length)return!1;for(let g=0;g<w.length;++g)if(!ne(w[g],x[g]))return!1;return!0}const B=Object.keys(w),M=Object.keys(x);if(B.length!==M.length)return!1;for(const g in w){let D=w[g],L=x[g];if(g==="@container"&&Array.isArray(D)&&Array.isArray(L)&&(D=D.slice().sort(),L=L.slice().sort()),!ne(D,L))return!1}return!0}W.exports=O,O.process=async({activeCtx:w,localCtx:x,options:Q,propagate:B=!0,overrideProtected:M=!1,cycles:g=new Set})=>{if(E(x)&&"@context"in x&&S(x["@context"])&&(x=x["@context"]),P(x).length===0)return w;const D=[],L=[({event:k,next:G})=>{D.push(k),G()}];Q.eventHandler&&L.push(Q.eventHandler);const de=Q;Q={...Q,eventHandler:L};const pe=await Q.contextResolver.resolve({activeCtx:w,context:x,documentLoader:Q.documentLoader,base:Q.base});E(pe[0].document)&&typeof pe[0].document["@propagate"]=="boolean"&&(B=pe[0].document["@propagate"]);let me=w;B||me.previousContext||(me=me.clone(),me.previousContext=w);for(const k of pe){let{document:G}=k;if(w=me,G===null){if(!M&&Object.keys(w.protected).length!==0)throw new f("Tried to nullify a context with protected terms outside of a term definition.","jsonld.SyntaxError",{code:"invalid context nullification"});me=w=O.getInitialContext(Q).clone();continue}const A=k.getProcessed(w);if(A){if(de.eventHandler)for(const Y of A.events)C({event:Y,options:de});me=w=A.context;continue}if(E(G)&&"@context"in G&&(G=G["@context"]),!E(G))throw new f("Invalid JSON-LD syntax; @context must be an object.","jsonld.SyntaxError",{code:"invalid local context",context:G});me=me.clone();const z=new Map;if("@version"in G){if(G["@version"]!==1.1)throw new f("Unsupported JSON-LD version: "+G["@version"],"jsonld.UnsupportedVersion",{code:"invalid @version value",context:G});if(w.processingMode&&w.processingMode==="json-ld-1.0")throw new f("@version: "+G["@version"]+" not compatible with "+w.processingMode,"jsonld.ProcessingModeConflict",{code:"processing mode conflict",context:G});me.processingMode="json-ld-1.1",me["@version"]=G["@version"],z.set("@version",!0)}if(me.processingMode=me.processingMode||w.processingMode,"@base"in G){let Y=G["@base"];if(!(Y===null||u(Y))){if(!c(Y))throw new f('Invalid JSON-LD syntax; the value of "@base" in a @context must be an absolute IRI, a relative IRI, or null.',"jsonld.SyntaxError",{code:"invalid base IRI",context:G});Y=h(me["@base"],Y)}me["@base"]=Y,z.set("@base",!0)}if("@vocab"in G){const Y=G["@vocab"];if(Y===null)delete me["@vocab"];else{if(!j(Y))throw new f('Invalid JSON-LD syntax; the value of "@vocab" in a @context must be a string or null.',"jsonld.SyntaxError",{code:"invalid vocab mapping",context:G});if(!u(Y)&&O.processingMode(me,1))throw new f('Invalid JSON-LD syntax; the value of "@vocab" in a @context must be an absolute IRI.',"jsonld.SyntaxError",{code:"invalid vocab mapping",context:G});{const Z=F(me,Y,{vocab:!0,base:!0},void 0,void 0,Q);u(Z)||Q.eventHandler&&C({event:{type:["JsonLdEvent"],code:"relative @vocab reference",level:"warning",message:"Relative @vocab reference found.",details:{vocab:Z}},options:Q}),me["@vocab"]=Z}}z.set("@vocab",!0)}if("@language"in G){const Y=G["@language"];if(Y===null)delete me["@language"];else{if(!j(Y))throw new f('Invalid JSON-LD syntax; the value of "@language" in a @context must be a string or null.',"jsonld.SyntaxError",{code:"invalid default language",context:G});Y.match(N)||Q.eventHandler&&C({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:Y}},options:Q}),me["@language"]=Y.toLowerCase()}z.set("@language",!0)}if("@direction"in G){const Y=G["@direction"];if(w.processingMode==="json-ld-1.0")throw new f("Invalid JSON-LD syntax; @direction not compatible with "+w.processingMode,"jsonld.SyntaxError",{code:"invalid context member",context:G});if(Y===null)delete me["@direction"];else{if(Y!=="ltr"&&Y!=="rtl")throw new f('Invalid JSON-LD syntax; the value of "@direction" in a @context must be null, "ltr", or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",context:G});me["@direction"]=Y}z.set("@direction",!0)}if("@propagate"in G){const Y=G["@propagate"];if(w.processingMode==="json-ld-1.0")throw new f("Invalid JSON-LD syntax; @propagate not compatible with "+w.processingMode,"jsonld.SyntaxError",{code:"invalid context entry",context:G});if(typeof Y!="boolean")throw new f("Invalid JSON-LD syntax; @propagate value must be a boolean.","jsonld.SyntaxError",{code:"invalid @propagate value",context:x});z.set("@propagate",!0)}if("@import"in G){const Y=G["@import"];if(w.processingMode==="json-ld-1.0")throw new f("Invalid JSON-LD syntax; @import not compatible with "+w.processingMode,"jsonld.SyntaxError",{code:"invalid context entry",context:G});if(!j(Y))throw new f("Invalid JSON-LD syntax; @import must be a string.","jsonld.SyntaxError",{code:"invalid @import value",context:x});const Z=await Q.contextResolver.resolve({activeCtx:w,context:Y,documentLoader:Q.documentLoader,base:Q.base});if(Z.length!==1)throw new f("Invalid JSON-LD syntax; @import must reference a single context.","jsonld.SyntaxError",{code:"invalid remote context",context:x});const te=Z[0].getProcessed(w);if(te)G=te;else{const K=Z[0].document;if("@import"in K)throw new f("Invalid JSON-LD syntax: imported context must not include @import.","jsonld.SyntaxError",{code:"invalid context entry",context:x});for(const ue in K)G.hasOwnProperty(ue)||(G[ue]=K[ue]);Z[0].setProcessed(w,G)}z.set("@import",!0)}z.set("@protected",G["@protected"]||!1);for(const Y in G)if(O.createTermDefinition({activeCtx:me,localCtx:G,term:Y,defined:z,options:Q,overrideProtected:M}),E(G[Y])&&"@context"in G[Y]){const Z=G[Y]["@context"];let te=!0;if(j(Z)){const K=h(Q.base,Z);g.has(K)?te=!1:g.add(K)}if(te)try{await O.process({activeCtx:me.clone(),localCtx:G[Y]["@context"],overrideProtected:!0,options:Q,cycles:g})}catch{throw new f("Invalid JSON-LD syntax; invalid scoped context.","jsonld.SyntaxError",{code:"invalid scoped context",context:G[Y]["@context"],term:Y})}}k.setProcessed(w,{context:me,events:D})}return me},O.createTermDefinition=({activeCtx:w,localCtx:x,term:Q,defined:B,options:M,overrideProtected:g=!1})=>{if(B.has(Q)){if(B.get(Q))return;throw new f("Cyclical context definition detected.","jsonld.CyclicalContext",{code:"cyclic IRI mapping",context:x,term:Q})}let D;if(B.set(Q,!1),x.hasOwnProperty(Q)&&(D=x[Q]),Q==="@type"&&E(D)&&(D["@container"]||"@set")==="@set"&&O.processingMode(w,1.1)){const A=["@container","@id","@protected"],z=Object.keys(D);if(z.length===0||z.some(Y=>!A.includes(Y)))throw new f("Invalid JSON-LD syntax; keywords cannot be overridden.","jsonld.SyntaxError",{code:"keyword redefinition",context:x,term:Q})}else{if(O.isKeyword(Q))throw new f("Invalid JSON-LD syntax; keywords cannot be overridden.","jsonld.SyntaxError",{code:"keyword redefinition",context:x,term:Q});if(Q.match(y))return void(M.eventHandler&&C({event:{type:["JsonLdEvent"],code:"reserved term",level:"warning",message:'Terms beginning with "@" are reserved for future use and dropped.',details:{term:Q}},options:M}));if(Q==="")throw new f("Invalid JSON-LD syntax; a term cannot be an empty string.","jsonld.SyntaxError",{code:"invalid term definition",context:x})}const L=w.mappings.get(Q);w.mappings.has(Q)&&w.mappings.delete(Q);let de=!1;if((j(D)||D===null)&&(de=!0,D={"@id":D}),!E(D))throw new f("Invalid JSON-LD syntax; @context term values must be strings or objects.","jsonld.SyntaxError",{code:"invalid term definition",context:x});const pe={};w.mappings.set(Q,pe),pe.reverse=!1;const me=["@container","@id","@language","@reverse","@type"];O.processingMode(w,1.1)&&me.push("@context","@direction","@index","@nest","@prefix","@protected");for(const A in D)if(!me.includes(A))throw new f("Invalid JSON-LD syntax; a term definition must not contain "+A,"jsonld.SyntaxError",{code:"invalid term definition",context:x});const k=Q.indexOf(":");if(pe._termHasColon=k>0,"@reverse"in D){if("@id"in D)throw new f("Invalid JSON-LD syntax; a @reverse term definition must not contain @id.","jsonld.SyntaxError",{code:"invalid reverse property",context:x});if("@nest"in D)throw new f("Invalid JSON-LD syntax; a @reverse term definition must not contain @nest.","jsonld.SyntaxError",{code:"invalid reverse property",context:x});const A=D["@reverse"];if(!j(A))throw new f("Invalid JSON-LD syntax; a @context @reverse value must be a string.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:x});if(A.match(y))return M.eventHandler&&C({event:{type:["JsonLdEvent"],code:"reserved @reverse value",level:"warning",message:'@reverse values beginning with "@" are reserved for future use and dropped.',details:{reverse:A}},options:M}),void(L?w.mappings.set(Q,L):w.mappings.delete(Q));const z=F(w,A,{vocab:!0,base:!1},x,B,M);if(!u(z))throw new f("Invalid JSON-LD syntax; a @context @reverse value must be an absolute IRI or a blank node identifier.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:x});pe["@id"]=z,pe.reverse=!0}else if("@id"in D){let A=D["@id"];if(A&&!j(A))throw new f("Invalid JSON-LD syntax; a @context @id value must be an array of strings or a string.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:x});if(A===null)pe["@id"]=null;else{if(!O.isKeyword(A)&&A.match(y))return M.eventHandler&&C({event:{type:["JsonLdEvent"],code:"reserved @id value",level:"warning",message:'@id values beginning with "@" are reserved for future use and dropped.',details:{id:A}},options:M}),void(L?w.mappings.set(Q,L):w.mappings.delete(Q));if(A!==Q){if(A=F(w,A,{vocab:!0,base:!1},x,B,M),!u(A)&&!O.isKeyword(A))throw new f("Invalid JSON-LD syntax; a @context @id value must be an absolute IRI, a blank node identifier, or a keyword.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:x});if(Q.match(/(?::[^:])|\//)&&F(w,Q,{vocab:!0,base:!1},x,new Map(B).set(Q,!0),M)!==A)throw new f("Invalid JSON-LD syntax; term in form of IRI must expand to definition.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:x});pe["@id"]=A,pe._prefix=de&&!pe._termHasColon&&A.match(/[:\/\?#\[\]@]$/)!==null}}}if(!("@id"in pe))if(pe._termHasColon){const A=Q.substr(0,k);if(x.hasOwnProperty(A)&&O.createTermDefinition({activeCtx:w,localCtx:x,term:A,defined:B,options:M}),w.mappings.has(A)){const z=Q.substr(k+1);pe["@id"]=w.mappings.get(A)["@id"]+z}else pe["@id"]=Q}else if(Q==="@type")pe["@id"]=Q;else{if(!("@vocab"in w))throw new f("Invalid JSON-LD syntax; @context terms must define an @id.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:x,term:Q});pe["@id"]=w["@vocab"]+Q}if((D["@protected"]===!0||B.get("@protected")===!0&&D["@protected"]!==!1)&&(w.protected[Q]=!0,pe.protected=!0),B.set(Q,!0),"@type"in D){let A=D["@type"];if(!j(A))throw new f("Invalid JSON-LD syntax; an @context @type value must be a string.","jsonld.SyntaxError",{code:"invalid type mapping",context:x});if(A==="@json"||A==="@none"){if(O.processingMode(w,1))throw new f(`Invalid JSON-LD syntax; an @context @type value must not be "${A}" in JSON-LD 1.0 mode.`,"jsonld.SyntaxError",{code:"invalid type mapping",context:x})}else if(A!=="@id"&&A!=="@vocab"){if(A=F(w,A,{vocab:!0,base:!1},x,B,M),!u(A))throw new f("Invalid JSON-LD syntax; an @context @type value must be an absolute IRI.","jsonld.SyntaxError",{code:"invalid type mapping",context:x});if(A.indexOf("_:")===0)throw new f("Invalid JSON-LD syntax; an @context @type value must be an IRI, not a blank node identifier.","jsonld.SyntaxError",{code:"invalid type mapping",context:x})}pe["@type"]=A}if("@container"in D){const A=j(D["@container"])?[D["@container"]]:D["@container"]||[],z=["@list","@set","@index","@language"];let Y=!0;const Z=A.includes("@set");if(O.processingMode(w,1.1)){if(z.push("@graph","@id","@type"),A.includes("@list")){if(A.length!==1)throw new f("Invalid JSON-LD syntax; @context @container with @list must have no other values","jsonld.SyntaxError",{code:"invalid container mapping",context:x})}else if(A.includes("@graph")){if(A.some(te=>te!=="@graph"&&te!=="@id"&&te!=="@index"&&te!=="@set"))throw new f("Invalid JSON-LD syntax; @context @container with @graph must have no other values other than @id, @index, and @set","jsonld.SyntaxError",{code:"invalid container mapping",context:x})}else Y&=A.length<=(Z?2:1);if(A.includes("@type")&&(pe["@type"]=pe["@type"]||"@id",!["@id","@vocab"].includes(pe["@type"])))throw new f("Invalid JSON-LD syntax; container: @type requires @type to be @id or @vocab.","jsonld.SyntaxError",{code:"invalid type mapping",context:x})}else Y&=!S(D["@container"]),Y&=A.length<=1;if(Y&=A.every(te=>z.includes(te)),Y&=!(Z&&A.includes("@list")),!Y)throw new f("Invalid JSON-LD syntax; @context @container value must be one of the following: "+z.join(", "),"jsonld.SyntaxError",{code:"invalid container mapping",context:x});if(pe.reverse&&!A.every(te=>["@index","@set"].includes(te)))throw new f("Invalid JSON-LD syntax; @context @container value for a @reverse type definition must be @index or @set.","jsonld.SyntaxError",{code:"invalid reverse property",context:x});pe["@container"]=A}if("@index"in D){if(!("@container"in D)||!pe["@container"].includes("@index"))throw new f(`Invalid JSON-LD syntax; @index without @index in @container: "${D["@index"]}" on term "${Q}".`,"jsonld.SyntaxError",{code:"invalid term definition",context:x});if(!j(D["@index"])||D["@index"].indexOf("@")===0)throw new f(`Invalid JSON-LD syntax; @index must expand to an IRI: "${D["@index"]}" on term "${Q}".`,"jsonld.SyntaxError",{code:"invalid term definition",context:x});pe["@index"]=D["@index"]}if("@context"in D&&(pe["@context"]=D["@context"]),"@language"in D&&!("@type"in D)){let A=D["@language"];if(A!==null&&!j(A))throw new f("Invalid JSON-LD syntax; @context @language value must be a string or null.","jsonld.SyntaxError",{code:"invalid language mapping",context:x});A!==null&&(A=A.toLowerCase()),pe["@language"]=A}if("@prefix"in D){if(Q.match(/:|\//))throw new f("Invalid JSON-LD syntax; @context @prefix used on a compact IRI term","jsonld.SyntaxError",{code:"invalid term definition",context:x});if(O.isKeyword(pe["@id"]))throw new f("Invalid JSON-LD syntax; keywords may not be used as prefixes","jsonld.SyntaxError",{code:"invalid term definition",context:x});if(typeof D["@prefix"]!="boolean")throw new f("Invalid JSON-LD syntax; @context value for @prefix must be boolean","jsonld.SyntaxError",{code:"invalid @prefix value",context:x});pe._prefix=D["@prefix"]===!0}if("@direction"in D){const A=D["@direction"];if(A!==null&&A!=="ltr"&&A!=="rtl")throw new f('Invalid JSON-LD syntax; @direction value must be null, "ltr", or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",context:x});pe["@direction"]=A}if("@nest"in D){const A=D["@nest"];if(!j(A)||A!=="@nest"&&A.indexOf("@")===0)throw new f("Invalid JSON-LD syntax; @context @nest value must be a string which is not a keyword other than @nest.","jsonld.SyntaxError",{code:"invalid @nest value",context:x});pe["@nest"]=A}const G=pe["@id"];if(G==="@context"||G==="@preserve")throw new f("Invalid JSON-LD syntax; @context and @preserve cannot be aliased.","jsonld.SyntaxError",{code:"invalid keyword alias",context:x});if(L&&L.protected&&!g&&(w.protected[Q]=!0,pe.protected=!0,!ne(L,pe)))throw new f("Invalid JSON-LD syntax; tried to redefine a protected term.","jsonld.SyntaxError",{code:"protected term redefinition",context:x,term:Q})},O.expandIri=(w,x,Q,B)=>F(w,x,Q,void 0,void 0,B),O.getInitialContext=w=>{const x=JSON.stringify({processingMode:w.processingMode}),Q=q.get(x);if(Q)return Q;const B={processingMode:w.processingMode,mappings:new Map,inverse:null,getInverse:function(){const D=this;if(D.inverse)return D.inverse;const L=D.inverse={},de=D.fastCurieMap={},pe={},me=(D["@language"]||"@none").toLowerCase(),k=D["@direction"],G=D.mappings,A=[...G.keys()].sort(b);for(const z of A){const Y=G.get(z);if(Y===null)continue;let Z=Y["@container"]||"@none";if(Z=[].concat(Z).sort().join(""),Y["@id"]===null)continue;const te=P(Y["@id"]);for(const K of te){let ue=L[K];const Ne=O.isKeyword(K);if(ue)Ne||Y._termHasColon||pe[K].push(z);else if(L[K]=ue={},!Ne&&!Y._termHasColon){pe[K]=[z];const ge={iri:K,terms:pe[K]};K[0]in de?de[K[0]].push(ge):de[K[0]]=[ge]}if(ue[Z]||(ue[Z]={"@language":{},"@type":{},"@any":{}}),ue=ue[Z],g(z,ue["@any"],"@none"),Y.reverse)g(z,ue["@type"],"@reverse");else if(Y["@type"]==="@none")g(z,ue["@any"],"@none"),g(z,ue["@language"],"@none"),g(z,ue["@type"],"@none");else if("@type"in Y)g(z,ue["@type"],Y["@type"]);else if("@language"in Y&&"@direction"in Y){const ge=Y["@language"],ce=Y["@direction"];g(z,ue["@language"],ge&&ce?`${ge}_${ce}`.toLowerCase():ge?ge.toLowerCase():ce?`_${ce}`:"@null")}else"@language"in Y?g(z,ue["@language"],(Y["@language"]||"@null").toLowerCase()):"@direction"in Y?Y["@direction"]?g(z,ue["@language"],`_${Y["@direction"]}`):g(z,ue["@language"],"@none"):k?(g(z,ue["@language"],`_${k}`),g(z,ue["@language"],"@none"),g(z,ue["@type"],"@none")):(g(z,ue["@language"],me),g(z,ue["@language"],"@none"),g(z,ue["@type"],"@none"))}}for(const z in de)M(de,z,1);return L},clone:function(){const D={};return D.mappings=$.clone(this.mappings),D.clone=this.clone,D.inverse=null,D.getInverse=this.getInverse,D.protected=$.clone(this.protected),this.previousContext&&(D.previousContext=this.previousContext.clone()),D.revertToPreviousContext=this.revertToPreviousContext,"@base"in this&&(D["@base"]=this["@base"]),"@language"in this&&(D["@language"]=this["@language"]),"@vocab"in this&&(D["@vocab"]=this["@vocab"]),D},revertToPreviousContext:function(){return this.previousContext?this.previousContext.clone():this},protected:{}};return q.size===1e4&&q.clear(),q.set(x,B),B;function M(D,L,de){const pe=D[L],me=D[L]={};let k,G;for(const A of pe)k=A.iri,G=de>=k.length?"":k[de],G in me?me[G].push(A):me[G]=[A];for(const A in me)A!==""&&M(me,A,de+1)}function g(D,L,de){L.hasOwnProperty(de)||(L[de]=D)}},O.getContextValue=(w,x,Q)=>{if(x===null)return Q==="@context"?void 0:null;if(w.mappings.has(x)){const B=w.mappings.get(x);if(i(Q))return B;if(B.hasOwnProperty(Q))return B[Q]}return Q==="@language"&&Q in w||Q==="@direction"&&Q in w?w[Q]:Q!=="@context"?null:void 0},O.processingMode=(w,x)=>x.toString()>="1.1"?!w.processingMode||w.processingMode>="json-ld-"+x.toString():w.processingMode==="json-ld-1.0",O.isKeyword=w=>{if(!j(w)||w[0]!=="@")return!1;switch(w){case"@base":case"@container":case"@context":case"@default":case"@direction":case"@embed":case"@explicit":case"@graph":case"@id":case"@included":case"@index":case"@json":case"@language":case"@list":case"@nest":case"@none":case"@omitDefault":case"@prefix":case"@preserve":case"@protected":case"@requireAll":case"@reverse":case"@set":case"@type":case"@value":case"@version":case"@vocab":return!0}return!1}},6957:(W,T,m)=>{const{parseLinkHeader:$,buildHeaders:f}=m(9263),{LINK_HEADER_CONTEXT:S}=m(9378),E=m(2207),j=m(3743),{prependBase:i}=m(470),u=/(^|(\r\n))link:/i;W.exports=({secure:c,headers:h={},xhr:C}={headers:{}})=>(h=f(h),new j().wrapLoader(async function N(y){if(y.indexOf("http:")!==0&&y.indexOf("https:")!==0)throw new E('URL could not be dereferenced; only "http" and "https" URLs are supported.',"jsonld.InvalidUrl",{code:"loading document failed",url:y});if(c&&y.indexOf("https")!==0)throw new E(`URL could not be dereferenced; secure mode is enabled and the URL's scheme is not "https".`,"jsonld.InvalidUrl",{code:"loading document failed",url:y});let P;try{P=await function(ne,w,x){const Q=new(ne=ne||XMLHttpRequest);return new Promise((B,M)=>{Q.onload=()=>B(Q),Q.onerror=g=>M(g),Q.open("GET",w,!0);for(const g in x)Q.setRequestHeader(g,x[g]);Q.send()})}(C,y,h)}catch(ne){throw new E("URL could not be dereferenced, an error occurred.","jsonld.LoadDocumentError",{code:"loading document failed",url:y,cause:ne})}if(P.status>=400)throw new E("URL could not be dereferenced: "+P.statusText,"jsonld.LoadDocumentError",{code:"loading document failed",url:y,httpStatusCode:P.status});let b={contextUrl:null,documentUrl:y,document:P.response},q=null;const O=P.getResponseHeader("Content-Type");let F;if(u.test(P.getAllResponseHeaders())&&(F=P.getResponseHeader("Link")),F&&O!=="application/ld+json"){const ne=$(F),w=ne[S];if(Array.isArray(w))throw new E("URL could not be dereferenced, it has more than one associated HTTP Link Header.","jsonld.InvalidUrl",{code:"multiple context link headers",url:y});w&&(b.contextUrl=w.target),q=ne.alternate,q&&q.type=="application/ld+json"&&!(O||"").match(/^application\/(\w*\+)?json$/)&&(b=await N(i(y,q.target)))}return b}))},2246:(W,T,m)=>{const $=m(2207),{isArray:f}=m(7382),{asArray:S}=m(9263),E={};function j({event:u,handlers:c}){let h=!0;for(let C=0;h&&C<c.length;++C){h=!1;const N=c[C];if(f(N))h=j({event:u,handlers:N});else if(typeof N=="function")N({event:u,next:()=>{h=!0}});else{if(typeof N!="object")throw new $("Invalid event handler.","jsonld.InvalidEventHandler",{event:u});u.code in N?N[u.code]({event:u,next:()=>{h=!0}}):h=!0}}return h}W.exports=E,E.defaultEventHandler=null,E.setupEventHandler=({options:u={}})=>{const c=[].concat(u.safe?E.safeEventHandler:[],u.eventHandler?S(u.eventHandler):[],E.defaultEventHandler?E.defaultEventHandler:[]);return c.length===0?null:c},E.handleEvent=({event:u,options:c})=>{j({event:u,handlers:c.eventHandler})};const i=new Set(["empty object","free-floating scalar","invalid @language value","invalid property","null @id value","null @value value","object with only @id","object with only @language","object with only @list","object with only @value","relative @id reference","relative @type reference","relative @vocab reference","reserved @id value","reserved @reverse value","reserved term","blank node predicate","relative graph reference","relative object reference","relative predicate reference","relative subject reference","rdfDirection not set"]);E.safeEventHandler=function({event:u,next:c}){if(u.level==="warning"&&i.has(u.code))throw new $("Safe mode validation error.","jsonld.ValidationError",{event:u});c()},E.logEventHandler=function({event:u,next:c}){console.log(`EVENT: ${u.message}`,{event:u}),c()},E.logWarningEventHandler=function({event:u,next:c}){u.level==="warning"&&console.warn(`WARNING: ${u.message}`,{event:u}),c()},E.unhandledEventHandler=function({event:u}){throw new $("No handler for event.","jsonld.UnhandledEvent",{event:u})},E.setDefaultEventHandler=function({eventHandler:u}={}){E.defaultEventHandler=u?S(u):null}},4019:(W,T,m)=>{const $=m(2207),{isArray:f,isObject:S,isEmptyObject:E,isString:j,isUndefined:i}=m(7382),{isList:u,isValue:c,isGraph:h,isSubject:C}=m(3978),{expandIri:N,getContextValue:y,isKeyword:P,process:b,processingMode:q}=m(1972),{isAbsolute:O}=m(470),{REGEX_BCP47:F,REGEX_KEYWORD:ne,addValue:w,asArray:x,getValues:Q,validateTypeValue:B}=m(9263),{handleEvent:M}=m(2246),g={};function D({value:k,count:G,options:A}){if(G===0||"@value"in k||"@list"in k||G===1&&"@id"in k){if(A.eventHandler){let z,Y;G===0?(z="empty object",Y="Dropping empty object."):"@value"in k?(z="object with only @value",Y="Dropping object with only @value."):"@list"in k?(z="object with only @list",Y="Dropping object with only @list."):G===1&&"@id"in k&&(z="object with only @id",Y="Dropping object with only @id."),M({event:{type:["JsonLdEvent"],code:z,level:"warning",message:Y,details:{value:k}},options:A})}return null}return k}async function L({activeCtx:k,activeProperty:G,expandedActiveProperty:A,element:z,expandedParent:Y,options:Z={},insideList:te,typeKey:K,typeScopedContext:ue}){const Ne=Object.keys(z).sort(),ge=[];let ce;const X=z[K]&&N(k,f(z[K])?z[K][0]:z[K],{vocab:!0},{...Z,typeExpansion:!0})==="@json";for(const V of Ne){let re,se=z[V];if(V==="@context")continue;const ee=N(k,V,{vocab:!0},Z);if(ee===null||!O(ee)&&!P(ee)){Z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"invalid property",level:"warning",message:"Dropping property that did not expand into an absolute IRI or keyword.",details:{property:V,expandedProperty:ee}},options:Z});continue}if(P(ee)){if(A==="@reverse")throw new $("Invalid JSON-LD syntax; a keyword cannot be used as a @reverse property.","jsonld.SyntaxError",{code:"invalid reverse property map",value:se});if(ee in Y&&ee!=="@included"&&ee!=="@type")throw new $("Invalid JSON-LD syntax; colliding keywords detected.","jsonld.SyntaxError",{code:"colliding keywords",keyword:ee})}if(ee==="@id"){if(!j(se)){if(!Z.isFrame)throw new $('Invalid JSON-LD syntax; "@id" value must a string.',"jsonld.SyntaxError",{code:"invalid @id value",value:se});if(S(se)){if(!E(se))throw new $('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:se})}else{if(!f(se))throw new $('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:se});if(!se.every(fe=>j(fe)))throw new $('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:se})}}w(Y,"@id",x(se).map(fe=>{if(j(fe)){const ye=N(k,fe,{base:!0},Z);return Z.eventHandler&&(ye===null?M(fe===null?{event:{type:["JsonLdEvent"],code:"null @id value",level:"warning",message:"Null @id found.",details:{id:fe}},options:Z}:{event:{type:["JsonLdEvent"],code:"reserved @id value",level:"warning",message:"Reserved @id found.",details:{id:fe}},options:Z}):O(ye)||M({event:{type:["JsonLdEvent"],code:"relative @id reference",level:"warning",message:"Relative @id reference found.",details:{id:fe,expandedId:ye}},options:Z})),ye}return fe}),{propertyIsArray:Z.isFrame});continue}if(ee==="@type"){S(se)&&(se=Object.fromEntries(Object.entries(se).map(([fe,ye])=>[N(ue,fe,{vocab:!0}),x(ye).map(l=>N(ue,l,{base:!0,vocab:!0},{...Z,typeExpansion:!0}))]))),B(se,Z.isFrame),w(Y,"@type",x(se).map(fe=>{if(j(fe)){const ye=N(ue,fe,{base:!0,vocab:!0},{...Z,typeExpansion:!0});return ye==="@json"||O(ye)||Z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"relative @type reference",level:"warning",message:"Relative @type reference found.",details:{type:fe}},options:Z}),ye}return fe}),{propertyIsArray:!!Z.isFrame});continue}if(ee==="@included"&&q(k,1.1)){const fe=x(await g.expand({activeCtx:k,activeProperty:G,element:se,options:Z}));if(!fe.every(ye=>C(ye)))throw new $("Invalid JSON-LD syntax; values of @included must expand to node objects.","jsonld.SyntaxError",{code:"invalid @included value",value:se});w(Y,"@included",fe,{propertyIsArray:!0});continue}if(ee==="@graph"&&!S(se)&&!f(se))throw new $('Invalid JSON-LD syntax; "@graph" value must not be an object or an array.',"jsonld.SyntaxError",{code:"invalid @graph value",value:se});if(ee==="@value"){ce=se,X&&q(k,1.1)?Y["@value"]=se:w(Y,"@value",se,{propertyIsArray:Z.isFrame});continue}if(ee==="@language"){if(se===null)continue;if(!j(se)&&!Z.isFrame)throw new $('Invalid JSON-LD syntax; "@language" value must be a string.',"jsonld.SyntaxError",{code:"invalid language-tagged string",value:se});se=x(se).map(fe=>j(fe)?fe.toLowerCase():fe);for(const fe of se)j(fe)&&!fe.match(F)&&Z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:fe}},options:Z});w(Y,"@language",se,{propertyIsArray:Z.isFrame});continue}if(ee==="@direction"){if(!j(se)&&!Z.isFrame)throw new $('Invalid JSON-LD syntax; "@direction" value must be a string.',"jsonld.SyntaxError",{code:"invalid base direction",value:se});se=x(se);for(const fe of se)if(j(fe)&&fe!=="ltr"&&fe!=="rtl")throw new $('Invalid JSON-LD syntax; "@direction" must be "ltr" or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",value:se});w(Y,"@direction",se,{propertyIsArray:Z.isFrame});continue}if(ee==="@index"){if(!j(se))throw new $('Invalid JSON-LD syntax; "@index" value must be a string.',"jsonld.SyntaxError",{code:"invalid @index value",value:se});w(Y,"@index",se);continue}if(ee==="@reverse"){if(!S(se))throw new $('Invalid JSON-LD syntax; "@reverse" value must be an object.',"jsonld.SyntaxError",{code:"invalid @reverse value",value:se});if(re=await g.expand({activeCtx:k,activeProperty:"@reverse",element:se,options:Z}),"@reverse"in re)for(const ye in re["@reverse"])w(Y,ye,re["@reverse"][ye],{propertyIsArray:!0});let fe=Y["@reverse"]||null;for(const ye in re){if(ye==="@reverse")continue;fe===null&&(fe=Y["@reverse"]={}),w(fe,ye,[],{propertyIsArray:!0});const l=re[ye];for(let p=0;p<l.length;++p){const _=l[p];if(c(_)||u(_))throw new $('Invalid JSON-LD syntax; "@reverse" value must not be a @value or an @list.',"jsonld.SyntaxError",{code:"invalid reverse property value",value:re});w(fe,ye,_,{propertyIsArray:!0})}}continue}if(ee==="@nest"){ge.push(V);continue}let J=k;const le=y(k,V,"@context");i(le)||(J=await b({activeCtx:k,localCtx:le,propagate:!0,overrideProtected:!0,options:Z}));const he=y(k,V,"@container")||[];if(he.includes("@language")&&S(se))re=pe(J,se,y(J,V,"@direction"),Z);else if(he.includes("@index")&&S(se)){const fe=he.includes("@graph"),ye=y(J,V,"@index")||"@index",l=ye!=="@index"&&N(k,ye,{vocab:!0},Z);re=await me({activeCtx:J,options:Z,activeProperty:V,value:se,asGraph:fe,indexKey:ye,propertyIndex:l})}else if(he.includes("@id")&&S(se)){const fe=he.includes("@graph");re=await me({activeCtx:J,options:Z,activeProperty:V,value:se,asGraph:fe,indexKey:"@id"})}else if(he.includes("@type")&&S(se))re=await me({activeCtx:J.revertToPreviousContext(),options:Z,activeProperty:V,value:se,asGraph:!1,indexKey:"@type"});else{const fe=ee==="@list";if(fe||ee==="@set"){let ye=G;fe&&A==="@graph"&&(ye=null),re=await g.expand({activeCtx:J,activeProperty:ye,element:se,options:Z,insideList:fe})}else re=y(k,V,"@type")==="@json"?{"@type":"@json","@value":se}:await g.expand({activeCtx:J,activeProperty:V,element:se,options:Z,insideList:!1})}if(re!==null||ee==="@value"){if(ee!=="@list"&&!u(re)&&he.includes("@list")&&(re={"@list":x(re)}),he.includes("@graph")&&!he.some(fe=>fe==="@id"||fe==="@index")){if(re=x(re),Z.isFrame||(re=re.filter(fe=>D({value:fe,count:Object.keys(fe).length,options:Z})!==null)),re.length===0)continue;re=re.map(fe=>({"@graph":x(fe)}))}if(J.mappings.has(V)&&J.mappings.get(V).reverse){const fe=Y["@reverse"]=Y["@reverse"]||{};re=x(re);for(let ye=0;ye<re.length;++ye){const l=re[ye];if(c(l)||u(l))throw new $('Invalid JSON-LD syntax; "@reverse" value must not be a @value or an @list.',"jsonld.SyntaxError",{code:"invalid reverse property value",value:re});w(fe,ee,l,{propertyIsArray:!0})}}else w(Y,ee,re,{propertyIsArray:!0})}}if("@value"in Y&&!(Y["@type"]==="@json"&&q(k,1.1))){if((S(ce)||f(ce))&&!Z.isFrame)throw new $('Invalid JSON-LD syntax; "@value" value must not be an object or an array.',"jsonld.SyntaxError",{code:"invalid value object value",value:ce})}for(const V of ge){const re=f(z[V])?z[V]:[z[V]];for(const se of re){if(!S(se)||Object.keys(se).some(ee=>N(k,ee,{vocab:!0},Z)==="@value"))throw new $("Invalid JSON-LD syntax; nested value must be a node object.","jsonld.SyntaxError",{code:"invalid @nest value",value:se});await L({activeCtx:k,activeProperty:G,expandedActiveProperty:A,element:se,expandedParent:Y,options:Z,insideList:te,typeScopedContext:ue,typeKey:K})}}}function de({activeCtx:k,activeProperty:G,value:A,options:z}){if(A==null)return null;const Y=N(k,G,{vocab:!0},z);if(Y==="@id")return N(k,A,{base:!0},z);if(Y==="@type")return N(k,A,{vocab:!0,base:!0},{...z,typeExpansion:!0});const Z=y(k,G,"@type");if((Z==="@id"||Y==="@graph")&&j(A)){const K=N(k,A,{base:!0},z);return K===null&&A.match(ne)&&z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"reserved @id value",level:"warning",message:"Reserved @id found.",details:{id:G}},options:z}),{"@id":K}}if(Z==="@vocab"&&j(A))return{"@id":N(k,A,{vocab:!0,base:!0},z)};if(P(Y))return A;const te={};if(Z&&!["@id","@vocab","@none"].includes(Z))te["@type"]=Z;else if(j(A)){const K=y(k,G,"@language");K!==null&&(te["@language"]=K);const ue=y(k,G,"@direction");ue!==null&&(te["@direction"]=ue)}return["boolean","number","string"].includes(typeof A)||(A=A.toString()),te["@value"]=A,te}function pe(k,G,A,z){const Y=[],Z=Object.keys(G).sort();for(const te of Z){const K=N(k,te,{vocab:!0},z);let ue=G[te];f(ue)||(ue=[ue]);for(const Ne of ue){if(Ne===null)continue;if(!j(Ne))throw new $("Invalid JSON-LD syntax; language map values must be strings.","jsonld.SyntaxError",{code:"invalid language map value",languageMap:G});const ge={"@value":Ne};K!=="@none"&&(te.match(F)||z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:te}},options:z}),ge["@language"]=te.toLowerCase()),A&&(ge["@direction"]=A),Y.push(ge)}}return Y}async function me({activeCtx:k,options:G,activeProperty:A,value:z,asGraph:Y,indexKey:Z,propertyIndex:te}){const K=[],ue=Object.keys(z).sort(),Ne=Z==="@type";for(let ge of ue){if(Ne){const V=y(k,ge,"@context");i(V)||(k=await b({activeCtx:k,localCtx:V,propagate:!1,options:G}))}let ce,X=z[ge];f(X)||(X=[X]),X=await g.expand({activeCtx:k,activeProperty:A,element:X,options:G,insideList:!1,insideIndex:!0}),ce=te?ge==="@none"?"@none":de({activeCtx:k,activeProperty:Z,value:ge,options:G}):N(k,ge,{vocab:!0},G),Z==="@id"?ge=N(k,ge,{base:!0},G):Ne&&(ge=ce);for(let V of X){if(Y&&!h(V)&&(V={"@graph":[V]}),Z==="@type")ce==="@none"||(V["@type"]?V["@type"]=[ge].concat(V["@type"]):V["@type"]=[ge]);else{if(c(V)&&!["@language","@type","@index"].includes(Z))throw new $(`Invalid JSON-LD syntax; Attempt to add illegal key to value object: "${Z}".`,"jsonld.SyntaxError",{code:"invalid value object",value:V});te?ce!=="@none"&&w(V,te,ce,{propertyIsArray:!0,prependValue:!0}):ce==="@none"||Z in V||(V[Z]=ge)}K.push(V)}}return K}W.exports=g,g.expand=async({activeCtx:k,activeProperty:G=null,element:A,options:z={},insideList:Y=!1,insideIndex:Z=!1,typeScopedContext:te=null})=>{if(A==null)return null;if(G==="@default"&&(z=Object.assign({},z,{isFrame:!1})),!f(A)&&!S(A))return Y||G!==null&&N(k,G,{vocab:!0},z)!=="@graph"?de({activeCtx:k,activeProperty:G,value:A,options:z}):(z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"free-floating scalar",level:"warning",message:"Dropping free-floating scalar not in a list.",details:{value:A}},options:z}),null);if(f(A)){let re=[];const se=y(k,G,"@container")||[];Y=Y||se.includes("@list");for(let ee=0;ee<A.length;++ee){let J=await g.expand({activeCtx:k,activeProperty:G,element:A[ee],options:z,insideIndex:Z,typeScopedContext:te});Y&&f(J)&&(J={"@list":J}),J!==null&&(f(J)?re=re.concat(J):re.push(J))}return re}const K=N(k,G,{vocab:!0},z),ue=y(k,G,"@context");te=te||(k.previousContext?k:null);let Ne=Object.keys(A).sort(),ge=!Z;if(ge&&te&&Ne.length<=2&&!Ne.includes("@context"))for(const re of Ne){const se=N(te,re,{vocab:!0},z);if(se==="@value"){ge=!1,k=te;break}if(se==="@id"&&Ne.length===1){ge=!1;break}}ge&&(k=k.revertToPreviousContext()),i(ue)||(k=await b({activeCtx:k,localCtx:ue,propagate:!0,overrideProtected:!0,options:z})),"@context"in A&&(k=await b({activeCtx:k,localCtx:A["@context"],options:z})),te=k;let ce=null;for(const re of Ne)if(N(k,re,{vocab:!0},z)==="@type"){ce=ce||re;const se=A[re],ee=Array.isArray(se)?se.length>1?se.slice().sort():se:[se];for(const J of ee){const le=y(te,J,"@context");i(le)||(k=await b({activeCtx:k,localCtx:le,options:z,propagate:!1}))}}let X={};await L({activeCtx:k,activeProperty:G,expandedActiveProperty:K,element:A,expandedParent:X,options:z,insideList:Y,typeKey:ce,typeScopedContext:te}),Ne=Object.keys(X);let V=Ne.length;if("@value"in X){if("@type"in X&&("@language"in X||"@direction"in X))throw new $('Invalid JSON-LD syntax; an element containing "@value" may not contain both "@type" and either "@language" or "@direction".',"jsonld.SyntaxError",{code:"invalid value object",element:X});let re=V-1;if("@type"in X&&(re-=1),"@index"in X&&(re-=1),"@language"in X&&(re-=1),"@direction"in X&&(re-=1),re!==0)throw new $('Invalid JSON-LD syntax; an element containing "@value" may only have an "@index" property and either "@type" or either or both "@language" or "@direction".',"jsonld.SyntaxError",{code:"invalid value object",element:X});const se=X["@value"]===null?[]:x(X["@value"]),ee=Q(X,"@type");if(!(q(k,1.1)&&ee.includes("@json")&&ee.length===1))if(se.length===0)z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"null @value value",level:"warning",message:"Dropping null @value value.",details:{value:X}},options:z}),X=null;else{if(!se.every(J=>j(J)||E(J))&&"@language"in X)throw new $("Invalid JSON-LD syntax; only strings may be language-tagged.","jsonld.SyntaxError",{code:"invalid language-tagged value",element:X});if(!ee.every(J=>O(J)&&!(j(J)&&J.indexOf("_:")===0)||E(J)))throw new $('Invalid JSON-LD syntax; an element containing "@value" and "@type" must have an absolute IRI for the value of "@type".',"jsonld.SyntaxError",{code:"invalid typed value",element:X})}}else if("@type"in X&&!f(X["@type"]))X["@type"]=[X["@type"]];else if("@set"in X||"@list"in X){if(V>1&&(V!==2||!("@index"in X)))throw new $('Invalid JSON-LD syntax; if an element has the property "@set" or "@list", then it can have at most one other property that is "@index".',"jsonld.SyntaxError",{code:"invalid set or list object",element:X});"@set"in X&&(X=X["@set"],Ne=Object.keys(X),V=Ne.length)}else V===1&&"@language"in X&&(z.eventHandler&&M({event:{type:["JsonLdEvent"],code:"object with only @language",level:"warning",message:"Dropping object with only @language.",details:{value:X}},options:z}),X=null);return!S(X)||z.keepFreeFloatingNodes||Y||G!==null&&K!=="@graph"&&!(y(k,G,"@container")||[]).includes("@graph")||(X=D({value:X,count:V,options:z})),X}},5229:(W,T,m)=>{const{isSubjectReference:$}=m(3978),{createMergedNodeMap:f}=m(9233),S={};W.exports=S,S.flatten=E=>{const j=f(E),i=[],u=Object.keys(j).sort();for(let c=0;c<u.length;++c){const h=j[u[c]];$(h)||i.push(h)}return i}},7946:(W,T,m)=>{const{isKeyword:$}=m(1972),f=m(3978),S=m(7382),E=m(9263),j=m(470),i=m(2207),{createNodeMap:u,mergeNodeMapGraphs:c}=m(9233),h={};function C(x){const Q={};for(const B in x)x[B]!==void 0&&(Q["@"+B]=[x[B]]);return[Q]}function N(x,Q,B){for(let M=B.length-1;M>=0;--M){const g=B[M];if(g.graph===Q&&g.subject["@id"]===x["@id"])return!0}return!1}function y(x,Q,B){const M="@"+B;let g=M in x?x[M][0]:Q[B];if(B==="embed"){if(g===!0)g="@once";else if(g===!1)g="@never";else if(g!=="@always"&&g!=="@never"&&g!=="@link"&&g!=="@first"&&g!=="@last"&&g!=="@once")throw new i("Invalid JSON-LD syntax; invalid value of @embed.","jsonld.SyntaxError",{code:"invalid @embed value",frame:x})}return g}function P(x){if(!S.isArray(x)||x.length!==1||!S.isObject(x[0]))throw new i("Invalid JSON-LD syntax; a JSON-LD frame must be a single object.","jsonld.SyntaxError",{frame:x});if("@id"in x[0]){for(const Q of E.asArray(x[0]["@id"]))if(!S.isObject(Q)&&!j.isAbsolute(Q)||S.isString(Q)&&Q.indexOf("_:")===0)throw new i("Invalid JSON-LD syntax; invalid @id in frame.","jsonld.SyntaxError",{code:"invalid frame",frame:x})}if("@type"in x[0]){for(const Q of E.asArray(x[0]["@type"]))if(!S.isObject(Q)&&!j.isAbsolute(Q)&&Q!=="@json"||S.isString(Q)&&Q.indexOf("_:")===0)throw new i("Invalid JSON-LD syntax; invalid @type in frame.","jsonld.SyntaxError",{code:"invalid frame",frame:x})}}function b(x,Q,B,M){let g=!0,D=!1;for(const L in B){let de=!1;const pe=E.getValues(Q,L),me=E.getValues(B,L).length===0;if(L==="@id"){if(S.isEmptyObject(B["@id"][0]||{})?de=!0:B["@id"].length>=0&&(de=B["@id"].includes(pe[0])),!M.requireAll)return de}else if(L==="@type"){if(g=!1,me){if(pe.length>0)return!1;de=!0}else if(B["@type"].length===1&&S.isEmptyObject(B["@type"][0]))de=pe.length>0;else for(const k of B["@type"])de=!(!S.isObject(k)||!("@default"in k))||de||pe.some(G=>G===k);if(!M.requireAll)return de}else{if($(L))continue;{const k=E.getValues(B,L)[0];let G=!1;if(k&&(P([k]),G="@default"in k),g=!1,pe.length===0&&G)continue;if(pe.length>0&&me)return!1;if(k===void 0){if(pe.length>0)return!1;de=!0}else if(f.isList(k)){const A=k["@list"][0];if(f.isList(pe[0])){const z=pe[0]["@list"];f.isValue(A)?de=z.some(Y=>w(A,Y)):(f.isSubject(A)||f.isSubjectReference(A))&&(de=z.some(Y=>ne(x,A,Y,M)))}}else de=f.isValue(k)?pe.some(A=>w(k,A)):f.isSubjectReference(k)?pe.some(A=>ne(x,k,A,M)):!!S.isObject(k)&&pe.length>0}}if(!de&&M.requireAll)return!1;D=D||de}return g||D}function q(x,Q){const B=x.uniqueEmbeds[x.graph],M=B[Q],g=M.parent,D=M.property,L={"@id":Q};if(S.isArray(g)){for(let pe=0;pe<g.length;++pe)if(E.compareValues(g[pe],L)){g[pe]=L;break}}else{const pe=S.isArray(g[D]);E.removeValue(g,D,L,{propertyIsArray:pe}),E.addValue(g,D,L,{propertyIsArray:pe})}const de=pe=>{const me=Object.keys(B);for(const k of me)k in B&&S.isObject(B[k].parent)&&B[k].parent["@id"]===pe&&(delete B[k],de(k))};de(Q)}function O(x,Q){if(S.isArray(x))return x.map(B=>O(B,Q));if(S.isObject(x)){if("@preserve"in x)return x["@preserve"][0];if(f.isValue(x))return x;if(f.isList(x))return x["@list"]=O(x["@list"],Q),x;if("@id"in x){const B=x["@id"];if(Q.link.hasOwnProperty(B)){const M=Q.link[B].indexOf(x);if(M!==-1)return Q.link[B][M];Q.link[B].push(x)}else Q.link[B]=[x]}for(const B in x)B==="@id"&&Q.bnodesToClear.includes(x[B])?delete x["@id"]:x[B]=O(x[B],Q)}return x}function F(x,Q,B){S.isObject(x)?E.addValue(x,Q,B,{propertyIsArray:!0}):x.push(B)}function ne(x,Q,B,M){if(!("@id"in B))return!1;const g=x.subjects[B["@id"]];return g&&b(x,g,Q,M)}function w(x,Q){const B=Q["@value"],M=Q["@type"],g=Q["@language"],D=x["@value"]?S.isArray(x["@value"])?x["@value"]:[x["@value"]]:[],L=x["@type"]?S.isArray(x["@type"])?x["@type"]:[x["@type"]]:[],de=x["@language"]?S.isArray(x["@language"])?x["@language"]:[x["@language"]]:[];return D.length===0&&L.length===0&&de.length===0||!(!D.includes(B)&&!S.isEmptyObject(D[0]))&&!!(!M&&L.length===0||L.includes(M)||M&&S.isEmptyObject(L[0]))&&!!(!g&&de.length===0||de.includes(g)||g&&S.isEmptyObject(de[0]))}W.exports=h,h.frameMergedOrDefault=(x,Q,B)=>{const M={options:B,embedded:!1,graph:"@default",graphMap:{"@default":{}},subjectStack:[],link:{},bnodeMap:{}},g=new E.IdentifierIssuer("_:b");u(x,M.graphMap,"@default",g),B.merged&&(M.graphMap["@merged"]=c(M.graphMap),M.graph="@merged"),M.subjects=M.graphMap[M.graph];const D=[];return h.frame(M,Object.keys(M.subjects).sort(),Q,D),B.pruneBlankNodeIdentifiers&&(B.bnodesToClear=Object.keys(M.bnodeMap).filter(L=>M.bnodeMap[L].length===1)),B.link={},O(D,B)},h.frame=(x,Q,B,M,g=null)=>{P(B),B=B[0];const D=x.options,L={embed:y(B,D,"embed"),explicit:y(B,D,"explicit"),requireAll:y(B,D,"requireAll")};x.link.hasOwnProperty(x.graph)||(x.link[x.graph]={});const de=x.link[x.graph],pe=function(k,G,A,z){const Y={};for(const Z of G){const te=k.graphMap[k.graph][Z];b(k,te,A,z)&&(Y[Z]=te)}return Y}(x,Q,B,L),me=Object.keys(pe).sort();for(const k of me){const G=pe[k];if(g===null?x.uniqueEmbeds={[x.graph]:{}}:x.uniqueEmbeds[x.graph]=x.uniqueEmbeds[x.graph]||{},L.embed==="@link"&&k in de){F(M,g,de[k]);continue}const A={"@id":k};if(k.indexOf("_:")===0&&E.addValue(x.bnodeMap,k,A,{propertyIsArray:!0}),de[k]=A,(L.embed==="@first"||L.embed==="@last")&&x.is11)throw new i("Invalid JSON-LD syntax; invalid value of @embed.","jsonld.SyntaxError",{code:"invalid @embed value",frame:B});if(x.embedded||!x.uniqueEmbeds[x.graph].hasOwnProperty(k))if(!x.embedded||L.embed!=="@never"&&!N(G,x.graph,x.subjectStack))if(!x.embedded||L.embed!="@first"&&L.embed!="@once"||!x.uniqueEmbeds[x.graph].hasOwnProperty(k)){if(L.embed==="@last"&&k in x.uniqueEmbeds[x.graph]&&q(x,k),x.uniqueEmbeds[x.graph][k]={parent:M,property:g},x.subjectStack.push({subject:G,graph:x.graph}),k in x.graphMap){let z=!1,Y=null;"@graph"in B?(Y=B["@graph"][0],z=!(k==="@merged"||k==="@default"),S.isObject(Y)||(Y={})):(z=x.graph!=="@merged",Y={}),z&&h.frame({...x,graph:k,embedded:!1},Object.keys(x.graphMap[k]).sort(),[Y],A,"@graph")}"@included"in B&&h.frame({...x,embedded:!1},Q,B["@included"],A,"@included");for(const z of Object.keys(G).sort())if($(z)){if(A[z]=E.clone(G[z]),z==="@type")for(const Y of G["@type"])Y.indexOf("_:")===0&&E.addValue(x.bnodeMap,Y,A,{propertyIsArray:!0})}else if(!L.explicit||z in B)for(const Y of G[z]){const Z=z in B?B[z]:C(L);if(f.isList(Y)){const te=B[z]&&B[z][0]&&B[z][0]["@list"]?B[z][0]["@list"]:C(L),K={"@list":[]};F(A,z,K);const ue=Y["@list"];for(const Ne of ue)f.isSubjectReference(Ne)?h.frame({...x,embedded:!0},[Ne["@id"]],te,K,"@list"):F(K,"@list",E.clone(Ne))}else f.isSubjectReference(Y)?h.frame({...x,embedded:!0},[Y["@id"]],Z,A,z):w(Z[0],Y)&&F(A,z,E.clone(Y))}for(const z of Object.keys(B).sort()){if(z==="@type"){if(!S.isObject(B[z][0])||!("@default"in B[z][0]))continue}else if($(z))continue;const Y=B[z][0]||{};if(!y(Y,D,"omitDefault")&&!(z in A)){let Z="@null";"@default"in Y&&(Z=E.clone(Y["@default"])),S.isArray(Z)||(Z=[Z]),A[z]=[{"@preserve":Z}]}}for(const z of Object.keys(B["@reverse"]||{}).sort()){const Y=B["@reverse"][z];for(const Z of Object.keys(x.subjects))E.getValues(x.subjects[Z],z).some(te=>te["@id"]===k)&&(A["@reverse"]=A["@reverse"]||{},E.addValue(A["@reverse"],z,[],{propertyIsArray:!0}),h.frame({...x,embedded:!0},[Z],Y,A["@reverse"][z],g))}F(M,g,A),x.subjectStack.pop()}else F(M,g,A);else F(M,g,A)}},h.cleanupNull=(x,Q)=>{if(S.isArray(x))return x.map(B=>h.cleanupNull(B,Q)).filter(B=>B);if(x==="@null")return null;if(S.isObject(x)){if("@id"in x){const B=x["@id"];if(Q.link.hasOwnProperty(B)){const M=Q.link[B].indexOf(x);if(M!==-1)return Q.link[B][M];Q.link[B].push(x)}else Q.link[B]=[x]}for(const B in x)x[B]=h.cleanupNull(x[B],Q)}return x}},3947:(W,T,m)=>{const $=m(2207),f=m(3978),S=m(7382),{REGEX_BCP47:E,addValue:j}=m(9263),{handleEvent:i}=m(2246),{RDF_LIST:u,RDF_FIRST:c,RDF_REST:h,RDF_NIL:C,RDF_TYPE:N,RDF_JSON_LITERAL:y,XSD_BOOLEAN:P,XSD_DOUBLE:b,XSD_INTEGER:q,XSD_STRING:O}=m(9378),F={};function ne(w,x,Q,B){if(w.termType.endsWith("Node"))return{"@id":w.value};const M={"@value":w.value};if(w.language)w.language.match(E)||B.eventHandler&&i({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:w.language}},options:B}),M["@language"]=w.language;else{let g=w.datatype.value;if(g||(g=O),g===y){g="@json";try{M["@value"]=JSON.parse(M["@value"])}catch(D){throw new $("JSON literal could not be parsed.","jsonld.InvalidJsonLiteral",{code:"invalid JSON literal",value:M["@value"],cause:D})}}if(x){if(g===P)M["@value"]==="true"?M["@value"]=!0:M["@value"]==="false"&&(M["@value"]=!1);else if(S.isNumeric(M["@value"]))if(g===q){const D=parseInt(M["@value"],10);D.toFixed(0)===M["@value"]&&(M["@value"]=D)}else g===b&&(M["@value"]=parseFloat(M["@value"]));[P,q,b,O].includes(g)||(M["@type"]=g)}else if(Q==="i18n-datatype"&&g.startsWith("https://www.w3.org/ns/i18n#")){const[,D,L]=g.split(/[#_]/);D.length>0&&(M["@language"]=D,D.match(E)||B.eventHandler&&i({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:D}},options:B})),M["@direction"]=L}else g!==O&&(M["@type"]=g)}return M}W.exports=F,F.fromRDF=async(w,x)=>{const{useRdfType:Q=!1,useNativeTypes:B=!1,rdfDirection:M=null}=x,g={},D={"@default":g},L={};if(M){if(M==="compound-literal")throw new $("Unsupported rdfDirection value.","jsonld.InvalidRdfDirection",{value:M});if(M!=="i18n-datatype")throw new $("Unknown rdfDirection value.","jsonld.InvalidRdfDirection",{value:M})}for(const me of w){const k=me.graph.termType==="DefaultGraph"?"@default":me.graph.value;k in D||(D[k]={}),k==="@default"||k in g||(g[k]={"@id":k});const G=D[k],A=me.subject.value,z=me.predicate.value,Y=me.object;A in G||(G[A]={"@id":A});const Z=G[A],te=Y.termType.endsWith("Node");if(te&&!(Y.value in G)&&(G[Y.value]={"@id":Y.value}),z===N&&!Q&&te){j(Z,"@type",Y.value,{propertyIsArray:!0});continue}const K=ne(Y,B,M,x);if(j(Z,z,K,{propertyIsArray:!0}),te)if(Y.value===C){const ue=G[Y.value];"usages"in ue||(ue.usages=[]),ue.usages.push({node:Z,property:z,value:K})}else Y.value in L?L[Y.value]=!1:L[Y.value]={node:Z,property:z,value:K}}for(const me in D){const k=D[me];if(!(C in k))continue;const G=k[C];if(G.usages){for(let A of G.usages){let z=A.node,Y=A.property,Z=A.value;const te=[],K=[];let ue=Object.keys(z).length;for(;Y===h&&S.isObject(L[z["@id"]])&&S.isArray(z[c])&&z[c].length===1&&S.isArray(z[h])&&z[h].length===1&&(ue===3||ue===4&&S.isArray(z["@type"])&&z["@type"].length===1&&z["@type"][0]===u)&&(te.push(z[c][0]),K.push(z["@id"]),A=L[z["@id"]],z=A.node,Y=A.property,Z=A.value,ue=Object.keys(z).length,f.isBlankNode(z)););delete Z["@id"],Z["@list"]=te.reverse();for(const Ne of K)delete k[Ne]}delete G.usages}}const de=[],pe=Object.keys(g).sort();for(const me of pe){const k=g[me];if(me in D){const G=k["@graph"]=[],A=D[me],z=Object.keys(A).sort();for(const Y of z){const Z=A[Y];f.isSubjectReference(Z)||G.push(Z)}}f.isSubjectReference(k)||de.push(k)}return de}},3978:(W,T,m)=>{const $=m(7382),f={};W.exports=f,f.isSubject=S=>!(!$.isObject(S)||"@value"in S||"@set"in S||"@list"in S)&&(Object.keys(S).length>1||!("@id"in S)),f.isSubjectReference=S=>$.isObject(S)&&Object.keys(S).length===1&&"@id"in S,f.isValue=S=>$.isObject(S)&&"@value"in S,f.isList=S=>$.isObject(S)&&"@list"in S,f.isGraph=S=>$.isObject(S)&&"@graph"in S&&Object.keys(S).filter(E=>E!=="@id"&&E!=="@index").length===1,f.isSimpleGraph=S=>f.isGraph(S)&&!("@id"in S),f.isBlankNode=S=>{if($.isObject(S)){if("@id"in S){const E=S["@id"];return!$.isString(E)||E.indexOf("_:")===0}return Object.keys(S).length===0||!("@value"in S||"@set"in S||"@list"in S)}return!1}},4841:(W,T,m)=>{const $=m(989),f=m(701),S=m(9263),E=m(7034),j=S.IdentifierIssuer,i=m(2207),u=m(9749),c=m(8229),{expand:h}=m(4019),{flatten:C}=m(5229),{fromRDF:N}=m(3947),{toRDF:y}=m(9180),{frameMergedOrDefault:P,cleanupNull:b}=m(7946),{isArray:q,isObject:O,isString:F}=m(7382),{isSubjectReference:ne}=m(3978),{expandIri:w,getInitialContext:x,process:Q,processingMode:B}=m(1972),{compact:M,compactIri:g}=m(1058),{createNodeMap:D,createMergedNodeMap:L,mergeNodeMaps:de}=m(9233),{logEventHandler:pe,logWarningEventHandler:me,safeEventHandler:k,setDefaultEventHandler:G,setupEventHandler:A,strictEventHandler:z,unhandledEventHandler:Y}=m(2246),Z=function(K){const ue={},Ne=new u({max:100});function ge(ce,{documentLoader:X=K.documentLoader,...V}){if(ce&&"compactionMap"in ce)throw new i('"compactionMap" not supported.',"jsonld.OptionsError");if(ce&&"expansionMap"in ce)throw new i('"expansionMap" not supported.',"jsonld.OptionsError");return Object.assign({},{documentLoader:X},V,ce,{eventHandler:A({options:ce})})}return K.compact=async function(ce,X,V){if(arguments.length<2)throw new TypeError("Could not compact, too few arguments.");if(X===null)throw new i("The compaction context must not be null.","jsonld.CompactError",{code:"invalid local context"});if(ce===null)return null;let re;(V=ge(V,{base:F(ce)?ce:"",compactArrays:!0,compactToRelative:!0,graph:!1,skipExpansion:!1,link:!1,issuer:new j("_:b"),contextResolver:new E({sharedCache:Ne})})).link&&(V.skipExpansion=!0),V.compactToRelative||delete V.base,re=V.skipExpansion?ce:await K.expand(ce,V);const se=await K.processContext(x(V),X,V);let ee=await M({activeCtx:se,element:re,options:V});V.compactArrays&&!V.graph&&q(ee)?ee.length===1?ee=ee[0]:ee.length===0&&(ee={}):V.graph&&O(ee)&&(ee=[ee]),O(X)&&"@context"in X&&(X=X["@context"]),X=S.clone(X),q(X)||(X=[X]);const J=X;X=[];for(let he=0;he<J.length;++he)(!O(J[he])||Object.keys(J[he]).length>0)&&X.push(J[he]);const le=X.length>0;if(X.length===1&&(X=X[0]),q(ee)){const he=g({activeCtx:se,iri:"@graph",relativeTo:{vocab:!0}}),fe=ee;ee={},le&&(ee["@context"]=X),ee[he]=fe}else if(O(ee)&&le){const he=ee;ee={"@context":X};for(const fe in he)ee[fe]=he[fe]}return ee},K.expand=async function(ce,X){if(arguments.length<1)throw new TypeError("Could not expand, too few arguments.");const V={},re=[];if("expandContext"in(X=ge(X,{keepFreeFloatingNodes:!1,contextResolver:new E({sharedCache:Ne})}))){const le=S.clone(X.expandContext);O(le)&&"@context"in le?V.expandContext=le:V.expandContext={"@context":le},re.push(V.expandContext)}let se;if(F(ce)){const le=await K.get(ce,X);se=le.documentUrl,V.input=le.document,le.contextUrl&&(V.remoteContext={"@context":le.contextUrl},re.push(V.remoteContext))}else V.input=S.clone(ce);"base"in X||(X.base=se||"");let ee=x(X);for(const le of re)ee=await Q({activeCtx:ee,localCtx:le,options:X});let J=await h({activeCtx:ee,element:V.input,options:X});return O(J)&&"@graph"in J&&Object.keys(J).length===1?J=J["@graph"]:J===null&&(J=[]),q(J)||(J=[J]),J},K.flatten=async function(ce,X,V){if(arguments.length<1)return new TypeError("Could not flatten, too few arguments.");X=typeof X=="function"?null:X||null,V=ge(V,{base:F(ce)?ce:"",contextResolver:new E({sharedCache:Ne})});const re=await K.expand(ce,V),se=C(re);return X===null?se:(V.graph=!0,V.skipExpansion=!0,await K.compact(se,X,V))},K.frame=async function(ce,X,V){if(arguments.length<2)throw new TypeError("Could not frame, too few arguments.");if(V=ge(V,{base:F(ce)?ce:"",embed:"@once",explicit:!1,requireAll:!1,omitDefault:!1,bnodesToClear:[],contextResolver:new E({sharedCache:Ne})}),F(X)){const l=await K.get(X,V);if(X=l.document,l.contextUrl){let p=X["@context"];p?q(p)?p.push(l.contextUrl):p=[p,l.contextUrl]:p=l.contextUrl,X["@context"]=p}}const re=X&&X["@context"]||{},se=await K.processContext(x(V),re,V);V.hasOwnProperty("omitGraph")||(V.omitGraph=B(se,1.1)),V.hasOwnProperty("pruneBlankNodeIdentifiers")||(V.pruneBlankNodeIdentifiers=B(se,1.1));const ee=await K.expand(ce,V),J={...V};J.isFrame=!0,J.keepFreeFloatingNodes=!0;const le=await K.expand(X,J),he=Object.keys(X).map(l=>w(se,l,{vocab:!0}));J.merged=!he.includes("@graph"),J.is11=B(se,1.1);const fe=P(ee,le,J);J.graph=!V.omitGraph,J.skipExpansion=!0,J.link={},J.framing=!0;let ye=await K.compact(fe,re,J);return J.link={},ye=b(ye,J),ye},K.link=async function(ce,X,V){const re={};return X&&(re["@context"]=X),re["@embed"]="@link",K.frame(ce,re,V)},K.normalize=K.canonize=async function(ce,X){if(arguments.length<1)throw new TypeError("Could not canonize, too few arguments.");if("inputFormat"in(X=ge(X,{base:F(ce)?ce:null,algorithm:"URDNA2015",skipExpansion:!1,safe:!0,contextResolver:new E({sharedCache:Ne})}))){if(X.inputFormat!=="application/n-quads"&&X.inputFormat!=="application/nquads")throw new i("Unknown canonicalization input format.","jsonld.CanonizeError");const se=c.parse(ce);return $.canonize(se,X)}const V={...X};delete V.format,V.produceGeneralizedRdf=!1;const re=await K.toRDF(ce,V);return $.canonize(re,X)},K.fromRDF=async function(ce,X){if(arguments.length<1)throw new TypeError("Could not convert from RDF, too few arguments.");X=ge(X,{format:F(ce)?"application/n-quads":void 0});const{format:V}=X;let{rdfParser:re}=X;if(V){if(re=re||ue[V],!re)throw new i("Unknown input format.","jsonld.UnknownFormat",{format:V})}else re=()=>ce;const se=await re(ce);return N(se,X)},K.toRDF=async function(ce,X){if(arguments.length<1)throw new TypeError("Could not convert to RDF, too few arguments.");let V;V=(X=ge(X,{base:F(ce)?ce:"",skipExpansion:!1,contextResolver:new E({sharedCache:Ne})})).skipExpansion?ce:await K.expand(ce,X);const re=y(V,X);if(X.format){if(X.format==="application/n-quads"||X.format==="application/nquads")return c.serialize(re);throw new i("Unknown output format.","jsonld.UnknownFormat",{format:X.format})}return re},K.createNodeMap=async function(ce,X){if(arguments.length<1)throw new TypeError("Could not create node map, too few arguments.");X=ge(X,{base:F(ce)?ce:"",contextResolver:new E({sharedCache:Ne})});const V=await K.expand(ce,X);return L(V,X)},K.merge=async function(ce,X,V){if(arguments.length<1)throw new TypeError("Could not merge, too few arguments.");if(!q(ce))throw new TypeError('Could not merge, "docs" must be an array.');X=typeof X=="function"?null:X||null,V=ge(V,{contextResolver:new E({sharedCache:Ne})});const re=await Promise.all(ce.map(ye=>{const l={...V};return K.expand(ye,l)}));let se=!0;"mergeNodes"in V&&(se=V.mergeNodes);const ee=V.issuer||new j("_:b"),J={"@default":{}};for(let ye=0;ye<re.length;++ye){const l=S.relabelBlankNodes(re[ye],{issuer:new j("_:b"+ye+"-")}),p=se||ye===0?J:{"@default":{}};if(D(l,p,"@default",ee),p!==J)for(const _ in p){const ae=p[_];if(!(_ in J)){J[_]=ae;continue}const v=J[_];for(const I in ae)I in v||(v[I]=ae[I])}}const le=de(J),he=[],fe=Object.keys(le).sort();for(let ye=0;ye<fe.length;++ye){const l=le[fe[ye]];ne(l)||he.push(l)}return X===null?he:(V.graph=!0,V.skipExpansion=!0,await K.compact(he,X,V))},Object.defineProperty(K,"documentLoader",{get:()=>K._documentLoader,set:ce=>K._documentLoader=ce}),K.documentLoader=async ce=>{throw new i("Could not retrieve a JSON-LD document from the URL. URL dereferencing not implemented.","jsonld.LoadDocumentError",{code:"loading document failed",url:ce})},K.get=async function(ce,X){let V;V=typeof X.documentLoader=="function"?X.documentLoader:K.documentLoader;const re=await V(ce);try{if(!re.document)throw new i("No remote document found at the given URL.","jsonld.NullRemoteDocument");F(re.document)&&(re.document=JSON.parse(re.document))}catch(se){throw new i("Could not retrieve a JSON-LD document from the URL.","jsonld.LoadDocumentError",{code:"loading document failed",cause:se,remoteDoc:re})}return re},K.processContext=async function(ce,X,V){return V=ge(V,{base:"",contextResolver:new E({sharedCache:Ne})}),X===null?x(V):(X=S.clone(X),O(X)&&"@context"in X||(X={"@context":X}),Q({activeCtx:ce,localCtx:X,options:V}))},K.getContextValue=m(1972).getContextValue,K.documentLoaders={},K.useDocumentLoader=function(ce){if(!(ce in K.documentLoaders))throw new i('Unknown document loader type: "'+ce+'"',"jsonld.UnknownDocumentLoader",{type:ce});K.documentLoader=K.documentLoaders[ce].apply(K,Array.prototype.slice.call(arguments,1))},K.registerRDFParser=function(ce,X){ue[ce]=X},K.unregisterRDFParser=function(ce){delete ue[ce]},K.registerRDFParser("application/n-quads",c.parse),K.registerRDFParser("application/nquads",c.parse),K.url=m(470),K.logEventHandler=pe,K.logWarningEventHandler=me,K.safeEventHandler=k,K.setDefaultEventHandler=G,K.strictEventHandler=z,K.unhandledEventHandler=Y,K.util=S,Object.assign(K,S),K.promises=K,K.RequestQueue=m(3743),K.JsonLdProcessor=m(5445)(K),f.setupGlobals(K),f.setupDocumentLoaders(K),K},te=function(){return Z(function(){return te()})};Z(te),W.exports=te},9233:(W,T,m)=>{const{isKeyword:$}=m(1972),f=m(3978),S=m(7382),E=m(9263),j=m(2207),i={};W.exports=i,i.createMergedNodeMap=(u,c)=>{const h=(c=c||{}).issuer||new E.IdentifierIssuer("_:b"),C={"@default":{}};return i.createNodeMap(u,C,"@default",h),i.mergeNodeMaps(C)},i.createNodeMap=(u,c,h,C,N,y)=>{if(S.isArray(u)){for(const O of u)i.createNodeMap(O,c,h,C,void 0,y);return}if(!S.isObject(u))return void(y&&y.push(u));if(f.isValue(u)){if("@type"in u){let O=u["@type"];O.indexOf("_:")===0&&(u["@type"]=O=C.getId(O))}return void(y&&y.push(u))}if(y&&f.isList(u)){const O=[];return i.createNodeMap(u["@list"],c,h,C,N,O),void y.push({"@list":O})}if("@type"in u){const O=u["@type"];for(const F of O)F.indexOf("_:")===0&&C.getId(F)}S.isUndefined(N)&&(N=f.isBlankNode(u)?C.getId(u["@id"]):u["@id"]),y&&y.push({"@id":N});const P=c[h],b=P[N]=P[N]||{};b["@id"]=N;const q=Object.keys(u).sort();for(let O of q){if(O==="@id")continue;if(O==="@reverse"){const ne={"@id":N},w=u["@reverse"];for(const x in w){const Q=w[x];for(const B of Q){let M=B["@id"];f.isBlankNode(B)&&(M=C.getId(M)),i.createNodeMap(B,c,h,C,M),E.addValue(P[M],x,ne,{propertyIsArray:!0,allowDuplicate:!1})}}continue}if(O==="@graph"){N in c||(c[N]={}),i.createNodeMap(u[O],c,N,C);continue}if(O==="@included"){i.createNodeMap(u[O],c,h,C);continue}if(O!=="@type"&&$(O)){if(O==="@index"&&O in b&&(u[O]!==b[O]||u[O]["@id"]!==b[O]["@id"]))throw new j("Invalid JSON-LD syntax; conflicting @index property detected.","jsonld.SyntaxError",{code:"conflicting indexes",subject:b});b[O]=u[O];continue}const F=u[O];if(O.indexOf("_:")===0&&(O=C.getId(O)),F.length!==0)for(let ne of F)if(O==="@type"&&(ne=ne.indexOf("_:")===0?C.getId(ne):ne),f.isSubject(ne)||f.isSubjectReference(ne)){if("@id"in ne&&!ne["@id"])continue;const w=f.isBlankNode(ne)?C.getId(ne["@id"]):ne["@id"];E.addValue(b,O,{"@id":w},{propertyIsArray:!0,allowDuplicate:!1}),i.createNodeMap(ne,c,h,C,w)}else if(f.isValue(ne))E.addValue(b,O,ne,{propertyIsArray:!0,allowDuplicate:!1});else if(f.isList(ne)){const w=[];i.createNodeMap(ne["@list"],c,h,C,N,w),ne={"@list":w},E.addValue(b,O,ne,{propertyIsArray:!0,allowDuplicate:!1})}else i.createNodeMap(ne,c,h,C,N),E.addValue(b,O,ne,{propertyIsArray:!0,allowDuplicate:!1});else E.addValue(b,O,[],{propertyIsArray:!0})}},i.mergeNodeMapGraphs=u=>{const c={};for(const h of Object.keys(u).sort())for(const C of Object.keys(u[h]).sort()){const N=u[h][C];C in c||(c[C]={"@id":C});const y=c[C];for(const P of Object.keys(N).sort())if($(P)&&P!=="@type")y[P]=E.clone(N[P]);else for(const b of N[P])E.addValue(y,P,E.clone(b),{propertyIsArray:!0,allowDuplicate:!1})}return c},i.mergeNodeMaps=u=>{const c=u["@default"],h=Object.keys(u).sort();for(const C of h){if(C==="@default")continue;const N=u[C];let y=c[C];y?"@graph"in y||(y["@graph"]=[]):c[C]=y={"@id":C,"@graph":[]};const P=y["@graph"];for(const b of Object.keys(N).sort()){const q=N[b];f.isSubjectReference(q)||P.push(q)}}return c}},701:(W,T,m)=>{const $=m(6957),f={};W.exports=f,f.setupDocumentLoaders=function(S){typeof XMLHttpRequest<"u"&&(S.documentLoaders.xhr=$,S.useDocumentLoader("xhr"))},f.setupGlobals=function(S){globalThis.JsonLdProcessor===void 0&&Object.defineProperty(globalThis,"JsonLdProcessor",{writable:!0,enumerable:!1,configurable:!0,value:S.JsonLdProcessor})}},9180:(W,T,m)=>{const{createNodeMap:$}=m(9233),{isKeyword:f}=m(1972),S=m(3978),E=m(2341),j=m(2207),i=m(7382),u=m(9263),{handleEvent:c}=m(2246),{RDF_FIRST:h,RDF_REST:C,RDF_NIL:N,RDF_TYPE:y,RDF_JSON_LITERAL:P,RDF_LANGSTRING:b,XSD_BOOLEAN:q,XSD_DOUBLE:O,XSD_INTEGER:F,XSD_STRING:ne}=m(9378),{isAbsolute:w}=m(470),x={};function Q(M,g,D,L,de){const pe=Object.keys(g).sort();for(const me of pe){const k=g[me],G=Object.keys(k).sort();for(let A of G){const z=k[A];if(A==="@type")A=y;else if(f(A))continue;for(const Y of z){const Z={termType:me.startsWith("_:")?"BlankNode":"NamedNode",value:me};if(!w(me)){de.eventHandler&&c({event:{type:["JsonLdEvent"],code:"relative subject reference",level:"warning",message:"Relative subject reference found.",details:{subject:me}},options:de});continue}const te={termType:A.startsWith("_:")?"BlankNode":"NamedNode",value:A};if(!w(A)){de.eventHandler&&c({event:{type:["JsonLdEvent"],code:"relative predicate reference",level:"warning",message:"Relative predicate reference found.",details:{predicate:A}},options:de});continue}if(te.termType==="BlankNode"&&!de.produceGeneralizedRdf){de.eventHandler&&c({event:{type:["JsonLdEvent"],code:"blank node predicate",level:"warning",message:"Dropping blank node predicate.",details:{property:L.getOldIds().find(ue=>L.getId(ue)===A)}},options:de});continue}const K=B(Y,L,M,D,de.rdfDirection,de);K&&M.push({subject:Z,predicate:te,object:K,graph:D})}}}}function B(M,g,D,L,de,pe){const me={};if(S.isValue(M)){me.termType="Literal",me.value=void 0,me.datatype={termType:"NamedNode"};let k=M["@value"];const G=M["@type"]||null;if(G==="@json")me.value=E(k),me.datatype.value=P;else if(i.isBoolean(k))me.value=k.toString(),me.datatype.value=G||q;else if(i.isDouble(k)||G===O)i.isDouble(k)||(k=parseFloat(k)),me.value=k.toExponential(15).replace(/(\d)0*e\+?/,"$1E"),me.datatype.value=G||O;else if(i.isNumber(k))me.value=k.toFixed(0),me.datatype.value=G||F;else if("@direction"in M&&de==="i18n-datatype"){const A=`https://www.w3.org/ns/i18n#${(M["@language"]||"").toLowerCase()}_${M["@direction"]}`;me.datatype.value=A,me.value=k}else{if("@direction"in M&&de==="compound-literal")throw new j("Unsupported rdfDirection value.","jsonld.InvalidRdfDirection",{value:de});if("@direction"in M&&de)throw new j("Unknown rdfDirection value.","jsonld.InvalidRdfDirection",{value:de});"@language"in M?("@direction"in M&&!de&&pe.eventHandler&&c({event:{type:["JsonLdEvent"],code:"rdfDirection not set",level:"warning",message:"rdfDirection not set for @direction.",details:{object:me.value}},options:pe}),me.value=k,me.datatype.value=G||b,me.language=M["@language"]):("@direction"in M&&!de&&pe.eventHandler&&c({event:{type:["JsonLdEvent"],code:"rdfDirection not set",level:"warning",message:"rdfDirection not set for @direction.",details:{object:me.value}},options:pe}),me.value=k,me.datatype.value=G||ne)}}else if(S.isList(M)){const k=function(G,A,z,Y,Z,te){const K={termType:"NamedNode",value:h},ue={termType:"NamedNode",value:C},Ne={termType:"NamedNode",value:N},ge=G.pop(),ce=ge?{termType:"BlankNode",value:A.getId()}:Ne;let X=ce;for(const V of G){const re=B(V,A,z,Y,Z,te),se={termType:"BlankNode",value:A.getId()};z.push({subject:X,predicate:K,object:re,graph:Y}),z.push({subject:X,predicate:ue,object:se,graph:Y}),X=se}if(ge){const V=B(ge,A,z,Y,Z,te);z.push({subject:X,predicate:K,object:V,graph:Y}),z.push({subject:X,predicate:ue,object:Ne,graph:Y})}return ce}(M["@list"],g,D,L,de,pe);me.termType=k.termType,me.value=k.value}else{const k=i.isObject(M)?M["@id"]:M;me.termType=k.startsWith("_:")?"BlankNode":"NamedNode",me.value=k}return me.termType!=="NamedNode"||w(me.value)?me:(pe.eventHandler&&c({event:{type:["JsonLdEvent"],code:"relative object reference",level:"warning",message:"Relative object reference found.",details:{object:me.value}},options:pe}),null)}W.exports=x,x.toRDF=(M,g)=>{const D=new u.IdentifierIssuer("_:b"),L={"@default":{}};$(M,L,"@default",D);const de=[],pe=Object.keys(L).sort();for(const me of pe){let k;if(me==="@default")k={termType:"DefaultGraph",value:""};else{if(!w(me)){g.eventHandler&&c({event:{type:["JsonLdEvent"],code:"relative graph reference",level:"warning",message:"Relative graph reference found.",details:{graph:me}},options:g});continue}k=me.startsWith("_:")?{termType:"BlankNode"}:{termType:"NamedNode"},k.value=me}Q(de,L[me],k,D,g)}return de}},7382:W=>{const T={};W.exports=T,T.isArray=Array.isArray,T.isBoolean=m=>typeof m=="boolean"||Object.prototype.toString.call(m)==="[object Boolean]",T.isDouble=m=>T.isNumber(m)&&(String(m).indexOf(".")!==-1||Math.abs(m)>=1e21),T.isEmptyObject=m=>T.isObject(m)&&Object.keys(m).length===0,T.isNumber=m=>typeof m=="number"||Object.prototype.toString.call(m)==="[object Number]",T.isNumeric=m=>!isNaN(parseFloat(m))&&isFinite(m),T.isObject=m=>Object.prototype.toString.call(m)==="[object Object]",T.isString=m=>typeof m=="string"||Object.prototype.toString.call(m)==="[object String]",T.isUndefined=m=>m===void 0},470:(W,T,m)=>{const $=m(7382),f={};W.exports=f,f.parsers={simple:{keys:["href","scheme","authority","path","query","fragment"],regex:/^(?:([^:\/?#]+):)?(?:\/\/([^\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/},full:{keys:["href","protocol","scheme","authority","auth","user","password","hostname","port","path","directory","file","query","fragment"],regex:/^(([a-zA-Z][a-zA-Z0-9+-.]*):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?(?:(((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/}},f.parse=(E,j)=>{const i={},u=f.parsers[j||"full"],c=u.regex.exec(E);let h=u.keys.length;for(;h--;)i[u.keys[h]]=c[h]===void 0?null:c[h];return(i.scheme==="https"&&i.port==="443"||i.scheme==="http"&&i.port==="80")&&(i.href=i.href.replace(":"+i.port,""),i.authority=i.authority.replace(":"+i.port,""),i.port=null),i.normalizedPath=f.removeDotSegments(i.path),i},f.prependBase=(E,j)=>{if(E===null||f.isAbsolute(j))return j;E&&!$.isString(E)||(E=f.parse(E||""));const i=f.parse(j),u={protocol:E.protocol||""};if(i.authority!==null)u.authority=i.authority,u.path=i.path,u.query=i.query;else if(u.authority=E.authority,i.path==="")u.path=E.path,i.query!==null?u.query=i.query:u.query=E.query;else{if(i.path.indexOf("/")===0)u.path=i.path;else{let h=E.path;h=h.substr(0,h.lastIndexOf("/")+1),(h.length>0||E.authority)&&h.substr(-1)!=="/"&&(h+="/"),h+=i.path,u.path=h}u.query=i.query}i.path!==""&&(u.path=f.removeDotSegments(u.path));let c=u.protocol;return u.authority!==null&&(c+="//"+u.authority),c+=u.path,u.query!==null&&(c+="?"+u.query),i.fragment!==null&&(c+="#"+i.fragment),c===""&&(c="./"),c},f.removeBase=(E,j)=>{if(E===null)return j;E&&!$.isString(E)||(E=f.parse(E||""));let i="";if(E.href!==""?i+=(E.protocol||"")+"//"+(E.authority||""):j.indexOf("//")&&(i+="//"),j.indexOf(i)!==0)return j;const u=f.parse(j.substr(i.length)),c=E.normalizedPath.split("/"),h=u.normalizedPath.split("/"),C=u.fragment||u.query?0:1;for(;c.length>0&&h.length>C&&c[0]===h[0];)c.shift(),h.shift();let N="";if(c.length>0){c.pop();for(let y=0;y<c.length;++y)N+="../"}return N+=h.join("/"),u.query!==null&&(N+="?"+u.query),u.fragment!==null&&(N+="#"+u.fragment),N===""&&(N="./"),N},f.removeDotSegments=E=>{if(E.length===0)return"";const j=E.split("/"),i=[];for(;j.length>0;){const u=j.shift(),c=j.length===0;u!=="."?u!==".."?i.push(u):(i.pop(),c&&i.push("")):c&&i.push("")}return E[0]==="/"&&i.length>0&&i[0]!==""&&i.unshift(""),i.length===1&&i[0]===""?"/":i.join("/")};const S=/^([A-Za-z][A-Za-z0-9+-.]*|_):[^\s]*$/;f.isAbsolute=E=>$.isString(E)&&S.test(E),f.isRelative=E=>$.isString(E)},9263:(W,T,m)=>{const $=m(3978),f=m(7382),S=m(989).IdentifierIssuer,E=m(2207),j=/(?:<[^>]*?>|"[^"]*?"|[^,])+/g,i=/\s*<([^>]*?)>\s*(?:;\s*(.*))?/,u=/(.*?)=(?:(?:"([^"]*?)")|([^"]*?))\s*(?:(?:;\s*)|$)/g,c="application/ld+json, application/json",h={};function C(N,y){if(f.isArray(y))for(let P=0;P<y.length;++P)y[P]=C(N,y[P]);else if($.isList(y))y["@list"]=C(N,y["@list"]);else if(f.isObject(y)){$.isBlankNode(y)&&(y["@id"]=N.getId(y["@id"]));const P=Object.keys(y).sort();for(let b=0;b<P.length;++b){const q=P[b];q!=="@id"&&(y[q]=C(N,y[q]))}}return y}W.exports=h,h.IdentifierIssuer=S,h.REGEX_BCP47=/^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/,h.REGEX_KEYWORD=/^@[a-zA-Z]+$/,h.clone=function(N){if(N&&typeof N=="object"){let y;if(f.isArray(N)){y=[];for(let P=0;P<N.length;++P)y[P]=h.clone(N[P])}else if(N instanceof Map){y=new Map;for(const[P,b]of N)y.set(P,h.clone(b))}else if(N instanceof Set){y=new Set;for(const P of N)y.add(h.clone(P))}else if(f.isObject(N)){y={};for(const P in N)y[P]=h.clone(N[P])}else y=N.toString();return y}return N},h.asArray=function(N){return Array.isArray(N)?N:[N]},h.buildHeaders=(N={})=>{if(Object.keys(N).some(y=>y.toLowerCase()==="accept"))throw new RangeError('Accept header may not be specified; only "'+c+'" is supported.');return Object.assign({Accept:c},N)},h.parseLinkHeader=N=>{const y={},P=N.match(j);for(let b=0;b<P.length;++b){let q=P[b].match(i);if(!q)continue;const O={target:q[1]},F=q[2];for(;q=u.exec(F);)O[q[1]]=q[2]===void 0?q[3]:q[2];const ne=O.rel||"";Array.isArray(y[ne])?y[ne].push(O):y.hasOwnProperty(ne)?y[ne]=[y[ne],O]:y[ne]=O}return y},h.validateTypeValue=(N,y)=>{if(!(f.isString(N)||f.isArray(N)&&N.every(P=>f.isString(P)))){if(y&&f.isObject(N))switch(Object.keys(N).length){case 0:return;case 1:if("@default"in N&&h.asArray(N["@default"]).every(P=>f.isString(P)))return}throw new E('Invalid JSON-LD syntax; "@type" value must a string, an array of strings, an empty object, or a default object.',"jsonld.SyntaxError",{code:"invalid type value",value:N})}},h.hasProperty=(N,y)=>{if(N.hasOwnProperty(y)){const P=N[y];return!f.isArray(P)||P.length>0}return!1},h.hasValue=(N,y,P)=>{if(h.hasProperty(N,y)){let b=N[y];const q=$.isList(b);if(f.isArray(b)||q){q&&(b=b["@list"]);for(let O=0;O<b.length;++O)if(h.compareValues(P,b[O]))return!0}else if(!f.isArray(P))return h.compareValues(P,b)}return!1},h.addValue=(N,y,P,b)=>{if("propertyIsArray"in(b=b||{})||(b.propertyIsArray=!1),"valueIsArray"in b||(b.valueIsArray=!1),"allowDuplicate"in b||(b.allowDuplicate=!0),"prependValue"in b||(b.prependValue=!1),b.valueIsArray)N[y]=P;else if(f.isArray(P)){P.length===0&&b.propertyIsArray&&!N.hasOwnProperty(y)&&(N[y]=[]),b.prependValue&&(P=P.concat(N[y]),N[y]=[]);for(let q=0;q<P.length;++q)h.addValue(N,y,P[q],b)}else if(N.hasOwnProperty(y)){const q=!b.allowDuplicate&&h.hasValue(N,y,P);f.isArray(N[y])||q&&!b.propertyIsArray||(N[y]=[N[y]]),q||(b.prependValue?N[y].unshift(P):N[y].push(P))}else N[y]=b.propertyIsArray?[P]:P},h.getValues=(N,y)=>[].concat(N[y]||[]),h.removeProperty=(N,y)=>{delete N[y]},h.removeValue=(N,y,P,b)=>{"propertyIsArray"in(b=b||{})||(b.propertyIsArray=!1);const q=h.getValues(N,y).filter(O=>!h.compareValues(O,P));q.length===0?h.removeProperty(N,y):q.length!==1||b.propertyIsArray?N[y]=q:N[y]=q[0]},h.relabelBlankNodes=(N,y)=>C((y=y||{}).issuer||new S("_:b"),N),h.compareValues=(N,y)=>N===y||!(!$.isValue(N)||!$.isValue(y)||N["@value"]!==y["@value"]||N["@type"]!==y["@type"]||N["@language"]!==y["@language"]||N["@index"]!==y["@index"])||!!(f.isObject(N)&&"@id"in N&&f.isObject(y)&&"@id"in y)&&N["@id"]===y["@id"],h.compareShortestLeast=(N,y)=>N.length<y.length?-1:y.length<N.length?1:N===y?0:N<y?-1:1},9749:(W,T,m)=>{const $=m(8799),f=Symbol("max"),S=Symbol("length"),E=Symbol("lengthCalculator"),j=Symbol("allowStale"),i=Symbol("maxAge"),u=Symbol("dispose"),c=Symbol("noDisposeOnSet"),h=Symbol("lruList"),C=Symbol("cache"),N=Symbol("updateAgeOnGet"),y=()=>1,P=(w,x,Q)=>{const B=w[C].get(x);if(B){const M=B.value;if(b(w,M)){if(O(w,B),!w[j])return}else Q&&(w[N]&&(B.value.now=Date.now()),w[h].unshiftNode(B));return M.value}},b=(w,x)=>{if(!x||!x.maxAge&&!w[i])return!1;const Q=Date.now()-x.now;return x.maxAge?Q>x.maxAge:w[i]&&Q>w[i]},q=w=>{if(w[S]>w[f])for(let x=w[h].tail;w[S]>w[f]&&x!==null;){const Q=x.prev;O(w,x),x=Q}},O=(w,x)=>{if(x){const Q=x.value;w[u]&&w[u](Q.key,Q.value),w[S]-=Q.length,w[C].delete(Q.key),w[h].removeNode(x)}};class F{constructor(x,Q,B,M,g){this.key=x,this.value=Q,this.length=B,this.now=M,this.maxAge=g||0}}const ne=(w,x,Q,B)=>{let M=Q.value;b(w,M)&&(O(w,Q),w[j]||(M=void 0)),M&&x.call(B,M.value,M.key,w)};W.exports=class{constructor(w){if(typeof w=="number"&&(w={max:w}),w||(w={}),w.max&&(typeof w.max!="number"||w.max<0))throw new TypeError("max must be a non-negative number");this[f]=w.max||1/0;const x=w.length||y;if(this[E]=typeof x!="function"?y:x,this[j]=w.stale||!1,w.maxAge&&typeof w.maxAge!="number")throw new TypeError("maxAge must be a number");this[i]=w.maxAge||0,this[u]=w.dispose,this[c]=w.noDisposeOnSet||!1,this[N]=w.updateAgeOnGet||!1,this.reset()}set max(w){if(typeof w!="number"||w<0)throw new TypeError("max must be a non-negative number");this[f]=w||1/0,q(this)}get max(){return this[f]}set allowStale(w){this[j]=!!w}get allowStale(){return this[j]}set maxAge(w){if(typeof w!="number")throw new TypeError("maxAge must be a non-negative number");this[i]=w,q(this)}get maxAge(){return this[i]}set lengthCalculator(w){typeof w!="function"&&(w=y),w!==this[E]&&(this[E]=w,this[S]=0,this[h].forEach(x=>{x.length=this[E](x.value,x.key),this[S]+=x.length})),q(this)}get lengthCalculator(){return this[E]}get length(){return this[S]}get itemCount(){return this[h].length}rforEach(w,x){x=x||this;for(let Q=this[h].tail;Q!==null;){const B=Q.prev;ne(this,w,Q,x),Q=B}}forEach(w,x){x=x||this;for(let Q=this[h].head;Q!==null;){const B=Q.next;ne(this,w,Q,x),Q=B}}keys(){return this[h].toArray().map(w=>w.key)}values(){return this[h].toArray().map(w=>w.value)}reset(){this[u]&&this[h]&&this[h].length&&this[h].forEach(w=>this[u](w.key,w.value)),this[C]=new Map,this[h]=new $,this[S]=0}dump(){return this[h].map(w=>!b(this,w)&&{k:w.key,v:w.value,e:w.now+(w.maxAge||0)}).toArray().filter(w=>w)}dumpLru(){return this[h]}set(w,x,Q){if((Q=Q||this[i])&&typeof Q!="number")throw new TypeError("maxAge must be a number");const B=Q?Date.now():0,M=this[E](x,w);if(this[C].has(w)){if(M>this[f])return O(this,this[C].get(w)),!1;const D=this[C].get(w).value;return this[u]&&(this[c]||this[u](w,D.value)),D.now=B,D.maxAge=Q,D.value=x,this[S]+=M-D.length,D.length=M,this.get(w),q(this),!0}const g=new F(w,x,M,B,Q);return g.length>this[f]?(this[u]&&this[u](w,x),!1):(this[S]+=g.length,this[h].unshift(g),this[C].set(w,this[h].head),q(this),!0)}has(w){if(!this[C].has(w))return!1;const x=this[C].get(w).value;return!b(this,x)}get(w){return P(this,w,!0)}peek(w){return P(this,w,!1)}pop(){const w=this[h].tail;return w?(O(this,w),w.value):null}del(w){O(this,this[C].get(w))}load(w){this.reset();const x=Date.now();for(let Q=w.length-1;Q>=0;Q--){const B=w[Q],M=B.e||0;if(M===0)this.set(B.k,B.v);else{const g=M-x;g>0&&this.set(B.k,B.v,g)}}}prune(){this[C].forEach((w,x)=>P(this,x,!1))}}},6585:W=>{var T=1e3,m=60*T,$=60*m,f=24*$;function S(E,j,i,u){var c=j>=1.5*i;return Math.round(E/i)+" "+u+(c?"s":"")}W.exports=function(E,j){j=j||{};var i,u,c=typeof E;if(c==="string"&&E.length>0)return function(h){if(!((h=String(h)).length>100)){var C=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(h);if(C){var N=parseFloat(C[1]);switch((C[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*N;case"weeks":case"week":case"w":return 6048e5*N;case"days":case"day":case"d":return N*f;case"hours":case"hour":case"hrs":case"hr":case"h":return N*$;case"minutes":case"minute":case"mins":case"min":case"m":return N*m;case"seconds":case"second":case"secs":case"sec":case"s":return N*T;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return N;default:return}}}}(E);if(c==="number"&&isFinite(E))return j.long?(i=E,(u=Math.abs(i))>=f?S(i,u,f,"day"):u>=$?S(i,u,$,"hour"):u>=m?S(i,u,m,"minute"):u>=T?S(i,u,T,"second"):i+" ms"):function(h){var C=Math.abs(h);return C>=f?Math.round(h/f)+"d":C>=$?Math.round(h/$)+"h":C>=m?Math.round(h/m)+"m":C>=T?Math.round(h/T)+"s":h+"ms"}(E);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(E))}},5606:W=>{var T,m,$=W.exports={};function f(){throw new Error("setTimeout has not been defined")}function S(){throw new Error("clearTimeout has not been defined")}function E(P){if(T===setTimeout)return setTimeout(P,0);if((T===f||!T)&&setTimeout)return T=setTimeout,setTimeout(P,0);try{return T(P,0)}catch{try{return T.call(null,P,0)}catch{return T.call(this,P,0)}}}(function(){try{T=typeof setTimeout=="function"?setTimeout:f}catch{T=f}try{m=typeof clearTimeout=="function"?clearTimeout:S}catch{m=S}})();var j,i=[],u=!1,c=-1;function h(){u&&j&&(u=!1,j.length?i=j.concat(i):c=-1,i.length&&C())}function C(){if(!u){var P=E(h);u=!0;for(var b=i.length;b;){for(j=i,i=[];++c<b;)j&&j[c].run();c=-1,b=i.length}j=null,u=!1,function(q){if(m===clearTimeout)return clearTimeout(q);if((m===S||!m)&&clearTimeout)return m=clearTimeout,clearTimeout(q);try{return m(q)}catch{try{return m.call(null,q)}catch{return m.call(this,q)}}}(P)}}function N(P,b){this.fun=P,this.array=b}function y(){}$.nextTick=function(P){var b=new Array(arguments.length-1);if(arguments.length>1)for(var q=1;q<arguments.length;q++)b[q-1]=arguments[q];i.push(new N(P,b)),i.length!==1||u||E(C)},N.prototype.run=function(){this.fun.apply(null,this.array)},$.title="browser",$.browser=!0,$.env={},$.argv=[],$.version="",$.versions={},$.on=y,$.addListener=y,$.once=y,$.off=y,$.removeListener=y,$.removeAllListeners=y,$.emit=y,$.prependListener=y,$.prependOnceListener=y,$.listeners=function(P){return[]},$.binding=function(P){throw new Error("process.binding is not supported")},$.cwd=function(){return"/"},$.chdir=function(P){throw new Error("process.chdir is not supported")},$.umask=function(){return 0}},9596:(W,T,m)=>{let $;W.exports=typeof queueMicrotask=="function"?queueMicrotask.bind(typeof window<"u"?window:m.g):f=>($||($=Promise.resolve())).then(f).catch(S=>setTimeout(()=>{throw S},0))},989:(W,T,m)=>{W.exports=m(4005)},2985:W=>{W.exports=class kn{constructor(m,$=new Map,f=0){this.prefix=m,this._existing=$,this.counter=f}clone(){const{prefix:m,_existing:$,counter:f}=this;return new kn(m,new Map($),f)}getId(m){const $=m&&this._existing.get(m);if($)return $;const f=this.prefix+this.counter;return this.counter++,m&&this._existing.set(m,f),f}hasId(m){return this._existing.has(m)}getOldIds(){return[...this._existing.keys()]}}},3751:(W,T,m)=>{m(2791);const $=self.crypto||self.msCrypto;W.exports=class{constructor(f){if(!$||!$.subtle)throw new Error("crypto.subtle not found.");if(f==="sha256")this.algorithm={name:"SHA-256"};else{if(f!=="sha1")throw new Error(`Unsupported algorithm "${f}".`);this.algorithm={name:"SHA-1"}}this._content=""}update(f){this._content+=f}async digest(){const f=new TextEncoder().encode(this._content),S=new Uint8Array(await $.subtle.digest(this.algorithm,f));let E="";for(let j=0;j<S.length;++j)E+=S[j].toString(16).padStart(2,"0");return E}}},1227:W=>{const T="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString",m="http://www.w3.org/2001/XMLSchema#string",$="NamedNode",f="BlankNode",S="Literal",E="DefaultGraph",j={};(()=>{const c="(?:<([^:]+:[^>]*)>)",h="A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_",C=h+"0-9-·̀-ͯ‿-⁀",N="(_:(?:["+h+"0-9])(?:(?:["+C+".])*(?:["+C+"]))?)",y="[ \\t]+",P="[ \\t]*",b="(?:"+c+"|"+N+")"+y,q=c+y,O="(?:"+c+"|"+N+'|(?:"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"(?:(?:\\^\\^'+c+")|(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*)))?))"+P,F="(?:\\.|(?:(?:"+c+"|"+N+")"+P+"\\.))";j.eoln=/(?:\r\n)|(?:\n)|(?:\r)/g,j.empty=new RegExp("^"+P+"$"),j.quad=new RegExp("^"+P+b+q+O+F+P+"$")})(),W.exports=class Nt{static parse(h){const C=[],N={},y=h.split(j.eoln);let P=0;for(const O of y){if(P++,j.empty.test(O))continue;const F=O.match(j.quad);if(F===null)throw new Error("N-Quads parse error on line "+P+".");const ne={subject:null,predicate:null,object:null,graph:null};if(F[1]!==void 0?ne.subject={termType:$,value:F[1]}:ne.subject={termType:f,value:F[2]},ne.predicate={termType:$,value:F[3]},F[4]!==void 0?ne.object={termType:$,value:F[4]}:F[5]!==void 0?ne.object={termType:f,value:F[5]}:(ne.object={termType:S,value:void 0,datatype:{termType:$}},F[7]!==void 0?ne.object.datatype.value=F[7]:F[8]!==void 0?(ne.object.datatype.value=T,ne.object.language=F[8]):ne.object.datatype.value=m,ne.object.value=F[6].replace(u,function(w,x,Q,B){if(x)switch(x){case"t":return"	";case"b":return"\b";case"n":return`
`;case"r":return"\r";case"f":return"\f";case'"':return'"';case"'":return"'";case"\\":return"\\"}if(Q)return String.fromCharCode(parseInt(Q,16));if(B)throw new Error("Unsupported U escape")})),F[9]!==void 0?ne.graph={termType:$,value:F[9]}:F[10]!==void 0?ne.graph={termType:f,value:F[10]}:ne.graph={termType:E,value:""},ne.graph.value in N){let w=!0;const x=N[ne.graph.value];for(const Q of x)if(q=ne,(b=Q).subject.termType===q.subject.termType&&b.object.termType===q.object.termType&&b.subject.value===q.subject.value&&b.predicate.value===q.predicate.value&&b.object.value===q.object.value&&(b.object.termType!==S||b.object.datatype.termType===q.object.datatype.termType&&b.object.language===q.object.language&&b.object.datatype.value===q.object.datatype.value)){w=!1;break}w&&(x.push(ne),C.push(ne))}else N[ne.graph.value]=[ne],C.push(ne)}var b,q;return C}static serialize(h){Array.isArray(h)||(h=Nt.legacyDatasetToQuads(h));const C=[];for(const N of h)C.push(Nt.serializeQuad(N));return C.sort().join("")}static serializeQuadComponents(h,C,N,y){let P="";return h.termType===$?P+=`<${h.value}>`:P+=`${h.value}`,P+=` <${C.value}> `,N.termType===$?P+=`<${N.value}>`:N.termType===f?P+=N.value:(P+=`"${function(b){return b.replace(i,function(q){switch(q){case'"':return'\\"';case"\\":return"\\\\";case`
`:return"\\n";case"\r":return"\\r"}})}(N.value)}"`,N.datatype.value===T?N.language&&(P+=`@${N.language}`):N.datatype.value!==m&&(P+=`^^<${N.datatype.value}>`)),y.termType===$?P+=` <${y.value}>`:y.termType===f&&(P+=` ${y.value}`),P+=` .
`,P}static serializeQuad(h){return Nt.serializeQuadComponents(h.subject,h.predicate,h.object,h.graph)}static legacyDatasetToQuads(h){const C=[],N={"blank node":f,IRI:$,literal:S};for(const y in h)h[y].forEach(P=>{const b={};for(const q in P){const O=P[q],F={termType:N[O.type],value:O.value};F.termType===S&&(F.datatype={termType:$},"datatype"in O&&(F.datatype.value=O.datatype),"language"in O?("datatype"in O||(F.datatype.value=T),F.language=O.language):"datatype"in O||(F.datatype.value=m)),b[q]=F}b.graph=y==="@default"?{termType:E,value:""}:{termType:y.startsWith("_:")?f:$,value:y},C.push(b)});return C}};const i=/["\\\n\r]/g,u=/(?:\\([tbnrf"'\\]))|(?:\\u([0-9A-Fa-f]{4}))|(?:\\U([0-9A-Fa-f]{8}))/g},9925:W=>{W.exports=class{constructor(T){this.current=T.sort(),this.done=!1,this.dir=new Map;for(let m=0;m<T.length;++m)this.dir.set(T[m],!0)}hasNext(){return!this.done}next(){const{current:T,dir:m}=this,$=T.slice();let f=null,S=0;const E=T.length;for(let j=0;j<E;++j){const i=T[j],u=m.get(i);(f===null||i>f)&&(u&&j>0&&i>T[j-1]||!u&&j<E-1&&i>T[j+1])&&(f=i,S=j)}if(f===null)this.done=!0;else{const j=m.get(f)?S-1:S+1;T[S]=T[j],T[j]=f;for(const i of T)i>f&&m.set(i,!m.get(i))}return $}}},3513:(W,T,m)=>{const $=m(2985),f=m(3751),S=m(9925),E=m(1227);function j(i,u){return i.hash<u.hash?-1:i.hash>u.hash?1:0}W.exports=class{constructor({createMessageDigest:i=()=>new f("sha256"),canonicalIdMap:u=new Map,maxDeepIterations:c=1/0}={}){this.name="URDNA2015",this.blankNodeInfo=new Map,this.canonicalIssuer=new $("_:c14n",u),this.createMessageDigest=i,this.maxDeepIterations=c,this.quads=null,this.deepIterations=null}async main(i){this.deepIterations=new Map,this.quads=i;for(const P of i)this._addBlankNodeQuadInfo({quad:P,component:P.subject}),this._addBlankNodeQuadInfo({quad:P,component:P.object}),this._addBlankNodeQuadInfo({quad:P,component:P.graph});const u=new Map,c=[...this.blankNodeInfo.keys()];let h=0;for(const P of c)++h%100==0&&await this._yield(),await this._hashAndTrackBlankNode({id:P,hashToBlankNodes:u});const C=[...u.keys()].sort(),N=[];for(const P of C){const b=u.get(P);if(b.length>1){N.push(b);continue}const q=b[0];this.canonicalIssuer.getId(q)}for(const P of N){const b=[];for(const q of P){if(this.canonicalIssuer.hasId(q))continue;const O=new $("_:b");O.getId(q);const F=await this.hashNDegreeQuads(q,O);b.push(F)}b.sort(j);for(const q of b){const O=q.issuer.getOldIds();for(const F of O)this.canonicalIssuer.getId(F)}}const y=[];for(const P of this.quads){const b=E.serializeQuadComponents(this._componentWithCanonicalId(P.subject),P.predicate,this._componentWithCanonicalId(P.object),this._componentWithCanonicalId(P.graph));y.push(b)}return y.sort(),y.join("")}async hashFirstDegreeQuads(i){const u=[],c=this.blankNodeInfo.get(i),h=c.quads;for(const N of h){const y={subject:null,predicate:N.predicate,object:null,graph:null};y.subject=this.modifyFirstDegreeComponent(i,N.subject,"subject"),y.object=this.modifyFirstDegreeComponent(i,N.object,"object"),y.graph=this.modifyFirstDegreeComponent(i,N.graph,"graph"),u.push(E.serializeQuad(y))}u.sort();const C=this.createMessageDigest();for(const N of u)C.update(N);return c.hash=await C.digest(),c.hash}async hashRelatedBlankNode(i,u,c,h){let C;C=this.canonicalIssuer.hasId(i)?this.canonicalIssuer.getId(i):c.hasId(i)?c.getId(i):this.blankNodeInfo.get(i).hash;const N=this.createMessageDigest();return N.update(h),h!=="g"&&N.update(this.getRelatedPredicate(u)),N.update(C),N.digest()}async hashNDegreeQuads(i,u){const c=this.deepIterations.get(i)||0;if(c>this.maxDeepIterations)throw new Error(`Maximum deep iterations (${this.maxDeepIterations}) exceeded.`);this.deepIterations.set(i,c+1);const h=this.createMessageDigest(),C=await this.createHashToRelated(i,u),N=[...C.keys()].sort();for(const y of N){h.update(y);let P,b="";const q=new S(C.get(y));let O=0;for(;q.hasNext();){const F=q.next();++O%3==0&&await this._yield();let ne=u.clone(),w="";const x=[];let Q=!1;for(const B of F)if(this.canonicalIssuer.hasId(B)?w+=this.canonicalIssuer.getId(B):(ne.hasId(B)||x.push(B),w+=ne.getId(B)),b.length!==0&&w>b){Q=!0;break}if(!Q){for(const B of x){const M=await this.hashNDegreeQuads(B,ne);if(w+=ne.getId(B),w+=`<${M.hash}>`,ne=M.issuer,b.length!==0&&w>b){Q=!0;break}}Q||(b.length===0||w<b)&&(b=w,P=ne)}}h.update(b),u=P}return{hash:await h.digest(),issuer:u}}modifyFirstDegreeComponent(i,u){return u.termType!=="BlankNode"?u:{termType:"BlankNode",value:u.value===i?"_:a":"_:z"}}getRelatedPredicate(i){return`<${i.predicate.value}>`}async createHashToRelated(i,u){const c=new Map,h=this.blankNodeInfo.get(i).quads;let C=0;for(const N of h)++C%100==0&&await this._yield(),await Promise.all([this._addRelatedBlankNodeHash({quad:N,component:N.subject,position:"s",id:i,issuer:u,hashToRelated:c}),this._addRelatedBlankNodeHash({quad:N,component:N.object,position:"o",id:i,issuer:u,hashToRelated:c}),this._addRelatedBlankNodeHash({quad:N,component:N.graph,position:"g",id:i,issuer:u,hashToRelated:c})]);return c}async _hashAndTrackBlankNode({id:i,hashToBlankNodes:u}){const c=await this.hashFirstDegreeQuads(i),h=u.get(c);h?h.push(i):u.set(c,[i])}_addBlankNodeQuadInfo({quad:i,component:u}){if(u.termType!=="BlankNode")return;const c=u.value,h=this.blankNodeInfo.get(c);h?h.quads.add(i):this.blankNodeInfo.set(c,{quads:new Set([i]),hash:null})}async _addRelatedBlankNodeHash({quad:i,component:u,position:c,id:h,issuer:C,hashToRelated:N}){if(u.termType!=="BlankNode"||u.value===h)return;const y=u.value,P=await this.hashRelatedBlankNode(y,i,C,c),b=N.get(P);b?b.push(y):N.set(P,[y])}_componentWithCanonicalId(i){return i.termType!=="BlankNode"||i.value.startsWith(this.canonicalIssuer.prefix)?i:{termType:"BlankNode",value:this.canonicalIssuer.getId(i.value)}}async _yield(){return new Promise(i=>setImmediate(i))}}},2438:(W,T,m)=>{const $=m(2985),f=m(3751),S=m(9925),E=m(1227);function j(i,u){return i.hash<u.hash?-1:i.hash>u.hash?1:0}W.exports=class{constructor({createMessageDigest:i=()=>new f("sha256"),canonicalIdMap:u=new Map,maxDeepIterations:c=1/0}={}){this.name="URDNA2015",this.blankNodeInfo=new Map,this.canonicalIssuer=new $("_:c14n",u),this.createMessageDigest=i,this.maxDeepIterations=c,this.quads=null,this.deepIterations=null}main(i){this.deepIterations=new Map,this.quads=i;for(const y of i)this._addBlankNodeQuadInfo({quad:y,component:y.subject}),this._addBlankNodeQuadInfo({quad:y,component:y.object}),this._addBlankNodeQuadInfo({quad:y,component:y.graph});const u=new Map,c=[...this.blankNodeInfo.keys()];for(const y of c)this._hashAndTrackBlankNode({id:y,hashToBlankNodes:u});const h=[...u.keys()].sort(),C=[];for(const y of h){const P=u.get(y);if(P.length>1){C.push(P);continue}const b=P[0];this.canonicalIssuer.getId(b)}for(const y of C){const P=[];for(const b of y){if(this.canonicalIssuer.hasId(b))continue;const q=new $("_:b");q.getId(b);const O=this.hashNDegreeQuads(b,q);P.push(O)}P.sort(j);for(const b of P){const q=b.issuer.getOldIds();for(const O of q)this.canonicalIssuer.getId(O)}}const N=[];for(const y of this.quads){const P=E.serializeQuadComponents(this._componentWithCanonicalId({component:y.subject}),y.predicate,this._componentWithCanonicalId({component:y.object}),this._componentWithCanonicalId({component:y.graph}));N.push(P)}return N.sort(),N.join("")}hashFirstDegreeQuads(i){const u=[],c=this.blankNodeInfo.get(i),h=c.quads;for(const N of h){const y={subject:null,predicate:N.predicate,object:null,graph:null};y.subject=this.modifyFirstDegreeComponent(i,N.subject,"subject"),y.object=this.modifyFirstDegreeComponent(i,N.object,"object"),y.graph=this.modifyFirstDegreeComponent(i,N.graph,"graph"),u.push(E.serializeQuad(y))}u.sort();const C=this.createMessageDigest();for(const N of u)C.update(N);return c.hash=C.digest(),c.hash}hashRelatedBlankNode(i,u,c,h){let C;C=this.canonicalIssuer.hasId(i)?this.canonicalIssuer.getId(i):c.hasId(i)?c.getId(i):this.blankNodeInfo.get(i).hash;const N=this.createMessageDigest();return N.update(h),h!=="g"&&N.update(this.getRelatedPredicate(u)),N.update(C),N.digest()}hashNDegreeQuads(i,u){const c=this.deepIterations.get(i)||0;if(c>this.maxDeepIterations)throw new Error(`Maximum deep iterations (${this.maxDeepIterations}) exceeded.`);this.deepIterations.set(i,c+1);const h=this.createMessageDigest(),C=this.createHashToRelated(i,u),N=[...C.keys()].sort();for(const y of N){h.update(y);let P,b="";const q=new S(C.get(y));for(;q.hasNext();){const O=q.next();let F=u.clone(),ne="";const w=[];let x=!1;for(const Q of O)if(this.canonicalIssuer.hasId(Q)?ne+=this.canonicalIssuer.getId(Q):(F.hasId(Q)||w.push(Q),ne+=F.getId(Q)),b.length!==0&&ne>b){x=!0;break}if(!x){for(const Q of w){const B=this.hashNDegreeQuads(Q,F);if(ne+=F.getId(Q),ne+=`<${B.hash}>`,F=B.issuer,b.length!==0&&ne>b){x=!0;break}}x||(b.length===0||ne<b)&&(b=ne,P=F)}}h.update(b),u=P}return{hash:h.digest(),issuer:u}}modifyFirstDegreeComponent(i,u){return u.termType!=="BlankNode"?u:{termType:"BlankNode",value:u.value===i?"_:a":"_:z"}}getRelatedPredicate(i){return`<${i.predicate.value}>`}createHashToRelated(i,u){const c=new Map,h=this.blankNodeInfo.get(i).quads;for(const C of h)this._addRelatedBlankNodeHash({quad:C,component:C.subject,position:"s",id:i,issuer:u,hashToRelated:c}),this._addRelatedBlankNodeHash({quad:C,component:C.object,position:"o",id:i,issuer:u,hashToRelated:c}),this._addRelatedBlankNodeHash({quad:C,component:C.graph,position:"g",id:i,issuer:u,hashToRelated:c});return c}_hashAndTrackBlankNode({id:i,hashToBlankNodes:u}){const c=this.hashFirstDegreeQuads(i),h=u.get(c);h?h.push(i):u.set(c,[i])}_addBlankNodeQuadInfo({quad:i,component:u}){if(u.termType!=="BlankNode")return;const c=u.value,h=this.blankNodeInfo.get(c);h?h.quads.add(i):this.blankNodeInfo.set(c,{quads:new Set([i]),hash:null})}_addRelatedBlankNodeHash({quad:i,component:u,position:c,id:h,issuer:C,hashToRelated:N}){if(u.termType!=="BlankNode"||u.value===h)return;const y=u.value,P=this.hashRelatedBlankNode(y,i,C,c),b=N.get(P);b?b.push(y):N.set(P,[y])}_componentWithCanonicalId({component:i}){return i.termType!=="BlankNode"||i.value.startsWith(this.canonicalIssuer.prefix)?i:{termType:"BlankNode",value:this.canonicalIssuer.getId(i.value)}}}},3845:(W,T,m)=>{const $=m(3751),f=m(3513);W.exports=class extends f{constructor(){super(),this.name="URGNA2012",this.createMessageDigest=()=>new $("sha1")}modifyFirstDegreeComponent(S,E,j){return E.termType!=="BlankNode"?E:j==="graph"?{termType:"BlankNode",value:"_:g"}:{termType:"BlankNode",value:E.value===S?"_:a":"_:z"}}getRelatedPredicate(S){return S.predicate.value}async createHashToRelated(S,E){const j=new Map,i=this.blankNodeInfo.get(S).quads;let u=0;for(const c of i){let h,C;if(c.subject.termType==="BlankNode"&&c.subject.value!==S)C=c.subject.value,h="p";else{if(c.object.termType!=="BlankNode"||c.object.value===S)continue;C=c.object.value,h="r"}++u%100==0&&await this._yield();const N=await this.hashRelatedBlankNode(C,c,E,h),y=j.get(N);y?y.push(C):j.set(N,[C])}return j}}},378:(W,T,m)=>{const $=m(3751),f=m(2438);W.exports=class extends f{constructor(){super(),this.name="URGNA2012",this.createMessageDigest=()=>new $("sha1")}modifyFirstDegreeComponent(S,E,j){return E.termType!=="BlankNode"?E:j==="graph"?{termType:"BlankNode",value:"_:g"}:{termType:"BlankNode",value:E.value===S?"_:a":"_:z"}}getRelatedPredicate(S){return S.predicate.value}createHashToRelated(S,E){const j=new Map,i=this.blankNodeInfo.get(S).quads;for(const u of i){let c,h;if(u.subject.termType==="BlankNode"&&u.subject.value!==S)h=u.subject.value,c="p";else{if(u.object.termType!=="BlankNode"||u.object.value===S)continue;h=u.object.value,c="r"}const C=this.hashRelatedBlankNode(h,u,E,c),N=j.get(C);N?N.push(h):j.set(C,[h])}return j}}},4005:(W,T,m)=>{const $=m(3513),f=m(3845),S=m(2438),E=m(378);let j;try{j=m(7789)}catch{}function i(u){return Array.isArray(u)?u:T.NQuads.legacyDatasetToQuads(u)}T.NQuads=m(1227),T.IdentifierIssuer=m(2985),T._rdfCanonizeNative=function(u){return u&&(j=u),j},T.canonize=async function(u,c){const h=i(u);if(c.useNative){if(!j)throw new Error("rdf-canonize-native not available");if(c.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "useNative".');return new Promise((C,N)=>j.canonize(h,c,(y,P)=>y?N(y):C(P)))}if(c.algorithm==="URDNA2015")return new $(c).main(h);if(c.algorithm==="URGNA2012"){if(c.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "URGNA2012".');return new f(c).main(h)}throw"algorithm"in c?new Error("Invalid RDF Dataset Canonicalization algorithm: "+c.algorithm):new Error("No RDF Dataset Canonicalization algorithm specified.")},T._canonizeSync=function(u,c){const h=i(u);if(c.useNative){if(!j)throw new Error("rdf-canonize-native not available");if(c.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "useNative".');return j.canonizeSync(h,c)}if(c.algorithm==="URDNA2015")return new S(c).main(h);if(c.algorithm==="URGNA2012"){if(c.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "URGNA2012".');return new E(c).main(h)}throw"algorithm"in c?new Error("Invalid RDF Dataset Canonicalization algorithm: "+c.algorithm):new Error("No RDF Dataset Canonicalization algorithm specified.")}},7793:function(W,T,m){var $=this&&this.__createBinding||(Object.create?function(S,E,j,i){i===void 0&&(i=j),Object.defineProperty(S,i,{enumerable:!0,get:function(){return E[j]}})}:function(S,E,j,i){i===void 0&&(i=j),S[i]=E[j]}),f=this&&this.__exportStar||function(S,E){for(var j in S)j==="default"||Object.prototype.hasOwnProperty.call(E,j)||$(E,S,j)};Object.defineProperty(T,"__esModule",{value:!0}),f(m(9931),T),f(m(8483),T),f(m(2142),T),f(m(2426),T),f(m(3988),T),f(m(6754),T),f(m(8401),T)},9931:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.BlankNode=void 0,T.BlankNode=class{constructor(m){this.termType="BlankNode",this.value=m}equals(m){return!!m&&m.termType==="BlankNode"&&m.value===this.value}}},8483:(W,T,m)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.DataFactory=void 0;const $=m(9931),f=m(2142),S=m(2426),E=m(3988),j=m(6754),i=m(8401);let u=0;T.DataFactory=class{constructor(c){this.blankNodeCounter=0,c=c||{},this.blankNodePrefix=c.blankNodePrefix||`df_${u++}_`}namedNode(c){return new E.NamedNode(c)}blankNode(c){return new $.BlankNode(c||`${this.blankNodePrefix}${this.blankNodeCounter++}`)}literal(c,h){return new S.Literal(c,h)}variable(c){return new i.Variable(c)}defaultGraph(){return f.DefaultGraph.INSTANCE}quad(c,h,C,N){return new j.Quad(c,h,C,N||this.defaultGraph())}fromTerm(c){switch(c.termType){case"NamedNode":return this.namedNode(c.value);case"BlankNode":return this.blankNode(c.value);case"Literal":return c.language?this.literal(c.value,c.language):c.datatype.equals(S.Literal.XSD_STRING)?this.literal(c.value):this.literal(c.value,this.fromTerm(c.datatype));case"Variable":return this.variable(c.value);case"DefaultGraph":return this.defaultGraph();case"Quad":return this.quad(this.fromTerm(c.subject),this.fromTerm(c.predicate),this.fromTerm(c.object),this.fromTerm(c.graph))}}fromQuad(c){return this.fromTerm(c)}resetBlankNodeCounter(){this.blankNodeCounter=0}}},2142:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.DefaultGraph=void 0;class m{constructor(){this.termType="DefaultGraph",this.value=""}equals(f){return!!f&&f.termType==="DefaultGraph"}}T.DefaultGraph=m,m.INSTANCE=new m},2426:(W,T,m)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.Literal=void 0;const $=m(3988);class f{constructor(E,j){this.termType="Literal",this.value=E,typeof j=="string"?(this.language=j,this.datatype=f.RDF_LANGUAGE_STRING):j?(this.language="",this.datatype=j):(this.language="",this.datatype=f.XSD_STRING)}equals(E){return!!E&&E.termType==="Literal"&&E.value===this.value&&E.language===this.language&&this.datatype.equals(E.datatype)}}T.Literal=f,f.RDF_LANGUAGE_STRING=new $.NamedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),f.XSD_STRING=new $.NamedNode("http://www.w3.org/2001/XMLSchema#string")},3988:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.NamedNode=void 0,T.NamedNode=class{constructor(m){this.termType="NamedNode",this.value=m}equals(m){return!!m&&m.termType==="NamedNode"&&m.value===this.value}}},6754:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.Quad=void 0,T.Quad=class{constructor(m,$,f,S){this.termType="Quad",this.value="",this.subject=m,this.predicate=$,this.object=f,this.graph=S}equals(m){return!!m&&(m.termType==="Quad"||!m.termType)&&this.subject.equals(m.subject)&&this.predicate.equals(m.predicate)&&this.object.equals(m.object)&&this.graph.equals(m.graph)}}},8401:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.Variable=void 0,T.Variable=class{constructor(m){this.termType="Variable",this.value=m}equals(m){return!!m&&m.termType==="Variable"&&m.value===this.value}}},9349:function(W,T,m){var $=this&&this.__createBinding||(Object.create?function(h,C,N,y){y===void 0&&(y=N),Object.defineProperty(h,y,{enumerable:!0,get:function(){return C[N]}})}:function(h,C,N,y){y===void 0&&(y=N),h[y]=C[N]}),f=this&&this.__exportStar||function(h,C){for(var N in h)N==="default"||Object.prototype.hasOwnProperty.call(C,N)||$(C,h,N)};Object.defineProperty(T,"__esModule",{value:!0}),T.getSupportedJavaScriptPrimitives=T.getSupportedRdfDatatypes=T.getTermRaw=T.toRdf=T.fromRdf=void 0;const S=m(7793),E=m(4802),j=m(103);f(m(4802),T),f(m(5448),T),f(m(103),T);const i=new S.DataFactory,u=new j.Translator;function c(h,C){return u.fromRdf(h,C)}u.registerHandler(new E.TypeHandlerString,E.TypeHandlerString.TYPES.map(h=>i.namedNode(h)),["string"]),u.registerHandler(new E.TypeHandlerBoolean,[E.TypeHandlerBoolean.TYPE].map(h=>i.namedNode(h)),["boolean"]),u.registerHandler(new E.TypeHandlerNumberDouble,E.TypeHandlerNumberDouble.TYPES.map(h=>i.namedNode(h)),["number"]),u.registerHandler(new E.TypeHandlerNumberInteger,E.TypeHandlerNumberInteger.TYPES.map(h=>i.namedNode(h)),["number"]),u.registerHandler(new E.TypeHandlerDate,E.TypeHandlerDate.TYPES.map(h=>i.namedNode(h)),["object"]),T.fromRdf=c,T.toRdf=function(h,C){return C&&"namedNode"in C&&(C={dataFactory:C}),(C=C||{})&&!C.dataFactory&&(C.dataFactory=i),u.toRdf(h,C)},T.getTermRaw=function(h,C){return h.termType==="Literal"?c(h,C):h.value},T.getSupportedRdfDatatypes=function(){return u.getSupportedRdfDatatypes()},T.getSupportedJavaScriptPrimitives=function(){return u.getSupportedJavaScriptPrimitives()}},5448:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0})},103:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.Translator=void 0,T.Translator=class{constructor(){this.supportedRdfDatatypes=[],this.fromRdfHandlers={},this.toRdfHandlers={}}static incorrectRdfDataType(m){throw new Error(`Invalid RDF ${m.datatype.value} value: '${m.value}'`)}registerHandler(m,$,f){for(const S of $)this.supportedRdfDatatypes.push(S),this.fromRdfHandlers[S.value]=m;for(const S of f){let E=this.toRdfHandlers[S];E||(this.toRdfHandlers[S]=E=[]),E.push(m)}}fromRdf(m,$){const f=this.fromRdfHandlers[m.datatype.value];return f?f.fromRdf(m,$):m.value}toRdf(m,$){const f=this.toRdfHandlers[typeof m];if(f)for(const S of f){const E=S.toRdf(m,$);if(E)return E}throw new Error(`Invalid JavaScript value: '${m}'`)}getSupportedRdfDatatypes(){return this.supportedRdfDatatypes}getSupportedJavaScriptPrimitives(){return Object.keys(this.toRdfHandlers)}}},92:(W,T,m)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.TypeHandlerBoolean=void 0;const $=m(103);class f{fromRdf(E,j){switch(E.value){case"true":case"1":return!0;case"false":case"0":return!1}return j&&$.Translator.incorrectRdfDataType(E),!1}toRdf(E,{datatype:j,dataFactory:i}){return i.literal(E?"true":"false",j||i.namedNode(f.TYPE))}}T.TypeHandlerBoolean=f,f.TYPE="http://www.w3.org/2001/XMLSchema#boolean"},7258:(W,T,m)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.TypeHandlerDate=void 0;const $=m(103);class f{fromRdf(E,j){switch(j&&!E.value.match(f.VALIDATORS[E.datatype.value.substr(33,E.datatype.value.length)])&&$.Translator.incorrectRdfDataType(E),E.datatype.value){case"http://www.w3.org/2001/XMLSchema#gDay":return new Date(0,0,parseInt(E.value,10));case"http://www.w3.org/2001/XMLSchema#gMonthDay":const i=E.value.split("-");return new Date(0,parseInt(i[0],10)-1,parseInt(i[1],10));case"http://www.w3.org/2001/XMLSchema#gYear":return new Date(E.value+"-01-01");case"http://www.w3.org/2001/XMLSchema#gYearMonth":return new Date(E.value+"-01");default:return new Date(E.value)}}toRdf(E,{datatype:j,dataFactory:i}){if(j=j||i.namedNode(f.TYPES[0]),!(E instanceof Date))return null;const u=E;let c;switch(j.value){case"http://www.w3.org/2001/XMLSchema#gDay":c=String(u.getUTCDate());break;case"http://www.w3.org/2001/XMLSchema#gMonthDay":c=u.getUTCMonth()+1+"-"+u.getUTCDate();break;case"http://www.w3.org/2001/XMLSchema#gYear":c=String(u.getUTCFullYear());break;case"http://www.w3.org/2001/XMLSchema#gYearMonth":c=u.getUTCFullYear()+"-"+(u.getUTCMonth()+1);break;case"http://www.w3.org/2001/XMLSchema#date":c=u.toISOString().replace(/T.*$/,"");break;default:c=u.toISOString()}return i.literal(c,j)}}T.TypeHandlerDate=f,f.TYPES=["http://www.w3.org/2001/XMLSchema#dateTime","http://www.w3.org/2001/XMLSchema#date","http://www.w3.org/2001/XMLSchema#gDay","http://www.w3.org/2001/XMLSchema#gMonthDay","http://www.w3.org/2001/XMLSchema#gYear","http://www.w3.org/2001/XMLSchema#gYearMonth"],f.VALIDATORS={date:/^[0-9]+-[0-9][0-9]-[0-9][0-9]Z?$/,dateTime:/^[0-9]+-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9](\.[0-9][0-9][0-9])?((Z?)|([\+-][0-9][0-9]:[0-9][0-9]))$/,gDay:/^[0-9]+$/,gMonthDay:/^[0-9]+-[0-9][0-9]$/,gYear:/^[0-9]+$/,gYearMonth:/^[0-9]+-[0-9][0-9]$/}},2406:(W,T,m)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.TypeHandlerNumberDouble=void 0;const $=m(103);class f{fromRdf(E,j){const i=parseFloat(E.value);return j&&isNaN(i)&&$.Translator.incorrectRdfDataType(E),i}toRdf(E,{datatype:j,dataFactory:i}){return j=j||i.namedNode(f.TYPES[0]),isNaN(E)?i.literal("NaN",j):isFinite(E)?E%1==0?null:i.literal(E.toExponential(15).replace(/(\d)0*e\+?/,"$1E"),j):i.literal(E>0?"INF":"-INF",j)}}T.TypeHandlerNumberDouble=f,f.TYPES=["http://www.w3.org/2001/XMLSchema#double","http://www.w3.org/2001/XMLSchema#decimal","http://www.w3.org/2001/XMLSchema#float"]},6925:(W,T,m)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.TypeHandlerNumberInteger=void 0;const $=m(103);class f{fromRdf(E,j){const i=parseInt(E.value,10);return j&&(isNaN(i)||E.value.indexOf(".")>=0)&&$.Translator.incorrectRdfDataType(E),i}toRdf(E,{datatype:j,dataFactory:i}){return i.literal(String(E),j||(E<=f.MAX_INT&&E>=f.MIN_INT?i.namedNode(f.TYPES[0]):i.namedNode(f.TYPES[1])))}}T.TypeHandlerNumberInteger=f,f.TYPES=["http://www.w3.org/2001/XMLSchema#integer","http://www.w3.org/2001/XMLSchema#long","http://www.w3.org/2001/XMLSchema#int","http://www.w3.org/2001/XMLSchema#byte","http://www.w3.org/2001/XMLSchema#short","http://www.w3.org/2001/XMLSchema#negativeInteger","http://www.w3.org/2001/XMLSchema#nonNegativeInteger","http://www.w3.org/2001/XMLSchema#nonPositiveInteger","http://www.w3.org/2001/XMLSchema#positiveInteger","http://www.w3.org/2001/XMLSchema#unsignedByte","http://www.w3.org/2001/XMLSchema#unsignedInt","http://www.w3.org/2001/XMLSchema#unsignedLong","http://www.w3.org/2001/XMLSchema#unsignedShort"],f.MAX_INT=2147483647,f.MIN_INT=-2147483648},4191:(W,T)=>{Object.defineProperty(T,"__esModule",{value:!0}),T.TypeHandlerString=void 0;class m{fromRdf(f){return f.value}toRdf(f,{datatype:S,dataFactory:E}){return E.literal(f,S)}}T.TypeHandlerString=m,m.TYPES=["http://www.w3.org/2001/XMLSchema#string","http://www.w3.org/2001/XMLSchema#normalizedString","http://www.w3.org/2001/XMLSchema#anyURI","http://www.w3.org/2001/XMLSchema#base64Binary","http://www.w3.org/2001/XMLSchema#language","http://www.w3.org/2001/XMLSchema#Name","http://www.w3.org/2001/XMLSchema#NCName","http://www.w3.org/2001/XMLSchema#NMTOKEN","http://www.w3.org/2001/XMLSchema#token","http://www.w3.org/2001/XMLSchema#hexBinary","http://www.w3.org/1999/02/22-rdf-syntax-ns#langString","http://www.w3.org/2001/XMLSchema#time","http://www.w3.org/2001/XMLSchema#duration"]},4802:function(W,T,m){var $=this&&this.__createBinding||(Object.create?function(S,E,j,i){i===void 0&&(i=j),Object.defineProperty(S,i,{enumerable:!0,get:function(){return E[j]}})}:function(S,E,j,i){i===void 0&&(i=j),S[i]=E[j]}),f=this&&this.__exportStar||function(S,E){for(var j in S)j==="default"||Object.prototype.hasOwnProperty.call(E,j)||$(E,S,j)};Object.defineProperty(T,"__esModule",{value:!0}),f(m(92),T),f(m(7258),T),f(m(2406),T),f(m(6925),T),f(m(4191),T)},4147:(W,T,m)=>{const{AbortError:$,codes:f}=m(6371),{isNodeStream:S,isWebStream:E,kControllerErrorFunction:j}=m(6115),i=m(6238),{ERR_INVALID_ARG_TYPE:u}=f;W.exports.addAbortSignal=function(c,h){if(((C,N)=>{if(typeof C!="object"||!("aborted"in C))throw new u("signal","AbortSignal",C)})(c),!S(h)&&!E(h))throw new u("stream",["ReadableStream","WritableStream","Stream"],h);return W.exports.addAbortSignalNoValidate(c,h)},W.exports.addAbortSignalNoValidate=function(c,h){if(typeof c!="object"||!("aborted"in c))return h;const C=S(h)?()=>{h.destroy(new $(void 0,{cause:c.reason}))}:()=>{h[j](new $(void 0,{cause:c.reason}))};return c.aborted?C():(c.addEventListener("abort",C),i(h,()=>c.removeEventListener("abort",C))),h}},345:(W,T,m)=>{const{StringPrototypeSlice:$,SymbolIterator:f,TypedArrayPrototypeSet:S,Uint8Array:E}=m(4134),{Buffer:j}=m(8287),{inspect:i}=m(7760);W.exports=class{constructor(){this.head=null,this.tail=null,this.length=0}push(u){const c={data:u,next:null};this.length>0?this.tail.next=c:this.head=c,this.tail=c,++this.length}unshift(u){const c={data:u,next:this.head};this.length===0&&(this.tail=c),this.head=c,++this.length}shift(){if(this.length===0)return;const u=this.head.data;return this.length===1?this.head=this.tail=null:this.head=this.head.next,--this.length,u}clear(){this.head=this.tail=null,this.length=0}join(u){if(this.length===0)return"";let c=this.head,h=""+c.data;for(;(c=c.next)!==null;)h+=u+c.data;return h}concat(u){if(this.length===0)return j.alloc(0);const c=j.allocUnsafe(u>>>0);let h=this.head,C=0;for(;h;)S(c,h.data,C),C+=h.data.length,h=h.next;return c}consume(u,c){const h=this.head.data;if(u<h.length){const C=h.slice(0,u);return this.head.data=h.slice(u),C}return u===h.length?this.shift():c?this._getString(u):this._getBuffer(u)}first(){return this.head.data}*[f](){for(let u=this.head;u;u=u.next)yield u.data}_getString(u){let c="",h=this.head,C=0;do{const N=h.data;if(!(u>N.length)){u===N.length?(c+=N,++C,h.next?this.head=h.next:this.head=this.tail=null):(c+=$(N,0,u),this.head=h,h.data=$(N,u));break}c+=N,u-=N.length,++C}while((h=h.next)!==null);return this.length-=C,c}_getBuffer(u){const c=j.allocUnsafe(u),h=u;let C=this.head,N=0;do{const y=C.data;if(!(u>y.length)){u===y.length?(S(c,y,h-u),++N,C.next?this.head=C.next:this.head=this.tail=null):(S(c,new E(y.buffer,y.byteOffset,u),h-u),this.head=C,C.data=y.slice(u));break}S(c,y,h-u),u-=y.length,++N}while((C=C.next)!==null);return this.length-=N,c}[Symbol.for("nodejs.util.inspect.custom")](u,c){return i(this,{...c,depth:0,customInspect:!1})}}},7830:(W,T,m)=>{const{pipeline:$}=m(7758),f=m(3370),{destroyer:S}=m(5896),{isNodeStream:E,isReadable:j,isWritable:i,isWebStream:u,isTransformStream:c,isWritableStream:h,isReadableStream:C}=m(6115),{AbortError:N,codes:{ERR_INVALID_ARG_VALUE:y,ERR_MISSING_ARGS:P}}=m(6371),b=m(6238);W.exports=function(...q){if(q.length===0)throw new P("streams");if(q.length===1)return f.from(q[0]);const O=[...q];if(typeof q[0]=="function"&&(q[0]=f.from(q[0])),typeof q[q.length-1]=="function"){const L=q.length-1;q[L]=f.from(q[L])}for(let L=0;L<q.length;++L)if(E(q[L])||u(q[L])){if(L<q.length-1&&!(j(q[L])||C(q[L])||c(q[L])))throw new y(`streams[${L}]`,O[L],"must be readable");if(L>0&&!(i(q[L])||h(q[L])||c(q[L])))throw new y(`streams[${L}]`,O[L],"must be writable")}let F,ne,w,x,Q;const B=q[0],M=$(q,function(L){const de=x;x=null,de?de(L):L?Q.destroy(L):D||g||Q.destroy()}),g=!!(i(B)||h(B)||c(B)),D=!!(j(M)||C(M)||c(M));if(Q=new f({writableObjectMode:!(B==null||!B.writableObjectMode),readableObjectMode:!(M==null||!M.writableObjectMode),writable:g,readable:D}),g){if(E(B))Q._write=function(de,pe,me){B.write(de,pe)?me():F=me},Q._final=function(de){B.end(),ne=de},B.on("drain",function(){if(F){const de=F;F=null,de()}});else if(u(B)){const de=(c(B)?B.writable:B).getWriter();Q._write=async function(pe,me,k){try{await de.ready,de.write(pe).catch(()=>{}),k()}catch(G){k(G)}},Q._final=async function(pe){try{await de.ready,de.close().catch(()=>{}),ne=pe}catch(me){pe(me)}}}const L=c(M)?M.readable:M;b(L,()=>{if(ne){const de=ne;ne=null,de()}})}if(D){if(E(M))M.on("readable",function(){if(w){const L=w;w=null,L()}}),M.on("end",function(){Q.push(null)}),Q._read=function(){for(;;){const L=M.read();if(L===null)return void(w=Q._read);if(!Q.push(L))return}};else if(u(M)){const L=(c(M)?M.readable:M).getReader();Q._read=async function(){for(;;)try{const{value:de,done:pe}=await L.read();if(!Q.push(de))return;if(pe)return void Q.push(null)}catch{return}}}}return Q._destroy=function(L,de){L||x===null||(L=new N),w=null,F=null,ne=null,x===null?de(L):(x=de,E(M)&&S(M,L))},Q}},5896:(W,T,m)=>{const $=m(5606),{aggregateTwoErrors:f,codes:{ERR_MULTIPLE_CALLBACK:S},AbortError:E}=m(6371),{Symbol:j}=m(4134),{kDestroyed:i,isDestroyed:u,isFinished:c,isServerRequest:h}=m(6115),C=j("kDestroy"),N=j("kConstruct");function y(M,g,D){M&&(M.stack,g&&!g.errored&&(g.errored=M),D&&!D.errored&&(D.errored=M))}function P(M,g,D){let L=!1;function de(pe){if(L)return;L=!0;const me=M._readableState,k=M._writableState;y(pe,k,me),k&&(k.closed=!0),me&&(me.closed=!0),typeof D=="function"&&D(pe),pe?$.nextTick(b,M,pe):$.nextTick(q,M)}try{M._destroy(g||null,de)}catch(pe){de(pe)}}function b(M,g){O(M,g),q(M)}function q(M){const g=M._readableState,D=M._writableState;D&&(D.closeEmitted=!0),g&&(g.closeEmitted=!0),(D!=null&&D.emitClose||g!=null&&g.emitClose)&&M.emit("close")}function O(M,g){const D=M._readableState,L=M._writableState;L!=null&&L.errorEmitted||D!=null&&D.errorEmitted||(L&&(L.errorEmitted=!0),D&&(D.errorEmitted=!0),M.emit("error",g))}function F(M,g,D){const L=M._readableState,de=M._writableState;if(de!=null&&de.destroyed||L!=null&&L.destroyed)return this;L!=null&&L.autoDestroy||de!=null&&de.autoDestroy?M.destroy(g):g&&(g.stack,de&&!de.errored&&(de.errored=g),L&&!L.errored&&(L.errored=g),D?$.nextTick(O,M,g):O(M,g))}function ne(M){let g=!1;function D(L){if(g)return void F(M,L??new S);g=!0;const de=M._readableState,pe=M._writableState,me=pe||de;de&&(de.constructed=!0),pe&&(pe.constructed=!0),me.destroyed?M.emit(C,L):L?F(M,L,!0):$.nextTick(w,M)}try{M._construct(L=>{$.nextTick(D,L)})}catch(L){$.nextTick(D,L)}}function w(M){M.emit(N)}function x(M){return(M==null?void 0:M.setHeader)&&typeof M.abort=="function"}function Q(M){M.emit("close")}function B(M,g){M.emit("error",g),$.nextTick(Q,M)}W.exports={construct:function(M,g){if(typeof M._construct!="function")return;const D=M._readableState,L=M._writableState;D&&(D.constructed=!1),L&&(L.constructed=!1),M.once(N,g),M.listenerCount(N)>1||$.nextTick(ne,M)},destroyer:function(M,g){M&&!u(M)&&(g||c(M)||(g=new E),h(M)?(M.socket=null,M.destroy(g)):x(M)?M.abort():x(M.req)?M.req.abort():typeof M.destroy=="function"?M.destroy(g):typeof M.close=="function"?M.close():g?$.nextTick(B,M,g):$.nextTick(Q,M),M.destroyed||(M[i]=!0))},destroy:function(M,g){const D=this._readableState,L=this._writableState,de=L||D;return L!=null&&L.destroyed||D!=null&&D.destroyed?(typeof g=="function"&&g(),this):(y(M,L,D),L&&(L.destroyed=!0),D&&(D.destroyed=!0),de.constructed?P(this,M,g):this.once(C,function(pe){P(this,f(pe,M),g)}),this)},undestroy:function(){const M=this._readableState,g=this._writableState;M&&(M.constructed=!0,M.closed=!1,M.closeEmitted=!1,M.destroyed=!1,M.errored=null,M.errorEmitted=!1,M.reading=!1,M.ended=M.readable===!1,M.endEmitted=M.readable===!1),g&&(g.constructed=!0,g.destroyed=!1,g.closed=!1,g.closeEmitted=!1,g.errored=null,g.errorEmitted=!1,g.finalCalled=!1,g.prefinished=!1,g.ended=g.writable===!1,g.ending=g.writable===!1,g.finished=g.writable===!1)},errorOrDestroy:F}},3370:(W,T,m)=>{const{ObjectDefineProperties:$,ObjectGetOwnPropertyDescriptor:f,ObjectKeys:S,ObjectSetPrototypeOf:E}=m(4134);W.exports=u;const j=m(7576),i=m(8584);E(u.prototype,j.prototype),E(u,j);{const N=S(i.prototype);for(let y=0;y<N.length;y++){const P=N[y];u.prototype[P]||(u.prototype[P]=i.prototype[P])}}function u(N){if(!(this instanceof u))return new u(N);j.call(this,N),i.call(this,N),N?(this.allowHalfOpen=N.allowHalfOpen!==!1,N.readable===!1&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),N.writable===!1&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)):this.allowHalfOpen=!0}let c,h;function C(){return c===void 0&&(c={}),c}$(u.prototype,{writable:{__proto__:null,...f(i.prototype,"writable")},writableHighWaterMark:{__proto__:null,...f(i.prototype,"writableHighWaterMark")},writableObjectMode:{__proto__:null,...f(i.prototype,"writableObjectMode")},writableBuffer:{__proto__:null,...f(i.prototype,"writableBuffer")},writableLength:{__proto__:null,...f(i.prototype,"writableLength")},writableFinished:{__proto__:null,...f(i.prototype,"writableFinished")},writableCorked:{__proto__:null,...f(i.prototype,"writableCorked")},writableEnded:{__proto__:null,...f(i.prototype,"writableEnded")},writableNeedDrain:{__proto__:null,...f(i.prototype,"writableNeedDrain")},destroyed:{__proto__:null,get(){return this._readableState!==void 0&&this._writableState!==void 0&&this._readableState.destroyed&&this._writableState.destroyed},set(N){this._readableState&&this._writableState&&(this._readableState.destroyed=N,this._writableState.destroyed=N)}}}),u.fromWeb=function(N,y){return C().newStreamDuplexFromReadableWritablePair(N,y)},u.toWeb=function(N){return C().newReadableWritablePairFromDuplex(N)},u.from=function(N){return h||(h=m(6706)),h(N,"body")}},6706:(W,T,m)=>{const $=m(5606),f=m(8287),{isReadable:S,isWritable:E,isIterable:j,isNodeStream:i,isReadableNodeStream:u,isWritableNodeStream:c,isDuplexNodeStream:h}=m(6115),C=m(6238),{AbortError:N,codes:{ERR_INVALID_ARG_TYPE:y,ERR_INVALID_RETURN_VALUE:P}}=m(6371),{destroyer:b}=m(5896),q=m(3370),O=m(7576),{createDeferredPromise:F}=m(7760),ne=m(6532),w=globalThis.Blob||f.Blob,x=w!==void 0?function(D){return D instanceof w}:function(D){return!1},Q=globalThis.AbortController||m(5568).AbortController,{FunctionPrototypeCall:B}=m(4134);class M extends q{constructor(L){super(L),(L==null?void 0:L.readable)===!1&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),(L==null?void 0:L.writable)===!1&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)}}function g(D){const L=D.readable&&typeof D.readable.read!="function"?O.wrap(D.readable):D.readable,de=D.writable;let pe,me,k,G,A,z=!!S(L),Y=!!E(de);function Z(te){const K=G;G=null,K?K(te):te&&A.destroy(te)}return A=new M({readableObjectMode:!(L==null||!L.readableObjectMode),writableObjectMode:!(de==null||!de.writableObjectMode),readable:z,writable:Y}),Y&&(C(de,te=>{Y=!1,te&&b(L,te),Z(te)}),A._write=function(te,K,ue){de.write(te,K)?ue():pe=ue},A._final=function(te){de.end(),me=te},de.on("drain",function(){if(pe){const te=pe;pe=null,te()}}),de.on("finish",function(){if(me){const te=me;me=null,te()}})),z&&(C(L,te=>{z=!1,te&&b(L,te),Z(te)}),L.on("readable",function(){if(k){const te=k;k=null,te()}}),L.on("end",function(){A.push(null)}),A._read=function(){for(;;){const te=L.read();if(te===null)return void(k=A._read);if(!A.push(te))return}}),A._destroy=function(te,K){te||G===null||(te=new N),k=null,pe=null,me=null,G===null?K(te):(G=K,b(de,te),b(L,te))},A}W.exports=function D(L,de){if(h(L))return L;if(u(L))return g({readable:L});if(c(L))return g({writable:L});if(i(L))return g({writable:!1,readable:!1});if(typeof L=="function"){const{value:me,write:k,final:G,destroy:A}=function(Y){let{promise:Z,resolve:te}=F();const K=new Q,ue=K.signal;return{value:Y(async function*(){for(;;){const Ne=Z;Z=null;const{chunk:ge,done:ce,cb:X}=await Ne;if($.nextTick(X),ce)return;if(ue.aborted)throw new N(void 0,{cause:ue.reason});({promise:Z,resolve:te}=F()),yield ge}}(),{signal:ue}),write(Ne,ge,ce){const X=te;te=null,X({chunk:Ne,done:!1,cb:ce})},final(Ne){const ge=te;te=null,ge({done:!0,cb:Ne})},destroy(Ne,ge){K.abort(),ge(Ne)}}}(L);if(j(me))return ne(M,me,{objectMode:!0,write:k,final:G,destroy:A});const z=me==null?void 0:me.then;if(typeof z=="function"){let Y;const Z=B(z,me,te=>{if(te!=null)throw new P("nully","body",te)},te=>{b(Y,te)});return Y=new M({objectMode:!0,readable:!1,write:k,final(te){G(async()=>{try{await Z,$.nextTick(te,null)}catch(K){$.nextTick(te,K)}})},destroy:A})}throw new P("Iterable, AsyncIterable or AsyncFunction",de,me)}if(x(L))return D(L.arrayBuffer());if(j(L))return ne(M,L,{objectMode:!0,writable:!1});if(typeof(L==null?void 0:L.writable)=="object"||typeof(L==null?void 0:L.readable)=="object")return g({readable:L!=null&&L.readable?u(L==null?void 0:L.readable)?L==null?void 0:L.readable:D(L.readable):void 0,writable:L!=null&&L.writable?c(L==null?void 0:L.writable)?L==null?void 0:L.writable:D(L.writable):void 0});const pe=L==null?void 0:L.then;if(typeof pe=="function"){let me;return B(pe,L,k=>{k!=null&&me.push(k),me.push(null)},k=>{b(me,k)}),me=new M({objectMode:!0,writable:!1,read(){}})}throw new y(de,["Blob","ReadableStream","WritableStream","Stream","Iterable","AsyncIterable","Function","{ readable, writable } pair","Promise"],L)}},6238:(W,T,m)=>{const $=m(5606),{AbortError:f,codes:S}=m(6371),{ERR_INVALID_ARG_TYPE:E,ERR_STREAM_PREMATURE_CLOSE:j}=S,{kEmptyObject:i,once:u}=m(7760),{validateAbortSignal:c,validateFunction:h,validateObject:C,validateBoolean:N}=m(277),{Promise:y,PromisePrototypeThen:P}=m(4134),{isClosed:b,isReadable:q,isReadableNodeStream:O,isReadableStream:F,isReadableFinished:ne,isReadableErrored:w,isWritable:x,isWritableNodeStream:Q,isWritableStream:B,isWritableFinished:M,isWritableErrored:g,isNodeStream:D,willEmitClose:L,kIsClosedPromise:de}=m(6115),pe=()=>{};function me(k,G,A){var z,Y;if(arguments.length===2?(A=G,G=i):G==null?G=i:C(G,"options"),h(A,"callback"),c(G.signal,"options.signal"),A=u(A),F(k)||B(k))return function(ye,l,p){let _=!1,ae=pe;if(l.signal)if(ae=()=>{_=!0,p.call(ye,new f(void 0,{cause:l.signal.reason}))},l.signal.aborted)$.nextTick(ae);else{const I=p;p=u((...ie)=>{l.signal.removeEventListener("abort",ae),I.apply(ye,ie)}),l.signal.addEventListener("abort",ae)}const v=(...I)=>{_||$.nextTick(()=>p.apply(ye,I))};return P(ye[de].promise,v,v),pe}(k,G,A);if(!D(k))throw new E("stream",["ReadableStream","WritableStream","Stream"],k);const Z=(z=G.readable)!==null&&z!==void 0?z:O(k),te=(Y=G.writable)!==null&&Y!==void 0?Y:Q(k),K=k._writableState,ue=k._readableState,Ne=()=>{k.writable||X()};let ge=L(k)&&O(k)===Z&&Q(k)===te,ce=M(k,!1);const X=()=>{ce=!0,k.destroyed&&(ge=!1),(!ge||k.readable&&!Z)&&(Z&&!V||A.call(k))};let V=ne(k,!1);const re=()=>{V=!0,k.destroyed&&(ge=!1),(!ge||k.writable&&!te)&&(te&&!ce||A.call(k))},se=ye=>{A.call(k,ye)};let ee=b(k);const J=()=>{ee=!0;const ye=g(k)||w(k);return ye&&typeof ye!="boolean"?A.call(k,ye):Z&&!V&&O(k,!0)&&!ne(k,!1)?A.call(k,new j):!te||ce||M(k,!1)?void A.call(k):A.call(k,new j)},le=()=>{ee=!0;const ye=g(k)||w(k);if(ye&&typeof ye!="boolean")return A.call(k,ye);A.call(k)},he=()=>{k.req.on("finish",X)};(function(ye){return ye.setHeader&&typeof ye.abort=="function"})(k)?(k.on("complete",X),ge||k.on("abort",J),k.req?he():k.on("request",he)):te&&!K&&(k.on("end",Ne),k.on("close",Ne)),ge||typeof k.aborted!="boolean"||k.on("aborted",J),k.on("end",re),k.on("finish",X),G.error!==!1&&k.on("error",se),k.on("close",J),ee?$.nextTick(J):K!=null&&K.errorEmitted||ue!=null&&ue.errorEmitted?ge||$.nextTick(le):(Z||ge&&!q(k)||!ce&&x(k)!==!1)&&(te||ge&&!x(k)||!V&&q(k)!==!1)?ue&&k.req&&k.aborted&&$.nextTick(le):$.nextTick(le);const fe=()=>{A=pe,k.removeListener("aborted",J),k.removeListener("complete",X),k.removeListener("abort",J),k.removeListener("request",he),k.req&&k.req.removeListener("finish",X),k.removeListener("end",Ne),k.removeListener("close",Ne),k.removeListener("finish",X),k.removeListener("end",re),k.removeListener("error",se),k.removeListener("close",J)};if(G.signal&&!ee){const ye=()=>{const l=A;fe(),l.call(k,new f(void 0,{cause:G.signal.reason}))};if(G.signal.aborted)$.nextTick(ye);else{const l=A;A=u((...p)=>{G.signal.removeEventListener("abort",ye),l.apply(k,p)}),G.signal.addEventListener("abort",ye)}}return fe}W.exports=me,W.exports.finished=function(k,G){var A;let z=!1;return G===null&&(G=i),(A=G)!==null&&A!==void 0&&A.cleanup&&(N(G.cleanup,"cleanup"),z=G.cleanup),new y((Y,Z)=>{const te=me(k,G,K=>{z&&te(),K?Z(K):Y()})})}},6532:(W,T,m)=>{const $=m(5606),{PromisePrototypeThen:f,SymbolAsyncIterator:S,SymbolIterator:E}=m(4134),{Buffer:j}=m(8287),{ERR_INVALID_ARG_TYPE:i,ERR_STREAM_NULL_VALUES:u}=m(6371).codes;W.exports=function(c,h,C){let N,y;if(typeof h=="string"||h instanceof j)return new c({objectMode:!0,...C,read(){this.push(h),this.push(null)}});if(h&&h[S])y=!0,N=h[S]();else{if(!h||!h[E])throw new i("iterable",["Iterable"],h);y=!1,N=h[E]()}const P=new c({objectMode:!0,highWaterMark:1,...C});let b=!1;return P._read=function(){b||(b=!0,async function(){for(;;){try{const{value:q,done:O}=y?await N.next():N.next();if(O)P.push(null);else{const F=q&&typeof q.then=="function"?await q:q;if(F===null)throw b=!1,new u;if(P.push(F))continue;b=!1}}catch(q){P.destroy(q)}break}}())},P._destroy=function(q,O){f(async function(F){const ne=F!=null,w=typeof N.throw=="function";if(ne&&w){const{value:x,done:Q}=await N.throw(F);if(await x,Q)return}if(typeof N.return=="function"){const{value:x}=await N.return();await x}}(q),()=>$.nextTick(O,q),F=>$.nextTick(O,F||q))},P}},4259:(W,T,m)=>{const{ArrayIsArray:$,ObjectSetPrototypeOf:f}=m(4134),{EventEmitter:S}=m(7007);function E(i){S.call(this,i)}function j(i,u,c){if(typeof i.prependListener=="function")return i.prependListener(u,c);i._events&&i._events[u]?$(i._events[u])?i._events[u].unshift(c):i._events[u]=[c,i._events[u]]:i.on(u,c)}f(E.prototype,S.prototype),f(E,S),E.prototype.pipe=function(i,u){const c=this;function h(O){i.writable&&i.write(O)===!1&&c.pause&&c.pause()}function C(){c.readable&&c.resume&&c.resume()}c.on("data",h),i.on("drain",C),i._isStdio||u&&u.end===!1||(c.on("end",y),c.on("close",P));let N=!1;function y(){N||(N=!0,i.end())}function P(){N||(N=!0,typeof i.destroy=="function"&&i.destroy())}function b(O){q(),S.listenerCount(this,"error")===0&&this.emit("error",O)}function q(){c.removeListener("data",h),i.removeListener("drain",C),c.removeListener("end",y),c.removeListener("close",P),c.removeListener("error",b),i.removeListener("error",b),c.removeListener("end",q),c.removeListener("close",q),i.removeListener("close",q)}return j(c,"error",b),j(i,"error",b),c.on("end",q),c.on("close",q),i.on("close",q),i.emit("pipe",c),i},W.exports={Stream:E,prependListener:j}},823:(W,T,m)=>{const $=globalThis.AbortController||m(5568).AbortController,{codes:{ERR_INVALID_ARG_VALUE:f,ERR_INVALID_ARG_TYPE:S,ERR_MISSING_ARGS:E,ERR_OUT_OF_RANGE:j},AbortError:i}=m(6371),{validateAbortSignal:u,validateInteger:c,validateObject:h}=m(277),C=m(4134).Symbol("kWeak"),{finished:N}=m(6238),y=m(7830),{addAbortSignalNoValidate:P}=m(4147),{isWritable:b,isNodeStream:q}=m(6115),{ArrayPrototypePush:O,MathFloor:F,Number:ne,NumberIsNaN:w,Promise:x,PromiseReject:Q,PromisePrototypeThen:B,Symbol:M}=m(4134),g=M("kEmpty"),D=M("kEof");function L(G,A){if(typeof G!="function")throw new S("fn",["Function","AsyncFunction"],G);A!=null&&h(A,"options"),(A==null?void 0:A.signal)!=null&&u(A.signal,"options.signal");let z=1;return(A==null?void 0:A.concurrency)!=null&&(z=F(A.concurrency)),c(z,"concurrency",1),(async function*(){var Y,Z;const te=new $,K=this,ue=[],Ne=te.signal,ge={signal:Ne},ce=()=>te.abort();let X,V;A!=null&&(Y=A.signal)!==null&&Y!==void 0&&Y.aborted&&ce(),A==null||(Z=A.signal)===null||Z===void 0||Z.addEventListener("abort",ce);let re=!1;function se(){re=!0}(async function(){try{for await(let le of K){var ee;if(re)return;if(Ne.aborted)throw new i;try{le=G(le,ge)}catch(he){le=Q(he)}le!==g&&(typeof((ee=le)===null||ee===void 0?void 0:ee.catch)=="function"&&le.catch(se),ue.push(le),X&&(X(),X=null),!re&&ue.length&&ue.length>=z&&await new x(he=>{V=he}))}ue.push(D)}catch(le){const he=Q(le);B(he,void 0,se),ue.push(he)}finally{var J;re=!0,X&&(X(),X=null),A==null||(J=A.signal)===null||J===void 0||J.removeEventListener("abort",ce)}})();try{for(;;){for(;ue.length>0;){const ee=await ue[0];if(ee===D)return;if(Ne.aborted)throw new i;ee!==g&&(yield ee),ue.shift(),V&&(V(),V=null)}await new x(ee=>{X=ee})}}finally{te.abort(),re=!0,V&&(V(),V=null)}}).call(this)}async function de(G,A=void 0){for await(const z of pe.call(this,G,A))return!0;return!1}function pe(G,A){if(typeof G!="function")throw new S("fn",["Function","AsyncFunction"],G);return L.call(this,async function(z,Y){return await G(z,Y)?z:g},A)}class me extends E{constructor(){super("reduce"),this.message="Reduce of an empty stream requires an initial value"}}function k(G){if(G=ne(G),w(G))return 0;if(G<0)throw new j("number",">= 0",G);return G}W.exports.streamReturningOperators={asIndexedPairs:function(G=void 0){return G!=null&&h(G,"options"),(G==null?void 0:G.signal)!=null&&u(G.signal,"options.signal"),(async function*(){let A=0;for await(const Y of this){var z;if(G!=null&&(z=G.signal)!==null&&z!==void 0&&z.aborted)throw new i({cause:G.signal.reason});yield[A++,Y]}}).call(this)},drop:function(G,A=void 0){return A!=null&&h(A,"options"),(A==null?void 0:A.signal)!=null&&u(A.signal,"options.signal"),G=k(G),(async function*(){var z;if(A!=null&&(z=A.signal)!==null&&z!==void 0&&z.aborted)throw new i;for await(const Z of this){var Y;if(A!=null&&(Y=A.signal)!==null&&Y!==void 0&&Y.aborted)throw new i;G--<=0&&(yield Z)}}).call(this)},filter:pe,flatMap:function(G,A){const z=L.call(this,G,A);return(async function*(){for await(const Y of z)yield*Y}).call(this)},map:L,take:function(G,A=void 0){return A!=null&&h(A,"options"),(A==null?void 0:A.signal)!=null&&u(A.signal,"options.signal"),G=k(G),(async function*(){var z;if(A!=null&&(z=A.signal)!==null&&z!==void 0&&z.aborted)throw new i;for await(const Z of this){var Y;if(A!=null&&(Y=A.signal)!==null&&Y!==void 0&&Y.aborted)throw new i;if(!(G-- >0))return;yield Z}}).call(this)},compose:function(G,A){if(A!=null&&h(A,"options"),(A==null?void 0:A.signal)!=null&&u(A.signal,"options.signal"),q(G)&&!b(G))throw new f("stream",G,"must be writable");const z=y(this,G);return A!=null&&A.signal&&P(A.signal,z),z}},W.exports.promiseReturningOperators={every:async function(G,A=void 0){if(typeof G!="function")throw new S("fn",["Function","AsyncFunction"],G);return!await de.call(this,async(...z)=>!await G(...z),A)},forEach:async function(G,A){if(typeof G!="function")throw new S("fn",["Function","AsyncFunction"],G);for await(const z of L.call(this,async function(Y,Z){return await G(Y,Z),g},A));},reduce:async function(G,A,z){var Y;if(typeof G!="function")throw new S("reducer",["Function","AsyncFunction"],G);z!=null&&h(z,"options"),(z==null?void 0:z.signal)!=null&&u(z.signal,"options.signal");let Z=arguments.length>1;if(z!=null&&(Y=z.signal)!==null&&Y!==void 0&&Y.aborted){const ge=new i(void 0,{cause:z.signal.reason});throw this.once("error",()=>{}),await N(this.destroy(ge)),ge}const te=new $,K=te.signal;if(z!=null&&z.signal){const ge={once:!0,[C]:this};z.signal.addEventListener("abort",()=>te.abort(),ge)}let ue=!1;try{for await(const ge of this){var Ne;if(ue=!0,z!=null&&(Ne=z.signal)!==null&&Ne!==void 0&&Ne.aborted)throw new i;Z?A=await G(A,ge,{signal:K}):(A=ge,Z=!0)}if(!ue&&!Z)throw new me}finally{te.abort()}return A},toArray:async function(G){G!=null&&h(G,"options"),(G==null?void 0:G.signal)!=null&&u(G.signal,"options.signal");const A=[];for await(const Y of this){var z;if(G!=null&&(z=G.signal)!==null&&z!==void 0&&z.aborted)throw new i(void 0,{cause:G.signal.reason});O(A,Y)}return A},some:de,find:async function(G,A){for await(const z of pe.call(this,G,A))return z}}},6524:(W,T,m)=>{const{ObjectSetPrototypeOf:$}=m(4134);W.exports=S;const f=m(5001);function S(E){if(!(this instanceof S))return new S(E);f.call(this,E)}$(S.prototype,f.prototype),$(S,f),S.prototype._transform=function(E,j,i){i(null,E)}},7758:(W,T,m)=>{const $=m(5606),{ArrayIsArray:f,Promise:S,SymbolAsyncIterator:E}=m(4134),j=m(6238),{once:i}=m(7760),u=m(5896),c=m(3370),{aggregateTwoErrors:h,codes:{ERR_INVALID_ARG_TYPE:C,ERR_INVALID_RETURN_VALUE:N,ERR_MISSING_ARGS:y,ERR_STREAM_DESTROYED:P,ERR_STREAM_PREMATURE_CLOSE:b},AbortError:q}=m(6371),{validateFunction:O,validateAbortSignal:F}=m(277),{isIterable:ne,isReadable:w,isReadableNodeStream:x,isNodeStream:Q,isTransformStream:B,isWebStream:M,isReadableStream:g,isReadableEnded:D}=m(6115),L=globalThis.AbortController||m(5568).AbortController;let de,pe;function me(Z,te,K){let ue=!1;return Z.on("close",()=>{ue=!0}),{destroy:Ne=>{ue||(ue=!0,u.destroyer(Z,Ne||new P("pipe")))},cleanup:j(Z,{readable:te,writable:K},Ne=>{ue=!Ne})}}function k(Z){if(ne(Z))return Z;if(x(Z))return async function*(te){pe||(pe=m(7576)),yield*pe.prototype[E].call(te)}(Z);throw new C("val",["Readable","Iterable","AsyncIterable"],Z)}async function G(Z,te,K,{end:ue}){let Ne,ge=null;const ce=re=>{if(re&&(Ne=re),ge){const se=ge;ge=null,se()}},X=()=>new S((re,se)=>{Ne?se(Ne):ge=()=>{Ne?se(Ne):re()}});te.on("drain",ce);const V=j(te,{readable:!1},ce);try{te.writableNeedDrain&&await X();for await(const re of Z)te.write(re)||await X();ue&&te.end(),await X(),K()}catch(re){K(Ne!==re?h(Ne,re):re)}finally{V(),te.off("drain",ce)}}async function A(Z,te,K,{end:ue}){B(te)&&(te=te.writable);const Ne=te.getWriter();try{for await(const ge of Z)await Ne.ready,Ne.write(ge).catch(()=>{});await Ne.ready,ue&&await Ne.close(),K()}catch(ge){try{await Ne.abort(ge),K(ge)}catch(ce){K(ce)}}}function z(Z,te,K){if(Z.length===1&&f(Z[0])&&(Z=Z[0]),Z.length<2)throw new y("streams");const ue=new L,Ne=ue.signal,ge=K==null?void 0:K.signal,ce=[];function X(){he(new q)}let V,re;F(ge,"options.signal"),ge==null||ge.addEventListener("abort",X);const se=[];let ee,J=0;function le(l){he(l,--J==0)}function he(l,p){if(!l||V&&V.code!=="ERR_STREAM_PREMATURE_CLOSE"||(V=l),V||p){for(;se.length;)se.shift()(V);ge==null||ge.removeEventListener("abort",X),ue.abort(),p&&(V||ce.forEach(_=>_()),$.nextTick(te,V,re))}}for(let l=0;l<Z.length;l++){const p=Z[l],_=l<Z.length-1,ae=l>0,v=_||(K==null?void 0:K.end)!==!1,I=l===Z.length-1;if(Q(p)){let ie=function($e){$e&&$e.name!=="AbortError"&&$e.code!=="ERR_STREAM_PREMATURE_CLOSE"&&le($e)};if(v){const{destroy:$e,cleanup:we}=me(p,_,ae);se.push($e),w(p)&&I&&ce.push(we)}p.on("error",ie),w(p)&&I&&ce.push(()=>{p.removeListener("error",ie)})}if(l===0)if(typeof p=="function"){if(ee=p({signal:Ne}),!ne(ee))throw new N("Iterable, AsyncIterable or Stream","source",ee)}else ee=ne(p)||x(p)||B(p)?p:c.from(p);else if(typeof p=="function"){var fe;if(ee=B(ee)?k((fe=ee)===null||fe===void 0?void 0:fe.readable):k(ee),ee=p(ee,{signal:Ne}),_){if(!ne(ee,!0))throw new N("AsyncIterable",`transform[${l-1}]`,ee)}else{var ye;de||(de=m(6524));const ie=new de({objectMode:!0}),$e=(ye=ee)===null||ye===void 0?void 0:ye.then;if(typeof $e=="function")J++,$e.call(ee,Ce=>{re=Ce,Ce!=null&&ie.write(Ce),v&&ie.end(),$.nextTick(le)},Ce=>{ie.destroy(Ce),$.nextTick(le,Ce)});else if(ne(ee,!0))J++,G(ee,ie,le,{end:v});else{if(!g(ee)&&!B(ee))throw new N("AsyncIterable or Promise","destination",ee);{const Ce=ee.readable||ee;J++,G(Ce,ie,le,{end:v})}}ee=ie;const{destroy:we,cleanup:_e}=me(ee,!1,!0);se.push(we),I&&ce.push(_e)}}else if(Q(p)){if(x(ee)){J+=2;const ie=Y(ee,p,le,{end:v});w(p)&&I&&ce.push(ie)}else if(B(ee)||g(ee)){const ie=ee.readable||ee;J++,G(ie,p,le,{end:v})}else{if(!ne(ee))throw new C("val",["Readable","Iterable","AsyncIterable","ReadableStream","TransformStream"],ee);J++,G(ee,p,le,{end:v})}ee=p}else if(M(p)){if(x(ee))J++,A(k(ee),p,le,{end:v});else if(g(ee)||ne(ee))J++,A(ee,p,le,{end:v});else{if(!B(ee))throw new C("val",["Readable","Iterable","AsyncIterable","ReadableStream","TransformStream"],ee);J++,A(ee.readable,p,le,{end:v})}ee=p}else ee=c.from(p)}return(Ne!=null&&Ne.aborted||ge!=null&&ge.aborted)&&$.nextTick(X),ee}function Y(Z,te,K,{end:ue}){let Ne=!1;if(te.on("close",()=>{Ne||K(new b)}),Z.pipe(te,{end:!1}),ue){let ge=function(){Ne=!0,te.end()};D(Z)?$.nextTick(ge):Z.once("end",ge)}else K();return j(Z,{readable:!0,writable:!1},ge=>{const ce=Z._readableState;ge&&ge.code==="ERR_STREAM_PREMATURE_CLOSE"&&ce&&ce.ended&&!ce.errored&&!ce.errorEmitted?Z.once("end",K).once("error",K):K(ge)}),j(te,{readable:!1,writable:!0},K)}W.exports={pipelineImpl:z,pipeline:function(...Z){return z(Z,i(function(te){return O(te[te.length-1],"streams[stream.length - 1]"),te.pop()}(Z)))}}},7576:(W,T,m)=>{const $=m(5606),{ArrayPrototypeIndexOf:f,NumberIsInteger:S,NumberIsNaN:E,NumberParseInt:j,ObjectDefineProperties:i,ObjectKeys:u,ObjectSetPrototypeOf:c,Promise:h,SafeSet:C,SymbolAsyncIterator:N,Symbol:y}=m(4134);W.exports=K,K.ReadableState=te;const{EventEmitter:P}=m(7007),{Stream:b,prependListener:q}=m(4259),{Buffer:O}=m(8287),{addAbortSignal:F}=m(4147),ne=m(6238);let w=m(7760).debuglog("stream",v=>{w=v});const x=m(345),Q=m(5896),{getHighWaterMark:B,getDefaultHighWaterMark:M}=m(5291),{aggregateTwoErrors:g,codes:{ERR_INVALID_ARG_TYPE:D,ERR_METHOD_NOT_IMPLEMENTED:L,ERR_OUT_OF_RANGE:de,ERR_STREAM_PUSH_AFTER_EOF:pe,ERR_STREAM_UNSHIFT_AFTER_END_EVENT:me}}=m(6371),{validateObject:k}=m(277),G=y("kPaused"),{StringDecoder:A}=m(3141),z=m(6532);c(K.prototype,b.prototype),c(K,b);const Y=()=>{},{errorOrDestroy:Z}=Q;function te(v,I,ie){typeof ie!="boolean"&&(ie=I instanceof m(3370)),this.objectMode=!(!v||!v.objectMode),ie&&(this.objectMode=this.objectMode||!(!v||!v.readableObjectMode)),this.highWaterMark=v?B(this,v,"readableHighWaterMark",ie):M(!1),this.buffer=new x,this.length=0,this.pipes=[],this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.constructed=!0,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this[G]=null,this.errorEmitted=!1,this.emitClose=!v||v.emitClose!==!1,this.autoDestroy=!v||v.autoDestroy!==!1,this.destroyed=!1,this.errored=null,this.closed=!1,this.closeEmitted=!1,this.defaultEncoding=v&&v.defaultEncoding||"utf8",this.awaitDrainWriters=null,this.multiAwaitDrain=!1,this.readingMore=!1,this.dataEmitted=!1,this.decoder=null,this.encoding=null,v&&v.encoding&&(this.decoder=new A(v.encoding),this.encoding=v.encoding)}function K(v){if(!(this instanceof K))return new K(v);const I=this instanceof m(3370);this._readableState=new te(v,this,I),v&&(typeof v.read=="function"&&(this._read=v.read),typeof v.destroy=="function"&&(this._destroy=v.destroy),typeof v.construct=="function"&&(this._construct=v.construct),v.signal&&!I&&F(v.signal,this)),b.call(this,v),Q.construct(this,()=>{this._readableState.needReadable&&V(this,this._readableState)})}function ue(v,I,ie,$e){w("readableAddChunk",I);const we=v._readableState;let _e;if(we.objectMode||(typeof I=="string"?(ie=ie||we.defaultEncoding,we.encoding!==ie&&($e&&we.encoding?I=O.from(I,ie).toString(we.encoding):(I=O.from(I,ie),ie=""))):I instanceof O?ie="":b._isUint8Array(I)?(I=b._uint8ArrayToBuffer(I),ie=""):I!=null&&(_e=new D("chunk",["string","Buffer","Uint8Array"],I))),_e)Z(v,_e);else if(I===null)we.reading=!1,function(Ce,Ie){if(w("onEofChunk"),!Ie.ended){if(Ie.decoder){const Ke=Ie.decoder.end();Ke&&Ke.length&&(Ie.buffer.push(Ke),Ie.length+=Ie.objectMode?1:Ke.length)}Ie.ended=!0,Ie.sync?ce(Ce):(Ie.needReadable=!1,Ie.emittedReadable=!0,X(Ce))}}(v,we);else if(we.objectMode||I&&I.length>0)if($e)if(we.endEmitted)Z(v,new me);else{if(we.destroyed||we.errored)return!1;Ne(v,we,I,!0)}else if(we.ended)Z(v,new pe);else{if(we.destroyed||we.errored)return!1;we.reading=!1,we.decoder&&!ie?(I=we.decoder.write(I),we.objectMode||I.length!==0?Ne(v,we,I,!1):V(v,we)):Ne(v,we,I,!1)}else $e||(we.reading=!1,V(v,we));return!we.ended&&(we.length<we.highWaterMark||we.length===0)}function Ne(v,I,ie,$e){I.flowing&&I.length===0&&!I.sync&&v.listenerCount("data")>0?(I.multiAwaitDrain?I.awaitDrainWriters.clear():I.awaitDrainWriters=null,I.dataEmitted=!0,v.emit("data",ie)):(I.length+=I.objectMode?1:ie.length,$e?I.buffer.unshift(ie):I.buffer.push(ie),I.needReadable&&ce(v)),V(v,I)}function ge(v,I){return v<=0||I.length===0&&I.ended?0:I.objectMode?1:E(v)?I.flowing&&I.length?I.buffer.first().length:I.length:v<=I.length?v:I.ended?I.length:0}function ce(v){const I=v._readableState;w("emitReadable",I.needReadable,I.emittedReadable),I.needReadable=!1,I.emittedReadable||(w("emitReadable",I.flowing),I.emittedReadable=!0,$.nextTick(X,v))}function X(v){const I=v._readableState;w("emitReadable_",I.destroyed,I.length,I.ended),I.destroyed||I.errored||!I.length&&!I.ended||(v.emit("readable"),I.emittedReadable=!1),I.needReadable=!I.flowing&&!I.ended&&I.length<=I.highWaterMark,le(v)}function V(v,I){!I.readingMore&&I.constructed&&(I.readingMore=!0,$.nextTick(re,v,I))}function re(v,I){for(;!I.reading&&!I.ended&&(I.length<I.highWaterMark||I.flowing&&I.length===0);){const ie=I.length;if(w("maybeReadMore read 0"),v.read(0),ie===I.length)break}I.readingMore=!1}function se(v){const I=v._readableState;I.readableListening=v.listenerCount("readable")>0,I.resumeScheduled&&I[G]===!1?I.flowing=!0:v.listenerCount("data")>0?v.resume():I.readableListening||(I.flowing=null)}function ee(v){w("readable nexttick read 0"),v.read(0)}function J(v,I){w("resume",I.reading),I.reading||v.read(0),I.resumeScheduled=!1,v.emit("resume"),le(v),I.flowing&&!I.reading&&v.read(0)}function le(v){const I=v._readableState;for(w("flow",I.flowing);I.flowing&&v.read()!==null;);}function he(v,I){typeof v.read!="function"&&(v=K.wrap(v,{objectMode:!0}));const ie=async function*($e,we){let _e,Ce=Y;function Ie(Fe){this===$e?(Ce(),Ce=Y):Ce=Fe}$e.on("readable",Ie);const Ke=ne($e,{writable:!1},Fe=>{_e=Fe?g(_e,Fe):null,Ce(),Ce=Y});try{for(;;){const Fe=$e.destroyed?null:$e.read();if(Fe!==null)yield Fe;else{if(_e)throw _e;if(_e===null)return;await new h(Ie)}}}catch(Fe){throw _e=g(_e,Fe),_e}finally{!_e&&(we==null?void 0:we.destroyOnReturn)===!1||_e!==void 0&&!$e._readableState.autoDestroy?($e.off("readable",Ie),Ke()):Q.destroyer($e,null)}}(v,I);return ie.stream=v,ie}function fe(v,I){if(I.length===0)return null;let ie;return I.objectMode?ie=I.buffer.shift():!v||v>=I.length?(ie=I.decoder?I.buffer.join(""):I.buffer.length===1?I.buffer.first():I.buffer.concat(I.length),I.buffer.clear()):ie=I.buffer.consume(v,I.decoder),ie}function ye(v){const I=v._readableState;w("endReadable",I.endEmitted),I.endEmitted||(I.ended=!0,$.nextTick(l,I,v))}function l(v,I){if(w("endReadableNT",v.endEmitted,v.length),!v.errored&&!v.closeEmitted&&!v.endEmitted&&v.length===0){if(v.endEmitted=!0,I.emit("end"),I.writable&&I.allowHalfOpen===!1)$.nextTick(p,I);else if(v.autoDestroy){const ie=I._writableState;(!ie||ie.autoDestroy&&(ie.finished||ie.writable===!1))&&I.destroy()}}}function p(v){v.writable&&!v.writableEnded&&!v.destroyed&&v.end()}let _;function ae(){return _===void 0&&(_={}),_}K.prototype.destroy=Q.destroy,K.prototype._undestroy=Q.undestroy,K.prototype._destroy=function(v,I){I(v)},K.prototype[P.captureRejectionSymbol]=function(v){this.destroy(v)},K.prototype.push=function(v,I){return ue(this,v,I,!1)},K.prototype.unshift=function(v,I){return ue(this,v,I,!0)},K.prototype.isPaused=function(){const v=this._readableState;return v[G]===!0||v.flowing===!1},K.prototype.setEncoding=function(v){const I=new A(v);this._readableState.decoder=I,this._readableState.encoding=this._readableState.decoder.encoding;const ie=this._readableState.buffer;let $e="";for(const we of ie)$e+=I.write(we);return ie.clear(),$e!==""&&ie.push($e),this._readableState.length=$e.length,this},K.prototype.read=function(v){w("read",v),v===void 0?v=NaN:S(v)||(v=j(v,10));const I=this._readableState,ie=v;if(v>I.highWaterMark&&(I.highWaterMark=function(_e){if(_e>1073741824)throw new de("size","<= 1GiB",_e);return _e--,_e|=_e>>>1,_e|=_e>>>2,_e|=_e>>>4,_e|=_e>>>8,_e|=_e>>>16,++_e}(v)),v!==0&&(I.emittedReadable=!1),v===0&&I.needReadable&&((I.highWaterMark!==0?I.length>=I.highWaterMark:I.length>0)||I.ended))return w("read: emitReadable",I.length,I.ended),I.length===0&&I.ended?ye(this):ce(this),null;if((v=ge(v,I))===0&&I.ended)return I.length===0&&ye(this),null;let $e,we=I.needReadable;if(w("need readable",we),(I.length===0||I.length-v<I.highWaterMark)&&(we=!0,w("length less than watermark",we)),I.ended||I.reading||I.destroyed||I.errored||!I.constructed)we=!1,w("reading, ended or constructing",we);else if(we){w("do read"),I.reading=!0,I.sync=!0,I.length===0&&(I.needReadable=!0);try{this._read(I.highWaterMark)}catch(_e){Z(this,_e)}I.sync=!1,I.reading||(v=ge(ie,I))}return $e=v>0?fe(v,I):null,$e===null?(I.needReadable=I.length<=I.highWaterMark,v=0):(I.length-=v,I.multiAwaitDrain?I.awaitDrainWriters.clear():I.awaitDrainWriters=null),I.length===0&&(I.ended||(I.needReadable=!0),ie!==v&&I.ended&&ye(this)),$e===null||I.errorEmitted||I.closeEmitted||(I.dataEmitted=!0,this.emit("data",$e)),$e},K.prototype._read=function(v){throw new L("_read()")},K.prototype.pipe=function(v,I){const ie=this,$e=this._readableState;$e.pipes.length===1&&($e.multiAwaitDrain||($e.multiAwaitDrain=!0,$e.awaitDrainWriters=new C($e.awaitDrainWriters?[$e.awaitDrainWriters]:[]))),$e.pipes.push(v),w("pipe count=%d opts=%j",$e.pipes.length,I);const we=I&&I.end===!1||v===$.stdout||v===$.stderr?Ye:_e;function _e(){w("onend"),v.end()}let Ce;$e.endEmitted?$.nextTick(we):ie.once("end",we),v.on("unpipe",function ke(Ve,Ge){w("onunpipe"),Ve===ie&&Ge&&Ge.hasUnpiped===!1&&(Ge.hasUnpiped=!0,w("cleanup"),v.removeListener("close",ot),v.removeListener("finish",ze),Ce&&v.removeListener("drain",Ce),v.removeListener("error",Ae),v.removeListener("unpipe",ke),ie.removeListener("end",_e),ie.removeListener("end",Ye),ie.removeListener("data",Fe),Ie=!0,Ce&&$e.awaitDrainWriters&&(!v._writableState||v._writableState.needDrain)&&Ce())});let Ie=!1;function Ke(){Ie||($e.pipes.length===1&&$e.pipes[0]===v?(w("false write response, pause",0),$e.awaitDrainWriters=v,$e.multiAwaitDrain=!1):$e.pipes.length>1&&$e.pipes.includes(v)&&(w("false write response, pause",$e.awaitDrainWriters.size),$e.awaitDrainWriters.add(v)),ie.pause()),Ce||(Ce=function(ke,Ve){return function(){const Ge=ke._readableState;Ge.awaitDrainWriters===Ve?(w("pipeOnDrain",1),Ge.awaitDrainWriters=null):Ge.multiAwaitDrain&&(w("pipeOnDrain",Ge.awaitDrainWriters.size),Ge.awaitDrainWriters.delete(Ve)),Ge.awaitDrainWriters&&Ge.awaitDrainWriters.size!==0||!ke.listenerCount("data")||ke.resume()}}(ie,v),v.on("drain",Ce))}function Fe(ke){w("ondata");const Ve=v.write(ke);w("dest.write",Ve),Ve===!1&&Ke()}function Ae(ke){if(w("onerror",ke),Ye(),v.removeListener("error",Ae),v.listenerCount("error")===0){const Ve=v._writableState||v._readableState;Ve&&!Ve.errorEmitted?Z(v,ke):v.emit("error",ke)}}function ot(){v.removeListener("finish",ze),Ye()}function ze(){w("onfinish"),v.removeListener("close",ot),Ye()}function Ye(){w("unpipe"),ie.unpipe(v)}return ie.on("data",Fe),q(v,"error",Ae),v.once("close",ot),v.once("finish",ze),v.emit("pipe",ie),v.writableNeedDrain===!0?$e.flowing&&Ke():$e.flowing||(w("pipe resume"),ie.resume()),v},K.prototype.unpipe=function(v){const I=this._readableState;if(I.pipes.length===0)return this;if(!v){const $e=I.pipes;I.pipes=[],this.pause();for(let we=0;we<$e.length;we++)$e[we].emit("unpipe",this,{hasUnpiped:!1});return this}const ie=f(I.pipes,v);return ie===-1||(I.pipes.splice(ie,1),I.pipes.length===0&&this.pause(),v.emit("unpipe",this,{hasUnpiped:!1})),this},K.prototype.on=function(v,I){const ie=b.prototype.on.call(this,v,I),$e=this._readableState;return v==="data"?($e.readableListening=this.listenerCount("readable")>0,$e.flowing!==!1&&this.resume()):v==="readable"&&($e.endEmitted||$e.readableListening||($e.readableListening=$e.needReadable=!0,$e.flowing=!1,$e.emittedReadable=!1,w("on readable",$e.length,$e.reading),$e.length?ce(this):$e.reading||$.nextTick(ee,this))),ie},K.prototype.addListener=K.prototype.on,K.prototype.removeListener=function(v,I){const ie=b.prototype.removeListener.call(this,v,I);return v==="readable"&&$.nextTick(se,this),ie},K.prototype.off=K.prototype.removeListener,K.prototype.removeAllListeners=function(v){const I=b.prototype.removeAllListeners.apply(this,arguments);return v!=="readable"&&v!==void 0||$.nextTick(se,this),I},K.prototype.resume=function(){const v=this._readableState;return v.flowing||(w("resume"),v.flowing=!v.readableListening,function(I,ie){ie.resumeScheduled||(ie.resumeScheduled=!0,$.nextTick(J,I,ie))}(this,v)),v[G]=!1,this},K.prototype.pause=function(){return w("call pause flowing=%j",this._readableState.flowing),this._readableState.flowing!==!1&&(w("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState[G]=!0,this},K.prototype.wrap=function(v){let I=!1;v.on("data",$e=>{!this.push($e)&&v.pause&&(I=!0,v.pause())}),v.on("end",()=>{this.push(null)}),v.on("error",$e=>{Z(this,$e)}),v.on("close",()=>{this.destroy()}),v.on("destroy",()=>{this.destroy()}),this._read=()=>{I&&v.resume&&(I=!1,v.resume())};const ie=u(v);for(let $e=1;$e<ie.length;$e++){const we=ie[$e];this[we]===void 0&&typeof v[we]=="function"&&(this[we]=v[we].bind(v))}return this},K.prototype[N]=function(){return he(this)},K.prototype.iterator=function(v){return v!==void 0&&k(v,"options"),he(this,v)},i(K.prototype,{readable:{__proto__:null,get(){const v=this._readableState;return!(!v||v.readable===!1||v.destroyed||v.errorEmitted||v.endEmitted)},set(v){this._readableState&&(this._readableState.readable=!!v)}},readableDidRead:{__proto__:null,enumerable:!1,get:function(){return this._readableState.dataEmitted}},readableAborted:{__proto__:null,enumerable:!1,get:function(){return!(this._readableState.readable===!1||!this._readableState.destroyed&&!this._readableState.errored||this._readableState.endEmitted)}},readableHighWaterMark:{__proto__:null,enumerable:!1,get:function(){return this._readableState.highWaterMark}},readableBuffer:{__proto__:null,enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}},readableFlowing:{__proto__:null,enumerable:!1,get:function(){return this._readableState.flowing},set:function(v){this._readableState&&(this._readableState.flowing=v)}},readableLength:{__proto__:null,enumerable:!1,get(){return this._readableState.length}},readableObjectMode:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.objectMode}},readableEncoding:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.encoding:null}},errored:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.errored:null}},closed:{__proto__:null,get(){return!!this._readableState&&this._readableState.closed}},destroyed:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.destroyed},set(v){this._readableState&&(this._readableState.destroyed=v)}},readableEnded:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.endEmitted}}}),i(te.prototype,{pipesCount:{__proto__:null,get(){return this.pipes.length}},paused:{__proto__:null,get(){return this[G]!==!1},set(v){this[G]=!!v}}}),K._fromList=fe,K.from=function(v,I){return z(K,v,I)},K.fromWeb=function(v,I){return ae().newStreamReadableFromReadableStream(v,I)},K.toWeb=function(v,I){return ae().newReadableStreamFromStreamReadable(v,I)},K.wrap=function(v,I){var ie,$e;return new K({objectMode:(ie=($e=v.readableObjectMode)!==null&&$e!==void 0?$e:v.objectMode)===null||ie===void 0||ie,...I,destroy(we,_e){Q.destroyer(v,we),_e(we)}}).wrap(v)}},5291:(W,T,m)=>{const{MathFloor:$,NumberIsInteger:f}=m(4134),{ERR_INVALID_ARG_VALUE:S}=m(6371).codes;function E(j){return j?16:16384}W.exports={getHighWaterMark:function(j,i,u,c){const h=function(C,N,y){return C.highWaterMark!=null?C.highWaterMark:N?C[y]:null}(i,c,u);if(h!=null){if(!f(h)||h<0)throw new S(c?`options.${u}`:"options.highWaterMark",h);return $(h)}return E(j.objectMode)},getDefaultHighWaterMark:E}},5001:(W,T,m)=>{const{ObjectSetPrototypeOf:$,Symbol:f}=m(4134);W.exports=u;const{ERR_METHOD_NOT_IMPLEMENTED:S}=m(6371).codes,E=m(3370),{getHighWaterMark:j}=m(5291);$(u.prototype,E.prototype),$(u,E);const i=f("kCallback");function u(C){if(!(this instanceof u))return new u(C);const N=C?j(this,C,"readableHighWaterMark",!0):null;N===0&&(C={...C,highWaterMark:null,readableHighWaterMark:N,writableHighWaterMark:C.writableHighWaterMark||0}),E.call(this,C),this._readableState.sync=!1,this[i]=null,C&&(typeof C.transform=="function"&&(this._transform=C.transform),typeof C.flush=="function"&&(this._flush=C.flush)),this.on("prefinish",h)}function c(C){typeof this._flush!="function"||this.destroyed?(this.push(null),C&&C()):this._flush((N,y)=>{N?C?C(N):this.destroy(N):(y!=null&&this.push(y),this.push(null),C&&C())})}function h(){this._final!==c&&c.call(this)}u.prototype._final=c,u.prototype._transform=function(C,N,y){throw new S("_transform()")},u.prototype._write=function(C,N,y){const P=this._readableState,b=this._writableState,q=P.length;this._transform(C,N,(O,F)=>{O?y(O):(F!=null&&this.push(F),b.ended||q===P.length||P.length<P.highWaterMark?y():this[i]=y)})},u.prototype._read=function(){if(this[i]){const C=this[i];this[i]=null,C()}}},6115:(W,T,m)=>{const{Symbol:$,SymbolAsyncIterator:f,SymbolIterator:S,SymbolFor:E}=m(4134),j=$("kDestroyed"),i=$("kIsErrored"),u=$("kIsReadable"),c=$("kIsDisturbed"),h=E("nodejs.webstream.isClosedPromise"),C=E("nodejs.webstream.controllerErrorFunction");function N(g,D=!1){var L;return!(!g||typeof g.pipe!="function"||typeof g.on!="function"||D&&(typeof g.pause!="function"||typeof g.resume!="function")||g._writableState&&((L=g._readableState)===null||L===void 0?void 0:L.readable)===!1||g._writableState&&!g._readableState)}function y(g){var D;return!(!g||typeof g.write!="function"||typeof g.on!="function"||g._readableState&&((D=g._writableState)===null||D===void 0?void 0:D.writable)===!1)}function P(g){return g&&(g._readableState||g._writableState||typeof g.write=="function"&&typeof g.on=="function"||typeof g.pipe=="function"&&typeof g.on=="function")}function b(g){return!(!g||P(g)||typeof g.pipeThrough!="function"||typeof g.getReader!="function"||typeof g.cancel!="function")}function q(g){return!(!g||P(g)||typeof g.getWriter!="function"||typeof g.abort!="function")}function O(g){return!(!g||P(g)||typeof g.readable!="object"||typeof g.writable!="object")}function F(g){if(!P(g))return null;const D=g._writableState,L=g._readableState,de=D||L;return!!(g.destroyed||g[j]||de!=null&&de.destroyed)}function ne(g){if(!y(g))return null;if(g.writableEnded===!0)return!0;const D=g._writableState;return(D==null||!D.errored)&&(typeof(D==null?void 0:D.ended)!="boolean"?null:D.ended)}function w(g,D){if(!N(g))return null;const L=g._readableState;return(L==null||!L.errored)&&(typeof(L==null?void 0:L.endEmitted)!="boolean"?null:!!(L.endEmitted||D===!1&&L.ended===!0&&L.length===0))}function x(g){return g&&g[u]!=null?g[u]:typeof(g==null?void 0:g.readable)!="boolean"?null:!F(g)&&N(g)&&g.readable&&!w(g)}function Q(g){return typeof(g==null?void 0:g.writable)!="boolean"?null:!F(g)&&y(g)&&g.writable&&!ne(g)}function B(g){return typeof g._closed=="boolean"&&typeof g._defaultKeepAlive=="boolean"&&typeof g._removedConnection=="boolean"&&typeof g._removedContLen=="boolean"}function M(g){return typeof g._sent100=="boolean"&&B(g)}W.exports={kDestroyed:j,isDisturbed:function(g){var D;return!(!g||!((D=g[c])!==null&&D!==void 0?D:g.readableDidRead||g.readableAborted))},kIsDisturbed:c,isErrored:function(g){var D,L,de,pe,me,k,G,A,z,Y;return!(!g||!((D=(L=(de=(pe=(me=(k=g[i])!==null&&k!==void 0?k:g.readableErrored)!==null&&me!==void 0?me:g.writableErrored)!==null&&pe!==void 0?pe:(G=g._readableState)===null||G===void 0?void 0:G.errorEmitted)!==null&&de!==void 0?de:(A=g._writableState)===null||A===void 0?void 0:A.errorEmitted)!==null&&L!==void 0?L:(z=g._readableState)===null||z===void 0?void 0:z.errored)!==null&&D!==void 0?D:!((Y=g._writableState)===null||Y===void 0)&&Y.errored))},kIsErrored:i,isReadable:x,kIsReadable:u,kIsClosedPromise:h,kControllerErrorFunction:C,isClosed:function(g){if(!P(g))return null;if(typeof g.closed=="boolean")return g.closed;const D=g._writableState,L=g._readableState;return typeof(D==null?void 0:D.closed)=="boolean"||typeof(L==null?void 0:L.closed)=="boolean"?(D==null?void 0:D.closed)||(L==null?void 0:L.closed):typeof g._closed=="boolean"&&B(g)?g._closed:null},isDestroyed:F,isDuplexNodeStream:function(g){return!(!g||typeof g.pipe!="function"||!g._readableState||typeof g.on!="function"||typeof g.write!="function")},isFinished:function(g,D){return P(g)?!(!F(g)&&((D==null?void 0:D.readable)!==!1&&x(g)||(D==null?void 0:D.writable)!==!1&&Q(g))):null},isIterable:function(g,D){return g!=null&&(D===!0?typeof g[f]=="function":D===!1?typeof g[S]=="function":typeof g[f]=="function"||typeof g[S]=="function")},isReadableNodeStream:N,isReadableStream:b,isReadableEnded:function(g){if(!N(g))return null;if(g.readableEnded===!0)return!0;const D=g._readableState;return!(!D||D.errored)&&(typeof(D==null?void 0:D.ended)!="boolean"?null:D.ended)},isReadableFinished:w,isReadableErrored:function(g){var D,L;return P(g)?g.readableErrored?g.readableErrored:(D=(L=g._readableState)===null||L===void 0?void 0:L.errored)!==null&&D!==void 0?D:null:null},isNodeStream:P,isWebStream:function(g){return b(g)||q(g)||O(g)},isWritable:Q,isWritableNodeStream:y,isWritableStream:q,isWritableEnded:ne,isWritableFinished:function(g,D){if(!y(g))return null;if(g.writableFinished===!0)return!0;const L=g._writableState;return(L==null||!L.errored)&&(typeof(L==null?void 0:L.finished)!="boolean"?null:!!(L.finished||D===!1&&L.ended===!0&&L.length===0))},isWritableErrored:function(g){var D,L;return P(g)?g.writableErrored?g.writableErrored:(D=(L=g._writableState)===null||L===void 0?void 0:L.errored)!==null&&D!==void 0?D:null:null},isServerRequest:function(g){var D;return typeof g._consuming=="boolean"&&typeof g._dumped=="boolean"&&((D=g.req)===null||D===void 0?void 0:D.upgradeOrConnect)===void 0},isServerResponse:M,willEmitClose:function(g){if(!P(g))return null;const D=g._writableState,L=g._readableState,de=D||L;return!de&&M(g)||!!(de&&de.autoDestroy&&de.emitClose&&de.closed===!1)},isTransformStream:O}},8584:(W,T,m)=>{const $=m(5606),{ArrayPrototypeSlice:f,Error:S,FunctionPrototypeSymbolHasInstance:E,ObjectDefineProperty:j,ObjectDefineProperties:i,ObjectSetPrototypeOf:u,StringPrototypeToLowerCase:c,Symbol:h,SymbolHasInstance:C}=m(4134);W.exports=A,A.WritableState=k;const{EventEmitter:N}=m(7007),y=m(4259).Stream,{Buffer:P}=m(8287),b=m(5896),{addAbortSignal:q}=m(4147),{getHighWaterMark:O,getDefaultHighWaterMark:F}=m(5291),{ERR_INVALID_ARG_TYPE:ne,ERR_METHOD_NOT_IMPLEMENTED:w,ERR_MULTIPLE_CALLBACK:x,ERR_STREAM_CANNOT_PIPE:Q,ERR_STREAM_DESTROYED:B,ERR_STREAM_ALREADY_FINISHED:M,ERR_STREAM_NULL_VALUES:g,ERR_STREAM_WRITE_AFTER_END:D,ERR_UNKNOWN_ENCODING:L}=m(6371).codes,{errorOrDestroy:de}=b;function pe(){}u(A.prototype,y.prototype),u(A,y);const me=h("kOnFinished");function k(J,le,he){typeof he!="boolean"&&(he=le instanceof m(3370)),this.objectMode=!(!J||!J.objectMode),he&&(this.objectMode=this.objectMode||!(!J||!J.writableObjectMode)),this.highWaterMark=J?O(this,J,"writableHighWaterMark",he):F(!1),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;const fe=!(!J||J.decodeStrings!==!1);this.decodeStrings=!fe,this.defaultEncoding=J&&J.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=te.bind(void 0,le),this.writecb=null,this.writelen=0,this.afterWriteTickInfo=null,G(this),this.pendingcb=0,this.constructed=!0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!J||J.emitClose!==!1,this.autoDestroy=!J||J.autoDestroy!==!1,this.errored=null,this.closed=!1,this.closeEmitted=!1,this[me]=[]}function G(J){J.buffered=[],J.bufferedIndex=0,J.allBuffers=!0,J.allNoop=!0}function A(J){const le=this instanceof m(3370);if(!le&&!E(A,this))return new A(J);this._writableState=new k(J,this,le),J&&(typeof J.write=="function"&&(this._write=J.write),typeof J.writev=="function"&&(this._writev=J.writev),typeof J.destroy=="function"&&(this._destroy=J.destroy),typeof J.final=="function"&&(this._final=J.final),typeof J.construct=="function"&&(this._construct=J.construct),J.signal&&q(J.signal,this)),y.call(this,J),b.construct(this,()=>{const he=this._writableState;he.writing||ge(this,he),X(this,he)})}function z(J,le,he,fe){const ye=J._writableState;if(typeof he=="function")fe=he,he=ye.defaultEncoding;else{if(he){if(he!=="buffer"&&!P.isEncoding(he))throw new L(he)}else he=ye.defaultEncoding;typeof fe!="function"&&(fe=pe)}if(le===null)throw new g;if(!ye.objectMode)if(typeof le=="string")ye.decodeStrings!==!1&&(le=P.from(le,he),he="buffer");else if(le instanceof P)he="buffer";else{if(!y._isUint8Array(le))throw new ne("chunk",["string","Buffer","Uint8Array"],le);le=y._uint8ArrayToBuffer(le),he="buffer"}let l;return ye.ending?l=new D:ye.destroyed&&(l=new B("write")),l?($.nextTick(fe,l),de(J,l,!0),l):(ye.pendingcb++,function(p,_,ae,v,I){const ie=_.objectMode?1:ae.length;_.length+=ie;const $e=_.length<_.highWaterMark;return $e||(_.needDrain=!0),_.writing||_.corked||_.errored||!_.constructed?(_.buffered.push({chunk:ae,encoding:v,callback:I}),_.allBuffers&&v!=="buffer"&&(_.allBuffers=!1),_.allNoop&&I!==pe&&(_.allNoop=!1)):(_.writelen=ie,_.writecb=I,_.writing=!0,_.sync=!0,p._write(ae,v,_.onwrite),_.sync=!1),$e&&!_.errored&&!_.destroyed}(J,ye,le,he,fe))}function Y(J,le,he,fe,ye,l,p){le.writelen=fe,le.writecb=p,le.writing=!0,le.sync=!0,le.destroyed?le.onwrite(new B("write")):he?J._writev(ye,le.onwrite):J._write(ye,l,le.onwrite),le.sync=!1}function Z(J,le,he,fe){--le.pendingcb,fe(he),Ne(le),de(J,he)}function te(J,le){const he=J._writableState,fe=he.sync,ye=he.writecb;typeof ye=="function"?(he.writing=!1,he.writecb=null,he.length-=he.writelen,he.writelen=0,le?(le.stack,he.errored||(he.errored=le),J._readableState&&!J._readableState.errored&&(J._readableState.errored=le),fe?$.nextTick(Z,J,he,le,ye):Z(J,he,le,ye)):(he.buffered.length>he.bufferedIndex&&ge(J,he),fe?he.afterWriteTickInfo!==null&&he.afterWriteTickInfo.cb===ye?he.afterWriteTickInfo.count++:(he.afterWriteTickInfo={count:1,cb:ye,stream:J,state:he},$.nextTick(K,he.afterWriteTickInfo)):ue(J,he,1,ye))):de(J,new x)}function K({stream:J,state:le,count:he,cb:fe}){return le.afterWriteTickInfo=null,ue(J,le,he,fe)}function ue(J,le,he,fe){for(!le.ending&&!J.destroyed&&le.length===0&&le.needDrain&&(le.needDrain=!1,J.emit("drain"));he-- >0;)le.pendingcb--,fe();le.destroyed&&Ne(le),X(J,le)}function Ne(J){if(J.writing)return;for(let ye=J.bufferedIndex;ye<J.buffered.length;++ye){var le;const{chunk:l,callback:p}=J.buffered[ye],_=J.objectMode?1:l.length;J.length-=_,p((le=J.errored)!==null&&le!==void 0?le:new B("write"))}const he=J[me].splice(0);for(let ye=0;ye<he.length;ye++){var fe;he[ye]((fe=J.errored)!==null&&fe!==void 0?fe:new B("end"))}G(J)}function ge(J,le){if(le.corked||le.bufferProcessing||le.destroyed||!le.constructed)return;const{buffered:he,bufferedIndex:fe,objectMode:ye}=le,l=he.length-fe;if(!l)return;let p=fe;if(le.bufferProcessing=!0,l>1&&J._writev){le.pendingcb-=l-1;const _=le.allNoop?pe:v=>{for(let I=p;I<he.length;++I)he[I].callback(v)},ae=le.allNoop&&p===0?he:f(he,p);ae.allBuffers=le.allBuffers,Y(J,le,!0,le.length,ae,"",_),G(le)}else{do{const{chunk:_,encoding:ae,callback:v}=he[p];he[p++]=null,Y(J,le,!1,ye?1:_.length,_,ae,v)}while(p<he.length&&!le.writing);p===he.length?G(le):p>256?(he.splice(0,p),le.bufferedIndex=0):le.bufferedIndex=p}le.bufferProcessing=!1}function ce(J){return J.ending&&!J.destroyed&&J.constructed&&J.length===0&&!J.errored&&J.buffered.length===0&&!J.finished&&!J.writing&&!J.errorEmitted&&!J.closeEmitted}function X(J,le,he){ce(le)&&(function(fe,ye){ye.prefinished||ye.finalCalled||(typeof fe._final!="function"||ye.destroyed?(ye.prefinished=!0,fe.emit("prefinish")):(ye.finalCalled=!0,function(l,p){let _=!1;function ae(v){if(_)de(l,v??x());else if(_=!0,p.pendingcb--,v){const I=p[me].splice(0);for(let ie=0;ie<I.length;ie++)I[ie](v);de(l,v,p.sync)}else ce(p)&&(p.prefinished=!0,l.emit("prefinish"),p.pendingcb++,$.nextTick(V,l,p))}p.sync=!0,p.pendingcb++;try{l._final(ae)}catch(v){ae(v)}p.sync=!1}(fe,ye)))}(J,le),le.pendingcb===0&&(he?(le.pendingcb++,$.nextTick((fe,ye)=>{ce(ye)?V(fe,ye):ye.pendingcb--},J,le)):ce(le)&&(le.pendingcb++,V(J,le))))}function V(J,le){le.pendingcb--,le.finished=!0;const he=le[me].splice(0);for(let fe=0;fe<he.length;fe++)he[fe]();if(J.emit("finish"),le.autoDestroy){const fe=J._readableState;(!fe||fe.autoDestroy&&(fe.endEmitted||fe.readable===!1))&&J.destroy()}}k.prototype.getBuffer=function(){return f(this.buffered,this.bufferedIndex)},j(k.prototype,"bufferedRequestCount",{__proto__:null,get(){return this.buffered.length-this.bufferedIndex}}),j(A,C,{__proto__:null,value:function(J){return!!E(this,J)||this===A&&J&&J._writableState instanceof k}}),A.prototype.pipe=function(){de(this,new Q)},A.prototype.write=function(J,le,he){return z(this,J,le,he)===!0},A.prototype.cork=function(){this._writableState.corked++},A.prototype.uncork=function(){const J=this._writableState;J.corked&&(J.corked--,J.writing||ge(this,J))},A.prototype.setDefaultEncoding=function(J){if(typeof J=="string"&&(J=c(J)),!P.isEncoding(J))throw new L(J);return this._writableState.defaultEncoding=J,this},A.prototype._write=function(J,le,he){if(!this._writev)throw new w("_write()");this._writev([{chunk:J,encoding:le}],he)},A.prototype._writev=null,A.prototype.end=function(J,le,he){const fe=this._writableState;let ye;if(typeof J=="function"?(he=J,J=null,le=null):typeof le=="function"&&(he=le,le=null),J!=null){const l=z(this,J,le);l instanceof S&&(ye=l)}return fe.corked&&(fe.corked=1,this.uncork()),ye||(fe.errored||fe.ending?fe.finished?ye=new M("end"):fe.destroyed&&(ye=new B("end")):(fe.ending=!0,X(this,fe,!0),fe.ended=!0)),typeof he=="function"&&(ye||fe.finished?$.nextTick(he,ye):fe[me].push(he)),this},i(A.prototype,{closed:{__proto__:null,get(){return!!this._writableState&&this._writableState.closed}},destroyed:{__proto__:null,get(){return!!this._writableState&&this._writableState.destroyed},set(J){this._writableState&&(this._writableState.destroyed=J)}},writable:{__proto__:null,get(){const J=this._writableState;return!(!J||J.writable===!1||J.destroyed||J.errored||J.ending||J.ended)},set(J){this._writableState&&(this._writableState.writable=!!J)}},writableFinished:{__proto__:null,get(){return!!this._writableState&&this._writableState.finished}},writableObjectMode:{__proto__:null,get(){return!!this._writableState&&this._writableState.objectMode}},writableBuffer:{__proto__:null,get(){return this._writableState&&this._writableState.getBuffer()}},writableEnded:{__proto__:null,get(){return!!this._writableState&&this._writableState.ending}},writableNeedDrain:{__proto__:null,get(){const J=this._writableState;return!!J&&!J.destroyed&&!J.ending&&J.needDrain}},writableHighWaterMark:{__proto__:null,get(){return this._writableState&&this._writableState.highWaterMark}},writableCorked:{__proto__:null,get(){return this._writableState?this._writableState.corked:0}},writableLength:{__proto__:null,get(){return this._writableState&&this._writableState.length}},errored:{__proto__:null,enumerable:!1,get(){return this._writableState?this._writableState.errored:null}},writableAborted:{__proto__:null,enumerable:!1,get:function(){return!(this._writableState.writable===!1||!this._writableState.destroyed&&!this._writableState.errored||this._writableState.finished)}}});const re=b.destroy;let se;function ee(){return se===void 0&&(se={}),se}A.prototype.destroy=function(J,le){const he=this._writableState;return!he.destroyed&&(he.bufferedIndex<he.buffered.length||he[me].length)&&$.nextTick(Ne,he),re.call(this,J,le),this},A.prototype._undestroy=b.undestroy,A.prototype._destroy=function(J,le){le(J)},A.prototype[N.captureRejectionSymbol]=function(J){this.destroy(J)},A.fromWeb=function(J,le){return ee().newStreamWritableFromWritableStream(J,le)},A.toWeb=function(J){return ee().newWritableStreamFromStreamWritable(J)}},277:(W,T,m)=>{const{ArrayIsArray:$,ArrayPrototypeIncludes:f,ArrayPrototypeJoin:S,ArrayPrototypeMap:E,NumberIsInteger:j,NumberIsNaN:i,NumberMAX_SAFE_INTEGER:u,NumberMIN_SAFE_INTEGER:c,NumberParseInt:h,ObjectPrototypeHasOwnProperty:C,RegExpPrototypeExec:N,String:y,StringPrototypeToUpperCase:P,StringPrototypeTrim:b}=m(4134),{hideStackFrames:q,codes:{ERR_SOCKET_BAD_PORT:O,ERR_INVALID_ARG_TYPE:F,ERR_INVALID_ARG_VALUE:ne,ERR_OUT_OF_RANGE:w,ERR_UNKNOWN_SIGNAL:x}}=m(6371),{normalizeEncoding:Q}=m(7760),{isAsyncFunction:B,isArrayBufferView:M}=m(7760).types,g={},D=/^[0-7]+$/,L=q((V,re,se=c,ee=u)=>{if(typeof V!="number")throw new F(re,"number",V);if(!j(V))throw new w(re,"an integer",V);if(V<se||V>ee)throw new w(re,`>= ${se} && <= ${ee}`,V)}),de=q((V,re,se=-2147483648,ee=2147483647)=>{if(typeof V!="number")throw new F(re,"number",V);if(!j(V))throw new w(re,"an integer",V);if(V<se||V>ee)throw new w(re,`>= ${se} && <= ${ee}`,V)}),pe=q((V,re,se=!1)=>{if(typeof V!="number")throw new F(re,"number",V);if(!j(V))throw new w(re,"an integer",V);const ee=se?1:0,J=4294967295;if(V<ee||V>J)throw new w(re,`>= ${ee} && <= ${J}`,V)});function me(V,re){if(typeof V!="string")throw new F(re,"string",V)}const k=q((V,re,se)=>{if(!f(se,V)){const ee=S(E(se,J=>typeof J=="string"?`'${J}'`:y(J)),", ");throw new ne(re,V,"must be one of: "+ee)}});function G(V,re){if(typeof V!="boolean")throw new F(re,"boolean",V)}function A(V,re,se){return V!=null&&C(V,re)?V[re]:se}const z=q((V,re,se=null)=>{const ee=A(se,"allowArray",!1),J=A(se,"allowFunction",!1);if(!A(se,"nullable",!1)&&V===null||!ee&&$(V)||typeof V!="object"&&(!J||typeof V!="function"))throw new F(re,"Object",V)}),Y=q((V,re)=>{if(V!=null&&typeof V!="object"&&typeof V!="function")throw new F(re,"a dictionary",V)}),Z=q((V,re,se=0)=>{if(!$(V))throw new F(re,"Array",V);if(V.length<se)throw new ne(re,V,`must be longer than ${se}`)}),te=q((V,re="buffer")=>{if(!M(V))throw new F(re,["Buffer","TypedArray","DataView"],V)}),K=q((V,re)=>{if(V!==void 0&&(V===null||typeof V!="object"||!("aborted"in V)))throw new F(re,"AbortSignal",V)}),ue=q((V,re)=>{if(typeof V!="function")throw new F(re,"Function",V)}),Ne=q((V,re)=>{if(typeof V!="function"||B(V))throw new F(re,"Function",V)}),ge=q((V,re)=>{if(V!==void 0)throw new F(re,"undefined",V)}),ce=/^(?:<[^>]*>)(?:\s*;\s*[^;"\s]+(?:=(")?[^;"\s]*\1)?)*$/;function X(V,re){if(V===void 0||!N(ce,V))throw new ne(re,V,'must be an array or string of format "</styles.css>; rel=preload; as=style"')}W.exports={isInt32:function(V){return V===(0|V)},isUint32:function(V){return V===V>>>0},parseFileMode:function(V,re,se){if(V===void 0&&(V=se),typeof V=="string"){if(N(D,V)===null)throw new ne(re,V,"must be a 32-bit unsigned integer or an octal string");V=h(V,8)}return pe(V,re),V},validateArray:Z,validateStringArray:function(V,re){Z(V,re);for(let se=0;se<V.length;se++)me(V[se],`${re}[${se}]`)},validateBooleanArray:function(V,re){Z(V,re);for(let se=0;se<V.length;se++)G(V[se],`${re}[${se}]`)},validateBoolean:G,validateBuffer:te,validateDictionary:Y,validateEncoding:function(V,re){const se=Q(re),ee=V.length;if(se==="hex"&&ee%2!=0)throw new ne("encoding",re,`is invalid for data of length ${ee}`)},validateFunction:ue,validateInt32:de,validateInteger:L,validateNumber:function(V,re,se=void 0,ee){if(typeof V!="number")throw new F(re,"number",V);if(se!=null&&V<se||ee!=null&&V>ee||(se!=null||ee!=null)&&i(V))throw new w(re,`${se!=null?`>= ${se}`:""}${se!=null&&ee!=null?" && ":""}${ee!=null?`<= ${ee}`:""}`,V)},validateObject:z,validateOneOf:k,validatePlainFunction:Ne,validatePort:function(V,re="Port",se=!0){if(typeof V!="number"&&typeof V!="string"||typeof V=="string"&&b(V).length===0||+V!=+V>>>0||V>65535||V===0&&!se)throw new O(re,V,se);return 0|V},validateSignalName:function(V,re="signal"){if(me(V,re),g[V]===void 0)throw g[P(V)]!==void 0?new x(V+" (signals must use all capital letters)"):new x(V)},validateString:me,validateUint32:pe,validateUndefined:ge,validateUnion:function(V,re,se){if(!f(se,V))throw new F(re,`('${S(se,"|")}')`,V)},validateAbortSignal:K,validateLinkHeaderValue:function(V){if(typeof V=="string")return X(V,"hints"),V;if($(V)){const re=V.length;let se="";if(re===0)return se;for(let ee=0;ee<re;ee++){const J=V[ee];X(J,"hints"),se+=J,ee!==re-1&&(se+=", ")}return se}throw new ne("hints",V,'must be an array or string of format "</styles.css>; rel=preload; as=style"')}}},9198:(W,T,m)=>{const $=m(5506),f=m(3095),S=$.Readable.destroy;W.exports=$.Readable,W.exports._uint8ArrayToBuffer=$._uint8ArrayToBuffer,W.exports._isUint8Array=$._isUint8Array,W.exports.isDisturbed=$.isDisturbed,W.exports.isErrored=$.isErrored,W.exports.isReadable=$.isReadable,W.exports.Readable=$.Readable,W.exports.Writable=$.Writable,W.exports.Duplex=$.Duplex,W.exports.Transform=$.Transform,W.exports.PassThrough=$.PassThrough,W.exports.addAbortSignal=$.addAbortSignal,W.exports.finished=$.finished,W.exports.destroy=$.destroy,W.exports.destroy=S,W.exports.pipeline=$.pipeline,W.exports.compose=$.compose,Object.defineProperty($,"promises",{configurable:!0,enumerable:!0,get:()=>f}),W.exports.Stream=$.Stream,W.exports.default=W.exports},6371:(W,T,m)=>{const{format:$,inspect:f,AggregateError:S}=m(7760),E=globalThis.AggregateError||S,j=Symbol("kIsNodeError"),i=["string","function","number","object","Function","Object","boolean","bigint","symbol"],u=/^([A-Z][a-z0-9]*)+$/,c={};function h(b,q){if(!b)throw new c.ERR_INTERNAL_ASSERTION(q)}function C(b){let q="",O=b.length;const F=b[0]==="-"?1:0;for(;O>=F+4;O-=3)q=`_${b.slice(O-3,O)}${q}`;return`${b.slice(0,O)}${q}`}function N(b,q,O){O||(O=Error);class F extends O{constructor(...w){super(function(x,Q,B){if(typeof Q=="function")return h(Q.length<=B.length,`Code: ${x}; The provided arguments length (${B.length}) does not match the required ones (${Q.length}).`),Q(...B);const M=(Q.match(/%[dfijoOs]/g)||[]).length;return h(M===B.length,`Code: ${x}; The provided arguments length (${B.length}) does not match the required ones (${M}).`),B.length===0?Q:$(Q,...B)}(b,q,w))}toString(){return`${this.name} [${b}]: ${this.message}`}}Object.defineProperties(F.prototype,{name:{value:O.name,writable:!0,enumerable:!1,configurable:!0},toString:{value(){return`${this.name} [${b}]: ${this.message}`},writable:!0,enumerable:!1,configurable:!0}}),F.prototype.code=b,F.prototype[j]=!0,c[b]=F}function y(b){const q="__node_internal_"+b.name;return Object.defineProperty(b,"name",{value:q}),b}class P extends Error{constructor(q="The operation was aborted",O=void 0){if(O!==void 0&&typeof O!="object")throw new c.ERR_INVALID_ARG_TYPE("options","Object",O);super(q,O),this.code="ABORT_ERR",this.name="AbortError"}}N("ERR_ASSERTION","%s",Error),N("ERR_INVALID_ARG_TYPE",(b,q,O)=>{h(typeof b=="string","'name' must be a string"),Array.isArray(q)||(q=[q]);let F="The ";b.endsWith(" argument")?F+=`${b} `:F+=`"${b}" ${b.includes(".")?"property":"argument"} `,F+="must be ";const ne=[],w=[],x=[];for(const B of q)h(typeof B=="string","All expected entries have to be of type string"),i.includes(B)?ne.push(B.toLowerCase()):u.test(B)?w.push(B):(h(B!=="object",'The value "object" should be written as "Object"'),x.push(B));if(w.length>0){const B=ne.indexOf("object");B!==-1&&(ne.splice(ne,B,1),w.push("Object"))}if(ne.length>0){switch(ne.length){case 1:F+=`of type ${ne[0]}`;break;case 2:F+=`one of type ${ne[0]} or ${ne[1]}`;break;default:{const B=ne.pop();F+=`one of type ${ne.join(", ")}, or ${B}`}}(w.length>0||x.length>0)&&(F+=" or ")}if(w.length>0){switch(w.length){case 1:F+=`an instance of ${w[0]}`;break;case 2:F+=`an instance of ${w[0]} or ${w[1]}`;break;default:{const B=w.pop();F+=`an instance of ${w.join(", ")}, or ${B}`}}x.length>0&&(F+=" or ")}switch(x.length){case 0:break;case 1:x[0].toLowerCase()!==x[0]&&(F+="an "),F+=`${x[0]}`;break;case 2:F+=`one of ${x[0]} or ${x[1]}`;break;default:{const B=x.pop();F+=`one of ${x.join(", ")}, or ${B}`}}if(O==null)F+=`. Received ${O}`;else if(typeof O=="function"&&O.name)F+=`. Received function ${O.name}`;else if(typeof O=="object"){var Q;(Q=O.constructor)!==null&&Q!==void 0&&Q.name?F+=`. Received an instance of ${O.constructor.name}`:F+=`. Received ${f(O,{depth:-1})}`}else{let B=f(O,{colors:!1});B.length>25&&(B=`${B.slice(0,25)}...`),F+=`. Received type ${typeof O} (${B})`}return F},TypeError),N("ERR_INVALID_ARG_VALUE",(b,q,O="is invalid")=>{let F=f(q);return F.length>128&&(F=F.slice(0,128)+"..."),`The ${b.includes(".")?"property":"argument"} '${b}' ${O}. Received ${F}`},TypeError),N("ERR_INVALID_RETURN_VALUE",(b,q,O)=>{var F;return`Expected ${b} to be returned from the "${q}" function but got ${O!=null&&(F=O.constructor)!==null&&F!==void 0&&F.name?`instance of ${O.constructor.name}`:"type "+typeof O}.`},TypeError),N("ERR_MISSING_ARGS",(...b)=>{let q;h(b.length>0,"At least one arg needs to be specified");const O=b.length;switch(b=(Array.isArray(b)?b:[b]).map(F=>`"${F}"`).join(" or "),O){case 1:q+=`The ${b[0]} argument`;break;case 2:q+=`The ${b[0]} and ${b[1]} arguments`;break;default:{const F=b.pop();q+=`The ${b.join(", ")}, and ${F} arguments`}}return`${q} must be specified`},TypeError),N("ERR_OUT_OF_RANGE",(b,q,O)=>{let F;return h(q,'Missing "range" argument'),Number.isInteger(O)&&Math.abs(O)>2**32?F=C(String(O)):typeof O=="bigint"?(F=String(O),(O>2n**32n||O<-(2n**32n))&&(F=C(F)),F+="n"):F=f(O),`The value of "${b}" is out of range. It must be ${q}. Received ${F}`},RangeError),N("ERR_MULTIPLE_CALLBACK","Callback called multiple times",Error),N("ERR_METHOD_NOT_IMPLEMENTED","The %s method is not implemented",Error),N("ERR_STREAM_ALREADY_FINISHED","Cannot call %s after a stream was finished",Error),N("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable",Error),N("ERR_STREAM_DESTROYED","Cannot call %s after a stream was destroyed",Error),N("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),N("ERR_STREAM_PREMATURE_CLOSE","Premature close",Error),N("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF",Error),N("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event",Error),N("ERR_STREAM_WRITE_AFTER_END","write after end",Error),N("ERR_UNKNOWN_ENCODING","Unknown encoding: %s",TypeError),W.exports={AbortError:P,aggregateTwoErrors:y(function(b,q){if(b&&q&&b!==q){if(Array.isArray(q.errors))return q.errors.push(b),q;const O=new E([q,b],q.message);return O.code=q.code,O}return b||q}),hideStackFrames:y,codes:c}},4134:W=>{W.exports={ArrayIsArray:T=>Array.isArray(T),ArrayPrototypeIncludes:(T,m)=>T.includes(m),ArrayPrototypeIndexOf:(T,m)=>T.indexOf(m),ArrayPrototypeJoin:(T,m)=>T.join(m),ArrayPrototypeMap:(T,m)=>T.map(m),ArrayPrototypePop:(T,m)=>T.pop(m),ArrayPrototypePush:(T,m)=>T.push(m),ArrayPrototypeSlice:(T,m,$)=>T.slice(m,$),Error,FunctionPrototypeCall:(T,m,...$)=>T.call(m,...$),FunctionPrototypeSymbolHasInstance:(T,m)=>Function.prototype[Symbol.hasInstance].call(T,m),MathFloor:Math.floor,Number,NumberIsInteger:Number.isInteger,NumberIsNaN:Number.isNaN,NumberMAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER,NumberMIN_SAFE_INTEGER:Number.MIN_SAFE_INTEGER,NumberParseInt:Number.parseInt,ObjectDefineProperties:(T,m)=>Object.defineProperties(T,m),ObjectDefineProperty:(T,m,$)=>Object.defineProperty(T,m,$),ObjectGetOwnPropertyDescriptor:(T,m)=>Object.getOwnPropertyDescriptor(T,m),ObjectKeys:T=>Object.keys(T),ObjectSetPrototypeOf:(T,m)=>Object.setPrototypeOf(T,m),Promise,PromisePrototypeCatch:(T,m)=>T.catch(m),PromisePrototypeThen:(T,m,$)=>T.then(m,$),PromiseReject:T=>Promise.reject(T),ReflectApply:Reflect.apply,RegExpPrototypeTest:(T,m)=>T.test(m),SafeSet:Set,String,StringPrototypeSlice:(T,m,$)=>T.slice(m,$),StringPrototypeToLowerCase:T=>T.toLowerCase(),StringPrototypeToUpperCase:T=>T.toUpperCase(),StringPrototypeTrim:T=>T.trim(),Symbol,SymbolFor:Symbol.for,SymbolAsyncIterator:Symbol.asyncIterator,SymbolHasInstance:Symbol.hasInstance,SymbolIterator:Symbol.iterator,TypedArrayPrototypeSet:(T,m,$)=>T.set(m,$),Uint8Array}},7760:(W,T,m)=>{const $=m(8287),f=Object.getPrototypeOf(async function(){}).constructor,S=globalThis.Blob||$.Blob,E=S!==void 0?function(i){return i instanceof S}:function(i){return!1};class j extends Error{constructor(u){if(!Array.isArray(u))throw new TypeError("Expected input to be an Array, got "+typeof u);let c="";for(let h=0;h<u.length;h++)c+=`    ${u[h].stack}
`;super(c),this.name="AggregateError",this.errors=u}}W.exports={AggregateError:j,kEmptyObject:Object.freeze({}),once(i){let u=!1;return function(...c){u||(u=!0,i.apply(this,c))}},createDeferredPromise:function(){let i,u;return{promise:new Promise((c,h)=>{i=c,u=h}),resolve:i,reject:u}},promisify:i=>new Promise((u,c)=>{i((h,...C)=>h?c(h):u(...C))}),debuglog:()=>function(){},format:(i,...u)=>i.replace(/%([sdifj])/g,function(...[c,h]){const C=u.shift();return h==="f"?C.toFixed(6):h==="j"?JSON.stringify(C):h==="s"&&typeof C=="object"?`${C.constructor!==Object?C.constructor.name:""} {}`.trim():C.toString()}),inspect(i){switch(typeof i){case"string":if(i.includes("'")){if(!i.includes('"'))return`"${i}"`;if(!i.includes("`")&&!i.includes("${"))return`\`${i}\``}return`'${i}'`;case"number":return isNaN(i)?"NaN":Object.is(i,-0)?String(i):i;case"bigint":return`${String(i)}n`;case"boolean":case"undefined":return String(i);case"object":return"{}"}},types:{isAsyncFunction:i=>i instanceof f,isArrayBufferView:i=>ArrayBuffer.isView(i)},isBlob:E},W.exports.promisify.custom=Symbol.for("nodejs.util.promisify.custom")},5506:(W,T,m)=>{const{Buffer:$}=m(8287),{ObjectDefineProperty:f,ObjectKeys:S,ReflectApply:E}=m(4134),{promisify:{custom:j}}=m(7760),{streamReturningOperators:i,promiseReturningOperators:u}=m(823),{codes:{ERR_ILLEGAL_CONSTRUCTOR:c}}=m(6371),h=m(7830),{pipeline:C}=m(7758),{destroyer:N}=m(5896),y=m(6238),P=m(3095),b=m(6115),q=W.exports=m(4259).Stream;q.isDisturbed=b.isDisturbed,q.isErrored=b.isErrored,q.isReadable=b.isReadable,q.Readable=m(7576);for(const F of S(i)){let ne=function(...x){if(new.target)throw c();return q.Readable.from(E(w,this,x))};const w=i[F];f(ne,"name",{__proto__:null,value:w.name}),f(ne,"length",{__proto__:null,value:w.length}),f(q.Readable.prototype,F,{__proto__:null,value:ne,enumerable:!1,configurable:!0,writable:!0})}for(const F of S(u)){let ne=function(...x){if(new.target)throw c();return E(w,this,x)};const w=u[F];f(ne,"name",{__proto__:null,value:w.name}),f(ne,"length",{__proto__:null,value:w.length}),f(q.Readable.prototype,F,{__proto__:null,value:ne,enumerable:!1,configurable:!0,writable:!0})}q.Writable=m(8584),q.Duplex=m(3370),q.Transform=m(5001),q.PassThrough=m(6524),q.pipeline=C;const{addAbortSignal:O}=m(4147);q.addAbortSignal=O,q.finished=y,q.destroy=N,q.compose=h,f(q,"promises",{__proto__:null,configurable:!0,enumerable:!0,get:()=>P}),f(C,j,{__proto__:null,enumerable:!0,get:()=>P.pipeline}),f(y,j,{__proto__:null,enumerable:!0,get:()=>P.finished}),q.Stream=q,q._isUint8Array=function(F){return F instanceof Uint8Array},q._uint8ArrayToBuffer=function(F){return $.from(F.buffer,F.byteOffset,F.byteLength)}},3095:(W,T,m)=>{const{ArrayPrototypePop:$,Promise:f}=m(4134),{isIterable:S,isNodeStream:E,isWebStream:j}=m(6115),{pipelineImpl:i}=m(7758),{finished:u}=m(6238);m(5506),W.exports={finished:u,pipeline:function(...c){return new f((h,C)=>{let N,y;const P=c[c.length-1];if(P&&typeof P=="object"&&!E(P)&&!S(P)&&!j(P)){const b=$(c);N=b.signal,y=b.end}i(c,(b,q)=>{b?C(b):h(q)},{signal:N,end:y})})}}},2861:(W,T,m)=>{var $=m(8287),f=$.Buffer;function S(j,i){for(var u in j)i[u]=j[u]}function E(j,i,u){return f(j,i,u)}f.from&&f.alloc&&f.allocUnsafe&&f.allocUnsafeSlow?W.exports=$:(S($,T),T.Buffer=E),E.prototype=Object.create(f.prototype),S(f,E),E.from=function(j,i,u){if(typeof j=="number")throw new TypeError("Argument must not be a number");return f(j,i,u)},E.alloc=function(j,i,u){if(typeof j!="number")throw new TypeError("Argument must be a number");var c=f(j);return i!==void 0?typeof u=="string"?c.fill(i,u):c.fill(i):c.fill(0),c},E.allocUnsafe=function(j){if(typeof j!="number")throw new TypeError("Argument must be a number");return f(j)},E.allocUnsafeSlow=function(j){if(typeof j!="number")throw new TypeError("Argument must be a number");return $.SlowBuffer(j)}},2791:function(W,T,m){(function($,f){if(!$.setImmediate){var S,E,j,i,u,c=1,h={},C=!1,N=$.document,y=Object.getPrototypeOf&&Object.getPrototypeOf($);y=y&&y.setTimeout?y:$,{}.toString.call($.process)==="[object process]"?S=function(q){Ht.nextTick(function(){b(q)})}:function(){if($.postMessage&&!$.importScripts){var q=!0,O=$.onmessage;return $.onmessage=function(){q=!1},$.postMessage("","*"),$.onmessage=O,q}}()?(i="setImmediate$"+Math.random()+"$",u=function(q){q.source===$&&typeof q.data=="string"&&q.data.indexOf(i)===0&&b(+q.data.slice(i.length))},$.addEventListener?$.addEventListener("message",u,!1):$.attachEvent("onmessage",u),S=function(q){$.postMessage(i+q,"*")}):$.MessageChannel?((j=new MessageChannel).port1.onmessage=function(q){b(q.data)},S=function(q){j.port2.postMessage(q)}):N&&"onreadystatechange"in N.createElement("script")?(E=N.documentElement,S=function(q){var O=N.createElement("script");O.onreadystatechange=function(){b(q),O.onreadystatechange=null,E.removeChild(O),O=null},E.appendChild(O)}):S=function(q){setTimeout(b,0,q)},y.setImmediate=function(q){typeof q!="function"&&(q=new Function(""+q));for(var O=new Array(arguments.length-1),F=0;F<O.length;F++)O[F]=arguments[F+1];var ne={callback:q,args:O};return h[c]=ne,S(c),c++},y.clearImmediate=P}function P(q){delete h[q]}function b(q){if(C)setTimeout(b,0,q);else{var O=h[q];if(O){C=!0;try{(function(F){var ne=F.callback,w=F.args;switch(w.length){case 0:ne();break;case 1:ne(w[0]);break;case 2:ne(w[0],w[1]);break;case 3:ne(w[0],w[1],w[2]);break;default:ne.apply(void 0,w)}})(O)}finally{P(q),C=!1}}}}})(typeof self>"u"?m.g===void 0?this:m.g:self)},3141:(W,T,m)=>{var $=m(2861).Buffer,f=$.isEncoding||function(y){switch((y=""+y)&&y.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function S(y){var P;switch(this.encoding=function(b){var q=function(O){if(!O)return"utf8";for(var F;;)switch(O){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return O;default:if(F)return;O=(""+O).toLowerCase(),F=!0}}(b);if(typeof q!="string"&&($.isEncoding===f||!f(b)))throw new Error("Unknown encoding: "+b);return q||b}(y),this.encoding){case"utf16le":this.text=i,this.end=u,P=4;break;case"utf8":this.fillLast=j,P=4;break;case"base64":this.text=c,this.end=h,P=3;break;default:return this.write=C,void(this.end=N)}this.lastNeed=0,this.lastTotal=0,this.lastChar=$.allocUnsafe(P)}function E(y){return y<=127?0:y>>5==6?2:y>>4==14?3:y>>3==30?4:y>>6==2?-1:-2}function j(y){var P=this.lastTotal-this.lastNeed,b=function(q,O,F){if((192&O[0])!=128)return q.lastNeed=0,"�";if(q.lastNeed>1&&O.length>1){if((192&O[1])!=128)return q.lastNeed=1,"�";if(q.lastNeed>2&&O.length>2&&(192&O[2])!=128)return q.lastNeed=2,"�"}}(this,y);return b!==void 0?b:this.lastNeed<=y.length?(y.copy(this.lastChar,P,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(y.copy(this.lastChar,P,0,y.length),void(this.lastNeed-=y.length))}function i(y,P){if((y.length-P)%2==0){var b=y.toString("utf16le",P);if(b){var q=b.charCodeAt(b.length-1);if(q>=55296&&q<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=y[y.length-2],this.lastChar[1]=y[y.length-1],b.slice(0,-1)}return b}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=y[y.length-1],y.toString("utf16le",P,y.length-1)}function u(y){var P=y&&y.length?this.write(y):"";if(this.lastNeed){var b=this.lastTotal-this.lastNeed;return P+this.lastChar.toString("utf16le",0,b)}return P}function c(y,P){var b=(y.length-P)%3;return b===0?y.toString("base64",P):(this.lastNeed=3-b,this.lastTotal=3,b===1?this.lastChar[0]=y[y.length-1]:(this.lastChar[0]=y[y.length-2],this.lastChar[1]=y[y.length-1]),y.toString("base64",P,y.length-b))}function h(y){var P=y&&y.length?this.write(y):"";return this.lastNeed?P+this.lastChar.toString("base64",0,3-this.lastNeed):P}function C(y){return y.toString(this.encoding)}function N(y){return y&&y.length?this.write(y):""}T.StringDecoder=S,S.prototype.write=function(y){if(y.length===0)return"";var P,b;if(this.lastNeed){if((P=this.fillLast(y))===void 0)return"";b=this.lastNeed,this.lastNeed=0}else b=0;return b<y.length?P?P+this.text(y,b):this.text(y,b):P||""},S.prototype.end=function(y){var P=y&&y.length?this.write(y):"";return this.lastNeed?P+"�":P},S.prototype.text=function(y,P){var b=function(O,F,ne){var w=F.length-1;if(w<ne)return 0;var x=E(F[w]);return x>=0?(x>0&&(O.lastNeed=x-1),x):--w<ne||x===-2?0:(x=E(F[w]))>=0?(x>0&&(O.lastNeed=x-2),x):--w<ne||x===-2?0:(x=E(F[w]))>=0?(x>0&&(x===2?x=0:O.lastNeed=x-3),x):0}(this,y,P);if(!this.lastNeed)return y.toString("utf8",P);this.lastTotal=b;var q=y.length-(b-this.lastNeed);return y.copy(this.lastChar,0,q),y.toString("utf8",P,q)},S.prototype.fillLast=function(y){if(this.lastNeed<=y.length)return y.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);y.copy(this.lastChar,this.lastTotal-this.lastNeed,0,y.length),this.lastNeed-=y.length}},259:W=>{W.exports=function(T){T.prototype[Symbol.iterator]=function*(){for(let m=this.head;m;m=m.next)yield m.value}}},8799:(W,T,m)=>{function $(i){var u=this;if(u instanceof $||(u=new $),u.tail=null,u.head=null,u.length=0,i&&typeof i.forEach=="function")i.forEach(function(C){u.push(C)});else if(arguments.length>0)for(var c=0,h=arguments.length;c<h;c++)u.push(arguments[c]);return u}function f(i,u,c){var h=u===i.head?new j(c,null,u,i):new j(c,u,u.next,i);return h.next===null&&(i.tail=h),h.prev===null&&(i.head=h),i.length++,h}function S(i,u){i.tail=new j(u,i.tail,null,i),i.head||(i.head=i.tail),i.length++}function E(i,u){i.head=new j(u,null,i.head,i),i.tail||(i.tail=i.head),i.length++}function j(i,u,c,h){if(!(this instanceof j))return new j(i,u,c,h);this.list=h,this.value=i,u?(u.next=this,this.prev=u):this.prev=null,c?(c.prev=this,this.next=c):this.next=null}W.exports=$,$.Node=j,$.create=$,$.prototype.removeNode=function(i){if(i.list!==this)throw new Error("removing node which does not belong to this list");var u=i.next,c=i.prev;return u&&(u.prev=c),c&&(c.next=u),i===this.head&&(this.head=u),i===this.tail&&(this.tail=c),i.list.length--,i.next=null,i.prev=null,i.list=null,u},$.prototype.unshiftNode=function(i){if(i!==this.head){i.list&&i.list.removeNode(i);var u=this.head;i.list=this,i.next=u,u&&(u.prev=i),this.head=i,this.tail||(this.tail=i),this.length++}},$.prototype.pushNode=function(i){if(i!==this.tail){i.list&&i.list.removeNode(i);var u=this.tail;i.list=this,i.prev=u,u&&(u.next=i),this.tail=i,this.head||(this.head=i),this.length++}},$.prototype.push=function(){for(var i=0,u=arguments.length;i<u;i++)S(this,arguments[i]);return this.length},$.prototype.unshift=function(){for(var i=0,u=arguments.length;i<u;i++)E(this,arguments[i]);return this.length},$.prototype.pop=function(){if(this.tail){var i=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,i}},$.prototype.shift=function(){if(this.head){var i=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,i}},$.prototype.forEach=function(i,u){u=u||this;for(var c=this.head,h=0;c!==null;h++)i.call(u,c.value,h,this),c=c.next},$.prototype.forEachReverse=function(i,u){u=u||this;for(var c=this.tail,h=this.length-1;c!==null;h--)i.call(u,c.value,h,this),c=c.prev},$.prototype.get=function(i){for(var u=0,c=this.head;c!==null&&u<i;u++)c=c.next;if(u===i&&c!==null)return c.value},$.prototype.getReverse=function(i){for(var u=0,c=this.tail;c!==null&&u<i;u++)c=c.prev;if(u===i&&c!==null)return c.value},$.prototype.map=function(i,u){u=u||this;for(var c=new $,h=this.head;h!==null;)c.push(i.call(u,h.value,this)),h=h.next;return c},$.prototype.mapReverse=function(i,u){u=u||this;for(var c=new $,h=this.tail;h!==null;)c.push(i.call(u,h.value,this)),h=h.prev;return c},$.prototype.reduce=function(i,u){var c,h=this.head;if(arguments.length>1)c=u;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");h=this.head.next,c=this.head.value}for(var C=0;h!==null;C++)c=i(c,h.value,C),h=h.next;return c},$.prototype.reduceReverse=function(i,u){var c,h=this.tail;if(arguments.length>1)c=u;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");h=this.tail.prev,c=this.tail.value}for(var C=this.length-1;h!==null;C--)c=i(c,h.value,C),h=h.prev;return c},$.prototype.toArray=function(){for(var i=new Array(this.length),u=0,c=this.head;c!==null;u++)i[u]=c.value,c=c.next;return i},$.prototype.toArrayReverse=function(){for(var i=new Array(this.length),u=0,c=this.tail;c!==null;u++)i[u]=c.value,c=c.prev;return i},$.prototype.slice=function(i,u){(u=u||this.length)<0&&(u+=this.length),(i=i||0)<0&&(i+=this.length);var c=new $;if(u<i||u<0)return c;i<0&&(i=0),u>this.length&&(u=this.length);for(var h=0,C=this.head;C!==null&&h<i;h++)C=C.next;for(;C!==null&&h<u;h++,C=C.next)c.push(C.value);return c},$.prototype.sliceReverse=function(i,u){(u=u||this.length)<0&&(u+=this.length),(i=i||0)<0&&(i+=this.length);var c=new $;if(u<i||u<0)return c;i<0&&(i=0),u>this.length&&(u=this.length);for(var h=this.length,C=this.tail;C!==null&&h>u;h--)C=C.prev;for(;C!==null&&h>i;h--,C=C.prev)c.push(C.value);return c},$.prototype.splice=function(i,u,...c){i>this.length&&(i=this.length-1),i<0&&(i=this.length+i);for(var h=0,C=this.head;C!==null&&h<i;h++)C=C.next;var N=[];for(h=0;C&&h<u;h++)N.push(C.value),C=this.removeNode(C);for(C===null&&(C=this.tail),C!==this.head&&C!==this.tail&&(C=C.prev),h=0;h<c.length;h++)C=f(this,C,c[h]);return N},$.prototype.reverse=function(){for(var i=this.head,u=this.tail,c=i;c!==null;c=c.prev){var h=c.prev;c.prev=c.next,c.next=h}return this.head=u,this.tail=i,this};try{m(259)($)}catch{}},7789:()=>{}},On={};function De(W){var T=On[W];if(T!==void 0)return T.exports;var m=On[W]={exports:{}};return uo[W].call(m.exports,m,m.exports,De),m.exports}De.n=W=>{var T=W&&W.__esModule?()=>W.default:()=>W;return De.d(T,{a:T}),T},De.d=(W,T)=>{for(var m in T)De.o(T,m)&&!De.o(W,m)&&Object.defineProperty(W,m,{enumerable:!0,get:T[m]})},De.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),De.o=(W,T)=>Object.prototype.hasOwnProperty.call(W,T);var mo={};(()=>{De.d(mo,{TS:()=>wt,aH:()=>Xt,k_:()=>I,a6:()=>jn,nt:()=>ge,Sx:()=>ce,E7:()=>z,F3:()=>v});const W="http://www.w3.org/1999/02/22-rdf-syntax-ns#",T="http://www.w3.org/2001/XMLSchema#",m="http://www.w3.org/2000/10/swap/",$={xsd:{decimal:`${T}decimal`,boolean:`${T}boolean`,double:`${T}double`,integer:`${T}integer`,string:`${T}string`},rdf:{type:`${W}type`,nil:`${W}nil`,first:`${W}first`,rest:`${W}rest`,langString:`${W}langString`},owl:{sameAs:"http://www.w3.org/2002/07/owl#sameAs"},r:{forSome:`${m}reify#forSome`,forAll:`${m}reify#forAll`},log:{implies:`${m}log#implies`}},{rdf:f,xsd:S}=$;let E,j=0;const i={namedNode:function(s){return new h(s)},blankNode:function(s){return new N(s||"n3-"+j++)},variable:function(s){return new y(s)},literal:function(s,n){if(typeof n=="string")return new C(`"${s}"@${n.toLowerCase()}`);let o=n?n.value:"";return o===""&&(typeof s=="boolean"?o=S.boolean:typeof s=="number"&&(Number.isFinite(s)?o=Number.isInteger(s)?S.integer:S.double:(o=S.double,Number.isNaN(s)||(s=s>0?"INF":"-INF")))),o===""||o===S.string?new C(`"${s}"`):new C(`"${s}"^^${o}`)},defaultGraph:function(){return E},quad:O,triple:O},u=i;class c{constructor(n){this.id=n}get value(){return this.id}equals(n){return n instanceof c?this.id===n.id:!!n&&this.termType===n.termType&&this.value===n.value}hashCode(){return 0}toJSON(){return{termType:this.termType,value:this.value}}}class h extends c{get termType(){return"NamedNode"}}class C extends c{get termType(){return"Literal"}get value(){return this.id.substring(1,this.id.lastIndexOf('"'))}get language(){const n=this.id;let o=n.lastIndexOf('"')+1;return o<n.length&&n[o++]==="@"?n.substr(o).toLowerCase():""}get datatype(){return new h(this.datatypeString)}get datatypeString(){const n=this.id,o=n.lastIndexOf('"')+1,r=o<n.length?n[o]:"";return r==="^"?n.substr(o+2):r!=="@"?S.string:f.langString}equals(n){return n instanceof C?this.id===n.id:!!n&&!!n.datatype&&this.termType===n.termType&&this.value===n.value&&this.language===n.language&&this.datatype.value===n.datatype.value}toJSON(){return{termType:this.termType,value:this.value,language:this.language,datatype:{termType:"NamedNode",value:this.datatypeString}}}}class N extends c{constructor(n){super(`_:${n}`)}get termType(){return"BlankNode"}get value(){return this.id.substr(2)}}class y extends c{constructor(n){super(`?${n}`)}get termType(){return"Variable"}get value(){return this.id.substr(1)}}function P(s,n,o){if(n=n||i,!s)return n.defaultGraph();switch(s[0]){case"?":return n.variable(s.substr(1));case"_":return n.blankNode(s.substr(2));case'"':if(n===i)return new C(s);if(s[s.length-1]==='"')return n.literal(s.substr(1,s.length-2));const r=s.lastIndexOf('"',s.length-1);return n.literal(s.substr(1,r-1),s[r+1]==="@"?s.substr(r+2):n.namedNode(s.substr(r+3)));case"[":s=JSON.parse(s);break;default:if(!o||!Array.isArray(s))return n.namedNode(s)}return n.quad(P(s[0],n,!0),P(s[1],n,!0),P(s[2],n,!0),s[3]&&P(s[3],n,!0))}function b(s,n){if(typeof s=="string")return s;if(s instanceof c&&s.termType!=="Quad")return s.id;if(!s)return E.id;switch(s.termType){case"NamedNode":return s.value;case"BlankNode":return`_:${s.value}`;case"Variable":return`?${s.value}`;case"DefaultGraph":return"";case"Literal":return`"${s.value}"${s.language?`@${s.language}`:s.datatype&&s.datatype.value!==S.string?`^^${s.datatype.value}`:""}`;case"Quad":const o=[b(s.subject,!0),b(s.predicate,!0),b(s.object,!0)];return s.graph&&s.graph.termType!=="DefaultGraph"&&o.push(b(s.graph,!0)),n?o:JSON.stringify(o);default:throw new Error(`Unexpected termType: ${s.termType}`)}}E=new class extends c{constructor(){return super(""),E||this}get termType(){return"DefaultGraph"}equals(s){return this===s||!!s&&this.termType===s.termType}};class q extends c{constructor(n,o,r,e){super(""),this._subject=n,this._predicate=o,this._object=r,this._graph=e||E}get termType(){return"Quad"}get subject(){return this._subject}get predicate(){return this._predicate}get object(){return this._object}get graph(){return this._graph}toJSON(){return{termType:this.termType,subject:this._subject.toJSON(),predicate:this._predicate.toJSON(),object:this._object.toJSON(),graph:this._graph.toJSON()}}equals(n){return!!n&&this._subject.equals(n.subject)&&this._predicate.equals(n.predicate)&&this._object.equals(n.object)&&this._graph.equals(n.graph)}}function O(s,n,o,r){return new q(s,n,o,r)}const F="http://www.w3.org/ns/shacl#",ne="http://www.w3.org/2001/XMLSchema#",w="http://www.w3.org/1999/02/22-rdf-syntax-ns#",x="http://www.w3.org/2000/01/rdf-schema#",Q="http://www.w3.org/2004/02/skos/core#",B="http://www.w3.org/2002/07/owl#",M=u.namedNode("shapes"),g=u.namedNode(B+"imports"),D=u.namedNode(w+"type"),L=u.namedNode(x+"subClassOf"),de=u.namedNode(Q+"broader"),pe=u.namedNode(B+"NamedIndividual"),me=u.namedNode(F+"NodeShape"),k=u.namedNode(F+"class"),G=u.namedNode(F+"targetClass");function A(s,n,o=F,r){let e="";const t=function(d,U,a=F,oe){let H;const be=a+U;for(const R of d)if(R.predicate.value===be){if(!oe||R.object.id.endsWith(`@${oe}`))return R.object;R.object.id.indexOf("@")<0?H=R.object:H||(H=R.object)}return H}(s,n,o,r);return t&&(e=t.value),e}function z(s,n){return A(s,"prefLabel",Q,n)||A(s,"label",x,n)}function Y(s,n,o){const r=[];for(const e of s)r.push({value:e,label:z(n.getQuads(e,null,null,null),o)});return r}function Z(s,n){for(const o in n)s=s.replace(n[o],"");return s}function te(s,n){const o=Y(n.shapesGraph.getSubjects(D,s,null),n.shapesGraph,n.attributes.language);for(const r of n.shapesGraph.getSubjects(L,s,null))o.push(...te(r,n));if(n.shapesGraph.has(new q(s,D,pe,M))){o.push(...Y([s],n.shapesGraph,n.attributes.language));for(const r of n.shapesGraph.getSubjects(de,s,null))o.push(...te(r,n))}return o}function K(s){let n;try{n=new URL(s)}catch{return!1}return n.protocol==="http:"||n.protocol==="https:"}function ue(s,n,o){const r=document.createElement("div");r.classList.add("shacl-or-constraint");const e=[];if(e.push({label:"--- please choose ---",value:""}),n instanceof ze){const t=[];for(let a=0;a<s.length;a++){const oe=new ie(s[a],o,n.nodeId);t.push(oe),e.push({label:oe.template.label,value:a.toString()})}const d=o.theme.createListEditor("Please choose",null,!1,e),U=d.querySelector(".editor");U.onchange=()=>{U.value&&r.replaceWith(t[parseInt(U.value)])},r.appendChild(d)}else{const t=[];for(let a=0;a<s.length;a++){const oe=o.shapesGraph.getQuads(s[a],null,null,M);oe.length&&(t.push(oe),e.push({label:z(oe,o.attributes.language)||Z(oe[0].predicate.value,o.prefixes)+" = "+Z(oe[0].object.value,o.prefixes),value:a.toString()}))}const d=o.theme.createListEditor(n.template.label+"?",null,!1,e,n.template),U=d.querySelector(".editor");U.onchange=()=>{U.value&&r.replaceWith($e(n.template.clone().merge(t[parseInt(U.value)]),void 0,!0))},r.appendChild(d)}return r}const Ne={[`${F}name`]:(s,n)=>{const o=n;s.name&&o.language!==s.config.attributes.language||(s.name=o)},[`${F}description`]:(s,n)=>{const o=n;s.description&&o.language!==s.config.attributes.language||(s.description=o)},[`${F}path`]:(s,n)=>{s.path=n.value},[`${F}node`]:(s,n)=>{s.node=n},[`${F}datatype`]:(s,n)=>{s.datatype=n},[`${F}nodeKind`]:(s,n)=>{s.nodeKind=n},[`${F}minCount`]:(s,n)=>{s.minCount=parseInt(n.value)},[`${F}maxCount`]:(s,n)=>{s.maxCount=parseInt(n.value)},[`${F}minLength`]:(s,n)=>{s.minLength=parseInt(n.value)},[`${F}maxLength`]:(s,n)=>{s.maxLength=parseInt(n.value)},[`${F}minInclusive`]:(s,n)=>{s.minInclusive=parseInt(n.value)},[`${F}maxInclusive`]:(s,n)=>{s.maxInclusive=parseInt(n.value)},[`${F}minExclusive`]:(s,n)=>{s.minExclusive=parseInt(n.value)},[`${F}maxExclusive`]:(s,n)=>{s.maxExclusive=parseInt(n.value)},[`${F}pattern`]:(s,n)=>{s.pattern=n.value},[`${F}order`]:(s,n)=>{s.order=parseInt(n.value)},"http://datashapes.org/dash#singleLine":(s,n)=>{s.singleLine=n.value==="true"},[`${F}and`]:(s,n)=>{s.shaclAnd=n.value},[`${F}in`]:(s,n)=>{s.shaclIn=n.value},[`${F}languageIn`]:(s,n)=>{s.languageIn=s.config.lists[n.value],s.datatype=u.namedNode(w+"langString")},[`${F}defaultValue`]:(s,n)=>{s.defaultValue=n},[`${F}hasValue`]:(s,n)=>{s.hasValue=n},[k.value]:(s,n)=>{s.class=n;const o=s.config.shapesGraph.getSubjects(G,n,M);o.length>0&&(s.node=o[0])},[`${F}or`]:(s,n)=>{const o=s.config.lists[n.value];o!=null&&o.length?s.shaclOr=o:console.error("list not found:",n.value,"existing lists:",s.config.lists)}};class ge{constructor(n,o,r){this.label="",this.config=r,this.nodeId=o,this.merge(n)}merge(n){var o,r;for(const e of n)(o=Ne[e.predicate.id])===null||o===void 0||o.call(this,this,e.object);if(this.label=((r=this.name)===null||r===void 0?void 0:r.value)||z(n,this.config.attributes.language),this.label||this.node||this.shaclAnd||(this.label=this.path?Z(this.path,this.config.prefixes):"unknown"),(this.node||this.shaclAnd)&&(this.extendedShapes=[],this.node&&this.extendedShapes.push(this.node),this.shaclAnd)){const e=this.config.lists[this.shaclAnd];if(e!=null&&e.length)for(const t of e)this.extendedShapes.push(t)}return this}clone(){const n=Object.assign({},this);return n.merge=this.merge.bind(n),n.clone=this.clone.bind(n),n}}class ce{constructor(n){let o=`form { box-sizing: border-box; display:block; --label-width: 8em; --caret-size: 10px; }
form.mode-edit { padding-left: 1em;  }
form *, form ::after, form ::before { box-sizing: inherit; }
shacl-node, .shacl-group { display: flex; flex-direction: column; width: 100%; position: relative; }
shacl-node .control-button { text-decoration: none; cursor: pointer; border: 1px solid transparent; border-radius: 4px; padding: 2px 4px; }
shacl-node .control-button:hover { border-color: inherit; }
shacl-node .remove-button { margin-left: 4px; }
shacl-node .add-button { font-size: 0.8rem; color: #555; margin: 4px 24px 0 0; }
shacl-node .add-button:before { content: '+'; margin-right: 0.2em; }
shacl-node .add-button:hover { color: inherit; }
shacl-node h1 { font-size: 1.1rem; border-bottom: 1px solid; margin-top: 4px; color: #555; }
shacl-property { display: flex; flex-direction: column; align-items: end; position: relative; }
shacl-property:not(.may-add) > .add-button { display: none; }
shacl-property:not(.may-remove) > .property-instance > .remove-button:not(.persistent) { visibility: hidden; }
shacl-property:not(.may-remove) > .shacl-or-constraint > .remove-button:not(.persistent) { visibility: hidden; }
.shacl-group { margin-bottom: 1em; padding-bottom: 1em; }
.mode-view .shacl-group:not(:has(shacl-property)) { display: none; }
.property-instance, .shacl-or-constraint { display: flex; align-items: flex-start; padding: 4px 0; width: 100%; position: relative; }
.shacl-or-constraint label { display: inline-block; word-break: break-word; width: var(--label-width); line-height: 1em; padding-top: 0.15em; padding-right: 1em; flex-shrink: 0; position: relative; }
.property-instance label[title] { cursor: help; text-decoration: underline dashed #AAA; }
.mode-edit .property-instance label.required::before { color: red; content: '\\2736'; font-size: 0.6rem; position: absolute; left: -1.4em; top: 0.15rem; }
.property-instance.valid::before { position: absolute; left: calc(var(--label-width) - 1em); top: 6px; color: green; content: '\\2713'; }
.editor:not([type='checkbox']), .shacl-or-constraint select { flex-grow: 1; }
.shacl-or-constraint select { border: 1px solid #DDD; padding: 2px 4px; }
textarea.editor { resize: vertical; }
.lang-chooser { position: absolute; top: 5px; right: 28px; border: 0; background-color: #e9e9ed; padding: 2px 4px; max-width: 40px; width: 40px; box-sizing: content-box; }
.lang-chooser+.editor { padding-right: 55px; }
.validation-error { position: absolute; left: calc(var(--label-width) - 1em); top: 6px; color: red; cursor: help; }
.validation-error::before { content: '\\26a0' }
.validation-error.node { left: -1em; }
.invalid > .editor { border-color: red !important; }
.ml-0  { margin-left: 0 !important; }
.pr-0  { padding-right: 0 !important; }
.mode-view .property-instance:not(:first-child) > label { visibility: hidden; }
.mode-view .property-instance label { width: var(--label-width); }

.d-flex { display: flex; }
.lang { opacity: 0.65; font-size: 0.6em; }
a, a:visited { color: inherit; }

.fadeIn, .fadeOut { animation: fadeIn 0.2s ease-out; }
.fadeOut { animation-direction: reverse; animation-timing-function: ease-out;}
@keyframes fadeIn {
    0% { opacity: 0; transform: scaleY(0.8); }
    100% { opacity: 1; transform: scaleY(1); }
}
  
.collapsible > .activator { display: flex; justify-content: space-between; align-items: center; cursor: pointer; width: 100%; border: 0; padding: 8px 0; transition: 0.2s; }
.collapsible > .activator:hover, .collapsible.open > .activator { background-color: #F5F5F5; }
.collapsible > .activator::after { content:''; width: var(--caret-size); height: var(--caret-size); border-style: none solid solid none; border-width: calc(0.3 * var(--caret-size)); transform: rotate(45deg); transition: transform .15s ease-out; margin-right: calc(0.5 * var(--caret-size)); }
.collapsible.open > .activator::after { transform: rotate(225deg); }
.collapsible > *:not(.activator) { transition: all 0.2s ease-out; opacity: 1; }
.collapsible:not(.open) > *:not(.activator) { max-height: 0; padding: 0; opacity: 0; overflow: hidden; }
.collapsible shacl-node > h1 { display: none; }
.collapsible.open > .property-instance:nth-child(odd) { background-color: #F5F5F5; }`;n&&(o+=`
`+n),this.stylesheet=new CSSStyleSheet,this.stylesheet.replaceSync(o)}apply(n){}createViewer(n,o,r){const e=document.createElement("div"),t=document.createElement("label");t.innerHTML=n+":",r.description&&t.setAttribute("title",r.description.value),e.appendChild(t);let d,U=o.value,a=null;if(o instanceof h){const oe=r.config.shapesGraph.getQuads(U,null,null,M);if(oe.length){const H=z(oe,r.config.attributes.language);H&&(U=H)}}else o instanceof C&&(o.language?(a=document.createElement("span"),a.classList.add("lang"),a.innerText=`@${o.language}`):o.datatype.value===`${ne}date`?U=new Date(Date.parse(o.value)).toDateString():o.datatype.value===`${ne}dateTime`&&(U=new Date(Date.parse(o.value)).toLocaleString()));return K(o.value)?(d=document.createElement("a"),d.setAttribute("href",o.value)):d=document.createElement("div"),d.classList.add("d-flex"),d.innerText=U,a&&d.appendChild(a),e.appendChild(d),e}}function X(s,n){var o,r,e;if(s.config.editMode){const t=s.minCount!==void 0&&s.minCount>0;if(s.class)return s.config.theme.createListEditor(s.label,n,t,te(s.class,s.config),s);if(s.shaclIn){const d=s.config.lists[s.shaclIn];if(d!=null&&d.length){const U=Y(d,s.config.shapesGraph,s.config.attributes.language);return s.config.theme.createListEditor(s.label,n,t,U,s)}console.error("list not found:",s.shaclIn,"existing lists:",s.config.lists)}if(((o=s.datatype)===null||o===void 0?void 0:o.value)===`${w}langString`||!((r=s.languageIn)===null||r===void 0)&&r.length)return s.config.theme.createLangStringEditor(s.label,n,t,s);switch((e=s.datatype)===null||e===void 0?void 0:e.value.replace(ne,"")){case"integer":case"float":case"double":case"decimal":return s.config.theme.createNumberEditor(s.label,n,t,s);case"date":case"dateTime":return s.config.theme.createDateEditor(s.label,n,t,s);case"boolean":return s.config.theme.createBooleanEditor(s.label,n,t,s);case"base64Binary":return s.config.theme.createFileEditor(s.label,n,t,s)}return s.config.theme.createTextEditor(s.label,n,t,s)}{if(n)return s.config.theme.createViewer(s.label,n,s);const t=document.createElement("div");return t.innerHTML="No value",t}}function V(s){return!!s&&s.termType==="DefaultGraph"}const re=u.defaultGraph(),{rdf:se,xsd:ee}=$,J=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,le=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,he={"\\":"\\\\",'"':'\\"',"	":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};class fe extends c{equals(n){return n===this}}class ye{constructor(n,o){if(this._prefixRegex=/$0^/,n&&typeof n.write!="function"&&(o=n,n=null),o=o||{},this._lists=o.lists,n)this._outputStream=n,this._endStream=o.end===void 0||!!o.end;else{let r="";this._outputStream={write(e,t,d){r+=e,d&&d()},end:e=>{e&&e(null,r)}},this._endStream=!0}this._subject=null,/triple|quad/i.test(o.format)?(this._lineMode=!0,this._writeQuad=this._writeQuadLine):(this._lineMode=!1,this._graph=re,this._prefixIRIs=Object.create(null),o.prefixes&&this.addPrefixes(o.prefixes),o.baseIRI&&(this._baseMatcher=new RegExp(`^${p(o.baseIRI)}${o.baseIRI.endsWith("/")?"":"[#?]"}`),this._baseLength=o.baseIRI.length))}get _inDefaultGraph(){return re.equals(this._graph)}_write(n,o){this._outputStream.write(n,"utf8",o)}_writeQuad(n,o,r,e,t){try{e.equals(this._graph)||(this._write((this._subject===null?"":this._inDefaultGraph?`.
`:`
}
`)+(re.equals(e)?"":`${this._encodeIriOrBlank(e)} {
`)),this._graph=e,this._subject=null),n.equals(this._subject)?o.equals(this._predicate)?this._write(`, ${this._encodeObject(r)}`,t):this._write(`;
    ${this._encodePredicate(this._predicate=o)} ${this._encodeObject(r)}`,t):this._write(`${(this._subject===null?"":`.
`)+this._encodeSubject(this._subject=n)} ${this._encodePredicate(this._predicate=o)} ${this._encodeObject(r)}`,t)}catch(d){t&&t(d)}}_writeQuadLine(n,o,r,e,t){delete this._prefixMatch,this._write(this.quadToString(n,o,r,e),t)}quadToString(n,o,r,e){return`${this._encodeSubject(n)} ${this._encodeIriOrBlank(o)} ${this._encodeObject(r)}${e&&e.value?` ${this._encodeIriOrBlank(e)} .
`:` .
`}`}quadsToString(n){return n.map(o=>this.quadToString(o.subject,o.predicate,o.object,o.graph)).join("")}_encodeSubject(n){return n.termType==="Quad"?this._encodeQuad(n):this._encodeIriOrBlank(n)}_encodeIriOrBlank(n){if(n.termType!=="NamedNode")return this._lists&&n.value in this._lists&&(n=this.list(this._lists[n.value])),"id"in n?n.id:`_:${n.value}`;let o=n.value;this._baseMatcher&&this._baseMatcher.test(o)&&(o=o.substr(this._baseLength)),J.test(o)&&(o=o.replace(le,l));const r=this._prefixRegex.exec(o);return r?r[1]?this._prefixIRIs[r[1]]+r[2]:o:`<${o}>`}_encodeLiteral(n){let o=n.value;if(J.test(o)&&(o=o.replace(le,l)),n.language)return`"${o}"@${n.language}`;if(this._lineMode){if(n.datatype.value===ee.string)return`"${o}"`}else switch(n.datatype.value){case ee.string:return`"${o}"`;case ee.boolean:if(o==="true"||o==="false")return o;break;case ee.integer:if(/^[+-]?\d+$/.test(o))return o;break;case ee.decimal:if(/^[+-]?\d*\.\d+$/.test(o))return o;break;case ee.double:if(/^[+-]?(?:\d+\.\d*|\.?\d+)[eE][+-]?\d+$/.test(o))return o}return`"${o}"^^${this._encodeIriOrBlank(n.datatype)}`}_encodePredicate(n){return n.value===se.type?"a":this._encodeIriOrBlank(n)}_encodeObject(n){switch(n.termType){case"Quad":return this._encodeQuad(n);case"Literal":return this._encodeLiteral(n);default:return this._encodeIriOrBlank(n)}}_encodeQuad({subject:n,predicate:o,object:r,graph:e}){return`<<${this._encodeSubject(n)} ${this._encodePredicate(o)} ${this._encodeObject(r)}${V(e)?"":` ${this._encodeIriOrBlank(e)}`}>>`}_blockedWrite(){throw new Error("Cannot write because the writer has been closed.")}addQuad(n,o,r,e,t){r===void 0?this._writeQuad(n.subject,n.predicate,n.object,n.graph,o):typeof e=="function"?this._writeQuad(n,o,r,re,e):this._writeQuad(n,o,r,e||re,t)}addQuads(n){for(let o=0;o<n.length;o++)this.addQuad(n[o])}addPrefix(n,o,r){const e={};e[n]=o,this.addPrefixes(e,r)}addPrefixes(n,o){if(!this._prefixIRIs)return o&&o();let r=!1;for(let e in n){let t=n[e];typeof t!="string"&&(t=t.value),r=!0,this._subject!==null&&(this._write(this._inDefaultGraph?`.
`:`
}
`),this._subject=null,this._graph=""),this._prefixIRIs[t]=e+=":",this._write(`@prefix ${e} <${t}>.
`)}if(r){let e="",t="";for(const d in this._prefixIRIs)e+=e?`|${d}`:d,t+=(t?"|":"")+this._prefixIRIs[d];e=p(e),this._prefixRegex=new RegExp(`^(?:${t})[^/]*$|^(${e})([_a-zA-Z][\\-_a-zA-Z0-9]*)$`)}this._write(r?`
`:"",o)}blank(n,o){let r,e,t=n;switch(n===void 0?t=[]:n.termType?t=[{predicate:n,object:o}]:"length"in n||(t=[n]),e=t.length){case 0:return new fe("[]");case 1:if(r=t[0],!(r.object instanceof fe))return new fe(`[ ${this._encodePredicate(r.predicate)} ${this._encodeObject(r.object)} ]`);default:let d="[";for(let U=0;U<e;U++)r=t[U],r.predicate.equals(n)?d+=`, ${this._encodeObject(r.object)}`:(d+=`${(U?`;
  `:`
  `)+this._encodePredicate(r.predicate)} ${this._encodeObject(r.object)}`,n=r.predicate);return new fe(`${d}
]`)}}list(n){const o=n&&n.length||0,r=new Array(o);for(let e=0;e<o;e++)r[e]=this._encodeObject(n[e]);return new fe(`(${r.join(" ")})`)}end(n){this._subject!==null&&(this._write(this._inDefaultGraph?`.
`:`
}
`),this._subject=null),this._write=this._blockedWrite;let o=n&&((r,e)=>{o=null,n(r,e)});if(this._endStream)try{return this._outputStream.end(o)}catch{}o&&o()}}function l(s){let n=he[s];return n===void 0&&(s.length===1?(n=s.charCodeAt(0).toString(16),n="\\u0000".substr(0,6-n.length)+n):(n=(1024*(s.charCodeAt(0)-55296)+s.charCodeAt(1)+9216).toString(16),n="\\U00000000".substr(0,10-n.length)+n)),n}function p(s){return s.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&")}function _(s){let n=s.shaclDatatype,o=s.value;return o?s.dataset.class||s.dataset.nodeKind===F+"IRI"?u.namedNode(o):(s.dataset.lang?n=s.dataset.lang:s.type==="number"?o=parseFloat(o):s.type==="file"&&s.binaryData&&(o=s.binaryData),u.literal(o,n)):s.type!=="checkbox"&&s.getAttribute("type")!=="checkbox"||!(s.checked||parseInt(s.dataset.minCount||"0")>0)?void 0:u.literal(s.checked?"true":"false",n)}const ae={};function v(s){s.predicate===void 0&&s.datatype===void 0?console.warn('not registering plugin because it does neither define "predicate" nor "datatype"',s):ae[`${s.predicate}^${s.datatype}`]=s}class I{constructor(n,o){this.predicate=n.predicate,this.datatype=n.datatype,o&&(this.stylesheet=new CSSStyleSheet,this.stylesheet.replaceSync(o))}createViewer(n,o){return n.config.theme.createViewer(n.label,o,n)}}class ie extends HTMLElement{constructor(n,o,r,e){var t;if(super(),this.template=new ge(o.shapesGraph.getQuads(n,null,null,M),r,o),this.dataset.nodeId=this.template.nodeId.id,this.template.order!==void 0&&(this.style.order=`${this.template.order}`),o.editMode&&(this.addButton=document.createElement("a"),this.addButton.innerText=this.template.label,this.addButton.title="Add "+this.template.label,this.addButton.classList.add("control-button","add-button"),this.addButton.addEventListener("click",d=>{const U=this.addPropertyInstance();U.classList.add("fadeIn"),this.updateControls(),function(a){var oe;(oe=a.querySelector("input,select,textarea"))===null||oe===void 0||oe.focus()}(U),setTimeout(()=>{U.classList.remove("fadeIn")},200)}),this.appendChild(this.addButton)),this.template.path){const d=e?o.dataGraph.getQuads(e,this.template.path,null,null):[];let U=!1;for(const a of d)this.addPropertyInstance(a.object),this.template.hasValue&&a.object.equals(this.template.hasValue)&&(U=!0);o.editMode&&this.template.hasValue&&!U&&this.addPropertyInstance(this.template.hasValue)}if(o.editMode&&(this.addEventListener("change",()=>{this.updateControls()}),this.updateControls()),((t=this.template.extendedShapes)===null||t===void 0?void 0:t.length)&&this.template.config.attributes.collapse!==null&&(!this.template.maxCount||this.template.maxCount>1)&&(o.editMode||this.childElementCount>0)){const d=this;d.classList.add("collapsible"),this.template.config.attributes.collapse==="open"&&d.classList.add("open");const U=document.createElement("h1");U.classList.add("activator"),U.innerText=this.template.label,U.addEventListener("click",()=>{d.classList.toggle("open")}),this.prepend(U)}}addPropertyInstance(n){var o;let r;return!((o=this.template.shaclOr)===null||o===void 0)&&o.length?n?r=$e(function(e,t){if(!e.shaclOr)return console.warn("can't resolve sh:or because template has no options",e),e;if(t instanceof C){const d=t.datatype;for(const U of e.shaclOr){const a=e.config.shapesGraph.getQuads(U,null,null,M);for(const oe of a)if(oe.predicate.value===`${F}datatype`&&oe.object.equals(d))return e.clone().merge(a)}}else{let d=e.config.dataGraph.getObjects(t,D,null);if(d.push(...e.config.shapesGraph.getObjects(t,D,M)),d.length>0)for(const U of e.shaclOr){const a=e.config.shapesGraph.getQuads(U,null,null,M);for(const oe of a){if(oe.predicate.value===`${F}node`){for(const H of d)if(e.config.shapesGraph.has(new q(oe.object,G,H,M)))return e.clone().merge(a)}if(oe.predicate.equals(k)){for(const H of d)if(oe.object.equals(H))return e.clone().merge(a)}}}}return console.error("couldn't resolve sh:or for value",t),e}(this.template,n),n,!0):(r=ue(this.template.shaclOr,this,this.template.config),we(r,"")):r=$e(this.template,n),this.template.config.editMode?this.insertBefore(r,this.addButton):this.appendChild(r),r}updateControls(){var n;let o,r=this.querySelectorAll(":scope > .property-instance, :scope > .shacl-or-constraint, :scope > shacl-node").length;r===0&&(!(!((n=this.template.extendedShapes)===null||n===void 0)&&n.length)||this.template.minCount!==void 0&&this.template.minCount>0)&&(this.addPropertyInstance(),r=this.querySelectorAll(":scope > .property-instance, :scope > .shacl-or-constraint, :scope > shacl-node").length),o=this.template.minCount!==void 0?r>this.template.minCount:this.template.extendedShapes&&this.template.extendedShapes.length>0||r>1;const e=this.template.maxCount===void 0||r<this.template.maxCount;this.classList.toggle("may-remove",o),this.classList.toggle("may-add",e)}toRDF(n,o){for(const r of this.querySelectorAll(":scope > .property-instance")){const e=u.namedNode(r.dataset.path);if(r.firstChild instanceof ze){const t=n.size,d=r.firstChild.toRDF(n);n.size>t&&n.addQuad(o,e,d)}else{const t=_(r.querySelector(".editor"));t&&n.addQuad(o,e,t)}}}}function $e(s,n,o=!1){var r,e;let t;if(!((r=s.extendedShapes)===null||r===void 0)&&r.length){t=document.createElement("div"),t.classList.add("property-instance");for(const d of s.extendedShapes)t.appendChild(new ze(d,s.config,n,s.nodeKind,s.label))}else{const d=function(U,a){let oe=ae[`${U}^${a}`];return oe||(oe=ae[`${U}^undefined`],oe||ae[`undefined^${a}`])}(s.path,(e=s.datatype)===null||e===void 0?void 0:e.value);t=d?s.config.editMode?d.createEditor(s,n):d.createViewer(s,n):X(s,n||null),t.classList.add("property-instance")}return s.config.editMode&&we(t,s.label,o),t.dataset.path=s.path,t}function we(s,n,o=!1){const r=document.createElement("a");r.innerText="×",r.classList.add("control-button","btn","remove-button"),r.title="Remove "+n,r.addEventListener("click",e=>{s.classList.remove("fadeIn"),s.classList.add("fadeOut"),setTimeout(()=>{const t=s.parentElement;s.remove(),t==null||t.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}))},200)}),o&&r.classList.add("persistent"),s.appendChild(r)}function _e(s,n){const o=document.createElement("div");o.dataset.subject=s,o.classList.add("shacl-group");let r=s;const e=n.shapesGraph.getQuads(s,null,null,M),t=A(e,"label",x,n.attributes.language);t&&(r=t);const d=A(e,"order");d&&(o.style.order=d);const U=document.createElement("h1");return U.innerText=r,o.appendChild(U),n.attributes.collapse!==null&&(o.classList.add("collapsible"),n.attributes.collapse==="open"&&o.classList.add("open"),U.classList.add("activator"),U.addEventListener("click",()=>{o.classList.toggle("open")})),o}window.customElements.define("shacl-property",ie);const Ce={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let Ie;const Ke=new Uint8Array(16);function Fe(){if(!Ie&&(Ie=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Ie))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Ie(Ke)}const Ae=[];for(let s=0;s<256;++s)Ae.push((s+256).toString(16).slice(1));const ot=function(s,n,o){if(Ce.randomUUID&&!n&&!s)return Ce.randomUUID();const r=(s=s||{}).random||(s.rng||Fe)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,n){o=o||0;for(let e=0;e<16;++e)n[o+e]=r[e];return n}return function(e,t=0){return Ae[e[t+0]]+Ae[e[t+1]]+Ae[e[t+2]]+Ae[e[t+3]]+"-"+Ae[e[t+4]]+Ae[e[t+5]]+"-"+Ae[e[t+6]]+Ae[e[t+7]]+"-"+Ae[e[t+8]]+Ae[e[t+9]]+"-"+Ae[e[t+10]]+Ae[e[t+11]]+Ae[e[t+12]]+Ae[e[t+13]]+Ae[e[t+14]]+Ae[e[t+15]]}(r)};class ze extends HTMLElement{constructor(n,o,r,e,t){super(),this.config=o,this.shaclSubject=n;let d=r;if(!d){if(!e){const oe=o.shapesGraph.getObjects(n,`${F}nodeKind`,M);oe.length&&(e=oe[0])}d=e===void 0&&o.attributes.valuesNamespace||(e==null?void 0:e.id)===`${F}IRI`?u.namedNode(o.attributes.valuesNamespace+ot()):u.blankNode(ot())}this.nodeId=d,this.dataset.nodeId=this.nodeId.id;const U=o.shapesGraph.getQuads(n,null,null,M);let a;for(const oe of U)switch(oe.predicate.id){case`${F}property`:let H=this;const be=o.shapesGraph.getQuads(oe.object,`${F}group`,null,M);if(be.length>0){const Ee=be[0].object.value;if(o.groups.indexOf(Ee)>-1){let xe=this.querySelector(`:scope > .shacl-group[data-subject='${Ee}']`);xe||(xe=_e(Ee,o),this.appendChild(xe)),H=xe}else console.warn("ignoring unknown group reference",be[0])}const R=new ie(oe.object,o,this.nodeId,r);R.childElementCount>0&&H.appendChild(R);break;case`${F}and`:if(a=o.lists[oe.object.value],a==null?void 0:a.length)for(const Ee of a)this.prepend(new ze(Ee,o,r));else console.error("list not found:",oe.object.value,"existing lists:",o.lists);break;case`${F}node`:this.prepend(new ze(oe.object,o,r));break;case`${F}targetClass`:this.targetClass=oe.object;break;case`${F}or`:a=o.lists[oe.object.value],a!=null&&a.length?this.appendChild(ue(a,this,o)):console.error("list not found:",oe.object.value,"existing lists:",o.lists)}if(t){const oe=document.createElement("h1");oe.innerText=t,this.prepend(oe)}}toRDF(n,o){o||(o=this.nodeId);for(const r of this.querySelectorAll(":scope > shacl-node, :scope > .shacl-group > shacl-node, :scope > shacl-property, :scope > .shacl-group > shacl-property"))r.toRDF(n,o);return this.targetClass&&n.addQuad(o,D,this.targetClass),this.closest("shacl-node shacl-node")||n.addQuad(o,D,this.shaclSubject),o}}window.customElements.define("shacl-node",ze);var Ye=De(9198);class ke{constructor(n,o){this._size=0,this._graphs=Object.create(null),this._id=0,this._ids=Object.create(null),this._entities=Object.create(null),this._blankNodeIndex=0,o||!n||n[0]||(o=n,n=null),o=o||{},this._factory=o.factory||u,n&&this.addQuads(n)}_termFromId(n,o){if(n[0]==="."){const r=this._entities,e=n.split(".");return this._factory.quad(this._termFromId(r[e[1]]),this._termFromId(r[e[2]]),this._termFromId(r[e[3]]),e[4]&&this._termFromId(r[e[4]]))}return P(n,o)}_termToNumericId(n){if(n.termType==="Quad"){const o=this._termToNumericId(n.subject),r=this._termToNumericId(n.predicate),e=this._termToNumericId(n.object);let t;return o&&r&&e&&(V(n.graph)||(t=this._termToNumericId(n.graph)))&&this._ids[t?`.${o}.${r}.${e}.${t}`:`.${o}.${r}.${e}`]}return this._ids[b(n)]}_termToNewNumericId(n){const o=n&&n.termType==="Quad"?`.${this._termToNewNumericId(n.subject)}.${this._termToNewNumericId(n.predicate)}.${this._termToNewNumericId(n.object)}${V(n.graph)?"":`.${this._termToNewNumericId(n.graph)}`}`:b(n);return this._ids[o]||(this._ids[this._entities[++this._id]=o]=this._id)}get size(){let n=this._size;if(n!==null)return n;n=0;const o=this._graphs;let r,e;for(const t in o)for(const d in r=o[t].subjects)for(const U in e=r[d])n+=Object.keys(e[U]).length;return this._size=n}_addToIndex(n,o,r,e){const t=n[o]||(n[o]={}),d=t[r]||(t[r]={}),U=e in d;return U||(d[e]=null),!U}_removeFromIndex(n,o,r,e){const t=n[o],d=t[r];delete d[e];for(const U in d)return;delete t[r];for(const U in t)return;delete n[o]}*_findInIndex(n,o,r,e,t,d,U,a){let oe,H,be;const R=this._entities,Ee=this._termFromId(a,this._factory),xe={subject:null,predicate:null,object:null};o&&((oe=n,n={})[o]=oe[o]);for(const Re in n)if(H=n[Re]){xe[t]=this._termFromId(R[Re],this._factory),r&&((oe=H,H={})[r]=oe[r]);for(const Le in H)if(be=H[Le]){xe[d]=this._termFromId(R[Le],this._factory);const Oe=e?e in be?[e]:[]:Object.keys(be);for(let We=0;We<Oe.length;We++)xe[U]=this._termFromId(R[Oe[We]],this._factory),yield this._factory.quad(xe.subject,xe.predicate,xe.object,Ee)}}}_loop(n,o){for(const r in n)o(r)}_loopByKey0(n,o,r){let e,t;if(e=n[o])for(t in e)r(t)}_loopByKey1(n,o,r){let e,t;for(e in n)t=n[e],t[o]&&r(e)}_loopBy2Keys(n,o,r,e){let t,d,U;if((t=n[o])&&(d=t[r]))for(U in d)e(U)}_countInIndex(n,o,r,e){let t,d,U,a=0;o&&((t=n,n={})[o]=t[o]);for(const oe in n)if(d=n[oe]){r&&((t=d,d={})[r]=t[r]);for(const H in d)(U=d[H])&&(e?e in U&&a++:a+=Object.keys(U).length)}return a}_getGraphs(n){if(!(typeof(o=n)=="string"||o instanceof String))return this._graphs;var o;const r={};return r[n]=this._graphs[n],r}_uniqueEntities(n){const o=Object.create(null);return r=>{r in o||(o[r]=!0,n(this._termFromId(this._entities[r],this._factory)))}}add(n){return this.addQuad(n),this}addQuad(n,o,r,e){o||(e=n.graph,r=n.object,o=n.predicate,n=n.subject),e=b(e);let t=this._graphs[e];t||(t=this._graphs[e]={subjects:{},predicates:{},objects:{}},Object.freeze(t)),n=this._termToNewNumericId(n),o=this._termToNewNumericId(o),r=this._termToNewNumericId(r);const d=this._addToIndex(t.subjects,n,o,r);return this._addToIndex(t.predicates,o,r,n),this._addToIndex(t.objects,r,n,o),this._size=null,d}addQuads(n){for(let o=0;o<n.length;o++)this.addQuad(n[o])}delete(n){return this.removeQuad(n),this}has(n,o,r,e){return n&&n.subject&&({subject:n,predicate:o,object:r,graph:e}=n),!this.readQuads(n,o,r,e).next().done}import(n){return n.on("data",o=>{this.addQuad(o)}),n}removeQuad(n,o,r,e){o||(e=n.graph,r=n.object,o=n.predicate,n=n.subject),e=b(e);const t=this._graphs;let d,U,a;if(!((n=n&&this._termToNumericId(n))&&(o=o&&this._termToNumericId(o))&&(r=r&&this._termToNumericId(r))&&(d=t[e])&&(U=d.subjects[n])&&(a=U[o])&&r in a))return!1;for(n in this._removeFromIndex(d.subjects,n,o,r),this._removeFromIndex(d.predicates,o,r,n),this._removeFromIndex(d.objects,r,n,o),this._size!==null&&this._size--,d.subjects)return!0;return delete t[e],!0}removeQuads(n){for(let o=0;o<n.length;o++)this.removeQuad(n[o])}remove(n){return n.on("data",o=>{this.removeQuad(o)}),n}removeMatches(n,o,r,e){const t=new Ye.Readable({objectMode:!0});return t._read=()=>{for(const d of this.readQuads(n,o,r,e))t.push(d);t.push(null)},this.remove(t)}deleteGraph(n){return this.removeMatches(null,null,null,n)}getQuads(n,o,r,e){return[...this.readQuads(n,o,r,e)]}*readQuads(n,o,r,e){e=e&&b(e);const t=this._getGraphs(e);let d,U,a,oe;if(!(n&&!(U=this._termToNumericId(n))||o&&!(a=this._termToNumericId(o))||r&&!(oe=this._termToNumericId(r))))for(const H in t)(d=t[H])&&(U?oe?yield*this._findInIndex(d.objects,oe,U,a,"object","subject","predicate",H):yield*this._findInIndex(d.subjects,U,a,null,"subject","predicate","object",H):a?yield*this._findInIndex(d.predicates,a,oe,null,"predicate","object","subject",H):oe?yield*this._findInIndex(d.objects,oe,null,null,"object","subject","predicate",H):yield*this._findInIndex(d.subjects,null,null,null,"subject","predicate","object",H))}match(n,o,r,e){return new Ve(this,n,o,r,e)}countQuads(n,o,r,e){e=e&&b(e);const t=this._getGraphs(e);let d,U,a,oe,H=0;if(n&&!(U=this._termToNumericId(n))||o&&!(a=this._termToNumericId(o))||r&&!(oe=this._termToNumericId(r)))return 0;for(const be in t)(d=t[be])&&(H+=n?r?this._countInIndex(d.objects,oe,U,a):this._countInIndex(d.subjects,U,a,oe):o?this._countInIndex(d.predicates,a,oe,U):this._countInIndex(d.objects,oe,U,a));return H}forEach(n,o,r,e,t){this.some(d=>(n(d),!1),o,r,e,t)}every(n,o,r,e,t){let d=!1;const U=!this.some(a=>(d=!0,!n(a)),o,r,e,t);return d&&U}some(n,o,r,e,t){for(const d of this.readQuads(o,r,e,t))if(n(d))return!0;return!1}getSubjects(n,o,r){const e=[];return this.forSubjects(t=>{e.push(t)},n,o,r),e}forSubjects(n,o,r,e){e=e&&b(e);const t=this._getGraphs(e);let d,U,a;if(n=this._uniqueEntities(n),!(o&&!(U=this._termToNumericId(o))||r&&!(a=this._termToNumericId(r))))for(e in t)(d=t[e])&&(U?a?this._loopBy2Keys(d.predicates,U,a,n):this._loopByKey1(d.subjects,U,n):a?this._loopByKey0(d.objects,a,n):this._loop(d.subjects,n))}getPredicates(n,o,r){const e=[];return this.forPredicates(t=>{e.push(t)},n,o,r),e}forPredicates(n,o,r,e){e=e&&b(e);const t=this._getGraphs(e);let d,U,a;if(n=this._uniqueEntities(n),!(o&&!(U=this._termToNumericId(o))||r&&!(a=this._termToNumericId(r))))for(e in t)(d=t[e])&&(U?a?this._loopBy2Keys(d.objects,a,U,n):this._loopByKey0(d.subjects,U,n):a?this._loopByKey1(d.predicates,a,n):this._loop(d.predicates,n))}getObjects(n,o,r){const e=[];return this.forObjects(t=>{e.push(t)},n,o,r),e}forObjects(n,o,r,e){e=e&&b(e);const t=this._getGraphs(e);let d,U,a;if(n=this._uniqueEntities(n),!(o&&!(U=this._termToNumericId(o))||r&&!(a=this._termToNumericId(r))))for(e in t)(d=t[e])&&(U?a?this._loopBy2Keys(d.subjects,U,a,n):this._loopByKey1(d.objects,U,n):a?this._loopByKey0(d.predicates,a,n):this._loop(d.objects,n))}getGraphs(n,o,r){const e=[];return this.forGraphs(t=>{e.push(t)},n,o,r),e}forGraphs(n,o,r,e){for(const t in this._graphs)this.some(d=>(n(d.graph),!0),o,r,e,t)}createBlankNode(n){let o,r;if(n)for(o=n=`_:${n}`,r=1;this._ids[o];)o=n+r++;else do o="_:b"+this._blankNodeIndex++;while(this._ids[o]);return this._ids[o]=++this._id,this._entities[this._id]=o,this._factory.blankNode(o.substr(2))}extractLists({remove:n=!1,ignoreErrors:o=!1}={}){const r={},e=o?()=>!0:(U,a)=>{throw new Error(`${U.value} ${a}`)},t=this.getQuads(null,$.rdf.rest,$.rdf.nil,null),d=n?[...t]:[];return t.forEach(U=>{const a=[];let oe,H,be=!1;const R=U.graph;let Ee=U.subject;for(;Ee&&!be;){const xe=this.getQuads(null,null,Ee,null),Re=this.getQuads(Ee,null,null,null);let Le,Oe=null,We=null,nt=null;for(let at=0;at<Re.length&&!be;at++)Le=Re[at],Le.graph.equals(R)?oe?be=e(Ee,"has non-list arcs out"):Le.predicate.value===$.rdf.first?Oe?be=e(Ee,"has multiple rdf:first arcs"):d.push(Oe=Le):Le.predicate.value===$.rdf.rest?We?be=e(Ee,"has multiple rdf:rest arcs"):d.push(We=Le):xe.length?be=e(Ee,"can't be subject and object"):(oe=Le,H="subject"):be=e(Ee,"not confined to single graph");for(let at=0;at<xe.length&&!be;++at)Le=xe[at],oe?be=e(Ee,"can't have coreferences"):Le.predicate.value===$.rdf.rest?nt?be=e(Ee,"has incoming rdf:rest arcs"):nt=Le:(oe=Le,H="object");Oe?a.unshift(Oe.object):be=e(Ee,"has no list head"),Ee=nt&&nt.subject}be?n=!1:oe&&(r[oe[H].value]=a)}),n&&this.removeQuads(d),r}*[Symbol.iterator](){yield*this.readQuads()}}class Ve extends Ye.Readable{constructor(n,o,r,e,t){super({objectMode:!0}),Object.assign(this,{n3Store:n,subject:o,predicate:r,object:e,graph:t})}get filtered(){if(!this._filtered){const{n3Store:n,graph:o,object:r,predicate:e,subject:t}=this,d=this._filtered=new ke({factory:n._factory});for(const U of n.readQuads(t,e,r,o))d.addQuad(U)}return this._filtered}get size(){return this.filtered.size}_read(){for(const n of this)this.push(n);this.push(null)}add(n){return this.filtered.add(n)}delete(n){return this.filtered.delete(n)}has(n){return this.filtered.has(n)}match(n,o,r,e){return new Ve(this.filtered,n,o,r,e)}*[Symbol.iterator](){yield*this._filtered||this.n3Store.readQuads(this.subject,this.predicate,this.object,this.graph)}}var Ge=De(9596),Dn=De.n(Ge);const{xsd:lt}=$,Mn=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\([^])/g,zt={"\\":"\\","'":"'",'"':'"',n:`
`,r:"\r",t:"	",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"},Bn=/[\x00-\x20<>\\"\{\}\|\^\`]/,Fn={_iri:!0,_unescapedIri:!0,_simpleQuotedString:!0,_langcode:!0,_blank:!0,_newline:!0,_comment:!0,_whitespace:!0,_endOfFile:!0},Vn=/$0^/;class Qn{constructor(n){if(this._iri=/^<((?:[^ <>{}\\]|\\[uU])+)>[ \t]*/,this._unescapedIri=/^<([^\x00-\x20<>\\"\{\}\|\^\`]*)>[ \t]*/,this._simpleQuotedString=/^"([^"\\\r\n]*)"(?=[^"])/,this._simpleApostropheString=/^'([^'\\\r\n]*)'(?=[^'])/,this._langcode=/^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\-])/i,this._prefix=/^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:(?=[#\s<])/,this._prefixed=/^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:((?:(?:[0-:A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])(?:(?:[\.\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])*(?:[\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~]))?)?)(?:[ \t]+|(?=\.?[,;!\^\s#()\[\]\{\}"'<>]))/,this._variable=/^\?(?:(?:[A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:[\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)(?=[.,;!\^\s#()\[\]\{\}"'<>])/,this._blank=/^_:((?:[0-9A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)(?:[ \t]+|(?=\.?[,;:\s#()\[\]\{\}"'<>]))/,this._number=/^[\-+]?(?:(\d+\.\d*|\.?\d+)[eE][\-+]?|\d*(\.)?)\d+(?=\.?[,;:\s#()\[\]\{\}"'<>])/,this._boolean=/^(?:true|false)(?=[.,;\s#()\[\]\{\}"'<>])/,this._keyword=/^@[a-z]+(?=[\s#<:])/i,this._sparqlKeyword=/^(?:PREFIX|BASE|GRAPH)(?=[\s#<])/i,this._shortPredicates=/^a(?=[\s#()\[\]\{\}"'<>])/,this._newline=/^[ \t]*(?:#[^\n\r]*)?(?:\r\n|\n|\r)[ \t]*/,this._comment=/#([^\n\r]*)/,this._whitespace=/^[ \t]+/,this._endOfFile=/^(?:#[^\n\r]*)?$/,n=n||{},this._lineMode=!!n.lineMode){this._n3Mode=!1;for(const o in this)!(o in Fn)&&this[o]instanceof RegExp&&(this[o]=Vn)}else this._n3Mode=n.n3!==!1;this._comments=!!n.comments,this._literalClosingPos=0}_tokenizeToEnd(n,o){let r=this._input,e=r.length;for(;;){let U,a;for(;U=this._newline.exec(r);)this._comments&&(a=this._comment.exec(U[0]))&&t("comment",a[1],"",this._line,U[0].length),r=r.substr(U[0].length,r.length),e=r.length,this._line++;if(!U&&(U=this._whitespace.exec(r))&&(r=r.substr(U[0].length,r.length)),this._endOfFile.test(r))return o&&(this._comments&&(a=this._comment.exec(r))&&t("comment",a[1],"",this._line,r.length),r=null,t("eof","","",this._line,0)),this._input=r;const oe=this._line,H=r[0];let be="",R="",Ee="",xe=null,Re=0,Le=!1;switch(H){case"^":if(r.length<3)break;if(r[1]!=="^"){this._n3Mode&&(Re=1,be="^");break}if(this._previousMarker="^^",r=r.substr(2),r[0]!=="<"){Le=!0;break}case"<":if(xe=this._unescapedIri.exec(r))be="IRI",R=xe[1];else if(xe=this._iri.exec(r)){if(R=this._unescape(xe[1]),R===null||Bn.test(R))return d(this);be="IRI"}else r.length>1&&r[1]==="<"?(be="<<",Re=2):this._n3Mode&&r.length>1&&r[1]==="="&&(be="inverse",Re=2,R=">");break;case">":r.length>1&&r[1]===">"&&(be=">>",Re=2);break;case"_":((xe=this._blank.exec(r))||o&&(xe=this._blank.exec(`${r} `)))&&(be="blank",Ee="_",R=xe[1]);break;case'"':if(xe=this._simpleQuotedString.exec(r))R=xe[1];else if({value:R,matchLength:Re}=this._parseLiteral(r),R===null)return d(this);xe===null&&Re===0||(be="literal",this._literalClosingPos=0);break;case"'":if(!this._lineMode){if(xe=this._simpleApostropheString.exec(r))R=xe[1];else if({value:R,matchLength:Re}=this._parseLiteral(r),R===null)return d(this);xe===null&&Re===0||(be="literal",this._literalClosingPos=0)}break;case"?":this._n3Mode&&(xe=this._variable.exec(r))&&(be="var",R=xe[0]);break;case"@":this._previousMarker==="literal"&&(xe=this._langcode.exec(r))?(be="langcode",R=xe[1]):(xe=this._keyword.exec(r))&&(be=xe[0]);break;case".":if(r.length===1?o:r[1]<"0"||r[1]>"9"){be=".",Re=1;break}case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case"+":case"-":(xe=this._number.exec(r)||o&&(xe=this._number.exec(`${r} `)))&&(be="literal",R=xe[0],Ee=typeof xe[1]=="string"?lt.double:typeof xe[2]=="string"?lt.decimal:lt.integer);break;case"B":case"b":case"p":case"P":case"G":case"g":(xe=this._sparqlKeyword.exec(r))?be=xe[0].toUpperCase():Le=!0;break;case"f":case"t":(xe=this._boolean.exec(r))?(be="literal",R=xe[0],Ee=lt.boolean):Le=!0;break;case"a":(xe=this._shortPredicates.exec(r))?(be="abbreviation",R="a"):Le=!0;break;case"=":this._n3Mode&&r.length>1&&(be="abbreviation",r[1]!==">"?(Re=1,R="="):(Re=2,R=">"));break;case"!":if(!this._n3Mode)break;case",":case";":case"[":case"]":case"(":case")":case"}":this._lineMode||(Re=1,be=H);break;case"{":!this._lineMode&&r.length>=2&&(r[1]==="|"?(be="{|",Re=2):(be=H,Re=1));break;case"|":r.length>=2&&r[1]==="}"&&(be="|}",Re=2);break;default:Le=!0}if(Le&&(this._previousMarker!=="@prefix"&&this._previousMarker!=="PREFIX"||!(xe=this._prefix.exec(r))?((xe=this._prefixed.exec(r))||o&&(xe=this._prefixed.exec(`${r} `)))&&(be="prefixed",Ee=xe[1]||"",R=this._unescape(xe[2])):(be="prefix",R=xe[1]||"")),this._previousMarker==="^^")switch(be){case"prefixed":be="type";break;case"IRI":be="typeIRI";break;default:be=""}if(!be)return o||!/^'''|^"""/.test(r)&&/\n|\r/.test(r)?d(this):this._input=r;const Oe=Re||xe[0].length,We=t(be,R,Ee,oe,Oe);this.previousToken=We,this._previousMarker=be,r=r.substr(Oe,r.length)}function t(U,a,oe,H,be){const R=r?e-r.length:e,Ee={type:U,value:a,prefix:oe,line:H,start:R,end:R+be};return n(null,Ee),Ee}function d(U){n(U._syntaxError(/^\S*/.exec(r)[0]))}}_unescape(n){let o=!1;const r=n.replace(Mn,(e,t,d,U)=>{if(typeof t=="string")return String.fromCharCode(Number.parseInt(t,16));if(typeof d=="string"){let a=Number.parseInt(d,16);return a<=65535?String.fromCharCode(Number.parseInt(d,16)):String.fromCharCode(55296+((a-=65536)>>10),56320+(1023&a))}return U in zt?zt[U]:(o=!0,"")});return o?null:r}_parseLiteral(n){if(n.length>=3){const o=n.match(/^(?:"""|"|'''|'|)/)[0],r=o.length;let e=Math.max(this._literalClosingPos,r);for(;(e=n.indexOf(o,e))>0;){let t=0;for(;n[e-t-1]==="\\";)t++;if(t%2==0){const d=n.substring(r,e),U=d.split(/\r\n|\r|\n/).length-1,a=e+r;if(r===1&&U!==0||r===3&&this._lineMode)break;return this._line+=U,{value:this._unescape(d),matchLength:a}}e++}this._literalClosingPos=n.length-r+1}return{value:"",matchLength:0}}_syntaxError(n){this._input=null;const o=new Error(`Unexpected "${n}" on line ${this._line}.`);return o.context={token:void 0,line:this._line,previousToken:this.previousToken},o}_readStartingBom(n){return n.startsWith("\uFEFF")?n.substr(1):n}tokenize(n,o){if(this._line=1,typeof n=="string"){if(this._input=this._readStartingBom(n),typeof o!="function"){const r=[];let e;if(this._tokenizeToEnd((t,d)=>t?e=t:r.push(d),!0),e)throw e;return r}Dn()(()=>this._tokenizeToEnd(o,!0))}else this._pendingBuffer=null,typeof n.setEncoding=="function"&&n.setEncoding("utf8"),n.on("data",r=>{this._input!==null&&r.length!==0&&(this._pendingBuffer&&(r=Ua.concat([this._pendingBuffer,r]),this._pendingBuffer=null),128&r[r.length-1]?this._pendingBuffer=r:(this._input===void 0?this._input=this._readStartingBom(typeof r=="string"?r:r.toString()):this._input+=r,this._tokenizeToEnd(o,!1)))}),n.on("end",()=>{typeof this._input=="string"&&this._tokenizeToEnd(o,!0)}),n.on("error",o)}}let Wt=0;class gt{constructor(n){this._contextStack=[],this._graph=null,n=n||{},this._setBase(n.baseIRI),n.factory&&Kt(this,n.factory);const o=typeof n.format=="string"?n.format.match(/\w*$/)[0].toLowerCase():"",r=/turtle/.test(o),e=/trig/.test(o),t=/triple/.test(o),d=/quad/.test(o),U=this._n3Mode=/n3/.test(o),a=t||d;(this._supportsNamedGraphs=!(r||U))||(this._readPredicateOrNamedGraph=this._readPredicate),this._supportsQuads=!(r||e||t||U),this._supportsRDFStar=o===""||/star|\*$/.test(o),a&&(this._resolveRelativeIRI=oe=>null),this._blankNodePrefix=typeof n.blankNodePrefix!="string"?"":n.blankNodePrefix.replace(/^(?!_:)/,"_:"),this._lexer=n.lexer||new Qn({lineMode:a,n3:U}),this._explicitQuantifiers=!!n.explicitQuantifiers}static _resetBlankNodePrefix(){Wt=0}_setBase(n){if(n){const o=n.indexOf("#");o>=0&&(n=n.substr(0,o)),this._base=n,this._basePath=n.indexOf("/")<0?n:n.replace(/[^\/?]*(?:\?.*)?$/,""),n=n.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i),this._baseRoot=n[0],this._baseScheme=n[1]}else this._base="",this._basePath=""}_saveContext(n,o,r,e,t){const d=this._n3Mode;this._contextStack.push({type:n,subject:r,predicate:e,object:t,graph:o,inverse:!!d&&this._inversePredicate,blankPrefix:d?this._prefixes._:"",quantified:d?this._quantified:null}),d&&(this._inversePredicate=!1,this._prefixes._=this._graph?`${this._graph.value}.`:".",this._quantified=Object.create(this._quantified))}_restoreContext(n,o){const r=this._contextStack.pop();if(!r||r.type!==n)return this._error(`Unexpected ${o.type}`,o);this._subject=r.subject,this._predicate=r.predicate,this._object=r.object,this._graph=r.graph,this._n3Mode&&(this._inversePredicate=r.inverse,this._prefixes._=r.blankPrefix,this._quantified=r.quantified)}_readInTopContext(n){switch(n.type){case"eof":return this._graph!==null?this._error("Unclosed graph",n):(delete this._prefixes._,this._callback(null,null,this._prefixes));case"PREFIX":this._sparqlStyle=!0;case"@prefix":return this._readPrefix;case"BASE":this._sparqlStyle=!0;case"@base":return this._readBaseIRI;case"{":if(this._supportsNamedGraphs)return this._graph="",this._subject=null,this._readSubject;case"GRAPH":if(this._supportsNamedGraphs)return this._readNamedGraphLabel;default:return this._readSubject(n)}}_readEntity(n,o){let r;switch(n.type){case"IRI":case"typeIRI":const e=this._resolveIRI(n.value);if(e===null)return this._error("Invalid IRI",n);r=this._namedNode(e);break;case"type":case"prefixed":const t=this._prefixes[n.prefix];if(t===void 0)return this._error(`Undefined prefix "${n.prefix}:"`,n);r=this._namedNode(t+n.value);break;case"blank":r=this._blankNode(this._prefixes[n.prefix]+n.value);break;case"var":r=this._variable(n.value.substr(1));break;default:return this._error(`Expected entity but got ${n.type}`,n)}return!o&&this._n3Mode&&r.id in this._quantified&&(r=this._quantified[r.id]),r}_readSubject(n){switch(this._predicate=null,n.type){case"[":return this._saveContext("blank",this._graph,this._subject=this._blankNode(),null,null),this._readBlankNodeHead;case"(":return this._saveContext("list",this._graph,this.RDF_NIL,null,null),this._subject=null,this._readListItem;case"{":return this._n3Mode?(this._saveContext("formula",this._graph,this._graph=this._blankNode(),null,null),this._readSubject):this._error("Unexpected graph",n);case"}":return this._readPunctuation(n);case"@forSome":return this._n3Mode?(this._subject=null,this._predicate=this.N3_FORSOME,this._quantifier=this._blankNode,this._readQuantifierList):this._error('Unexpected "@forSome"',n);case"@forAll":return this._n3Mode?(this._subject=null,this._predicate=this.N3_FORALL,this._quantifier=this._variable,this._readQuantifierList):this._error('Unexpected "@forAll"',n);case"literal":if(!this._n3Mode)return this._error("Unexpected literal",n);if(n.prefix.length===0)return this._literalValue=n.value,this._completeSubjectLiteral;this._subject=this._literal(n.value,this._namedNode(n.prefix));break;case"<<":return this._supportsRDFStar?(this._saveContext("<<",this._graph,null,null,null),this._graph=null,this._readSubject):this._error("Unexpected RDF* syntax",n);default:if((this._subject=this._readEntity(n))===void 0)return;if(this._n3Mode)return this._getPathReader(this._readPredicateOrNamedGraph)}return this._readPredicateOrNamedGraph}_readPredicate(n){const o=n.type;switch(o){case"inverse":this._inversePredicate=!0;case"abbreviation":this._predicate=this.ABBREVIATIONS[n.value];break;case".":case"]":case"}":return this._predicate===null?this._error(`Unexpected ${o}`,n):(this._subject=null,o==="]"?this._readBlankNodeTail(n):this._readPunctuation(n));case";":return this._predicate!==null?this._readPredicate:this._error("Expected predicate but got ;",n);case"[":if(this._n3Mode)return this._saveContext("blank",this._graph,this._subject,this._subject=this._blankNode(),null),this._readBlankNodeHead;case"blank":if(!this._n3Mode)return this._error("Disallowed blank node as predicate",n);default:if((this._predicate=this._readEntity(n))===void 0)return}return this._readObject}_readObject(n){switch(n.type){case"literal":if(n.prefix.length===0)return this._literalValue=n.value,this._readDataTypeOrLang;this._object=this._literal(n.value,this._namedNode(n.prefix));break;case"[":return this._saveContext("blank",this._graph,this._subject,this._predicate,this._subject=this._blankNode()),this._readBlankNodeHead;case"(":return this._saveContext("list",this._graph,this._subject,this._predicate,this.RDF_NIL),this._subject=null,this._readListItem;case"{":return this._n3Mode?(this._saveContext("formula",this._graph,this._subject,this._predicate,this._graph=this._blankNode()),this._readSubject):this._error("Unexpected graph",n);case"<<":return this._supportsRDFStar?(this._saveContext("<<",this._graph,this._subject,this._predicate,null),this._graph=null,this._readSubject):this._error("Unexpected RDF* syntax",n);default:if((this._object=this._readEntity(n))===void 0)return;if(this._n3Mode)return this._getPathReader(this._getContextEndReader())}return this._getContextEndReader()}_readPredicateOrNamedGraph(n){return n.type==="{"?this._readGraph(n):this._readPredicate(n)}_readGraph(n){return n.type!=="{"?this._error(`Expected graph but got ${n.type}`,n):(this._graph=this._subject,this._subject=null,this._readSubject)}_readBlankNodeHead(n){return n.type==="]"?(this._subject=null,this._readBlankNodeTail(n)):(this._predicate=null,this._readPredicate(n))}_readBlankNodeTail(n){if(n.type!=="]")return this._readBlankNodePunctuation(n);this._subject!==null&&this._emit(this._subject,this._predicate,this._object,this._graph);const o=this._predicate===null;return this._restoreContext("blank",n),this._object!==null?this._getContextEndReader():this._predicate!==null?this._readObject:o?this._readPredicateOrNamedGraph:this._readPredicateAfterBlank}_readPredicateAfterBlank(n){switch(n.type){case".":case"}":return this._subject=null,this._readPunctuation(n);default:return this._readPredicate(n)}}_readListItem(n){let o=null,r=null,e=this._readListItem;const t=this._subject,d=this._contextStack,U=d[d.length-1];switch(n.type){case"[":this._saveContext("blank",this._graph,r=this._blankNode(),this.RDF_FIRST,this._subject=o=this._blankNode()),e=this._readBlankNodeHead;break;case"(":this._saveContext("list",this._graph,r=this._blankNode(),this.RDF_FIRST,this.RDF_NIL),this._subject=null;break;case")":if(this._restoreContext("list",n),d.length!==0&&d[d.length-1].type==="list"&&this._emit(this._subject,this._predicate,this._object,this._graph),this._predicate===null){if(e=this._readPredicate,this._subject===this.RDF_NIL)return e}else if(e=this._getContextEndReader(),this._object===this.RDF_NIL)return e;r=this.RDF_NIL;break;case"literal":n.prefix.length===0?(this._literalValue=n.value,e=this._readListItemDataTypeOrLang):(o=this._literal(n.value,this._namedNode(n.prefix)),e=this._getContextEndReader());break;case"{":return this._n3Mode?(this._saveContext("formula",this._graph,this._subject,this._predicate,this._graph=this._blankNode()),this._readSubject):this._error("Unexpected graph",n);default:if((o=this._readEntity(n))===void 0)return}if(r===null&&(this._subject=r=this._blankNode()),t===null?U.predicate===null?U.subject=r:U.object=r:this._emit(t,this.RDF_REST,r,this._graph),o!==null){if(this._n3Mode&&(n.type==="IRI"||n.type==="prefixed"))return this._saveContext("item",this._graph,r,this.RDF_FIRST,o),this._subject=o,this._predicate=null,this._getPathReader(this._readListItem);this._emit(r,this.RDF_FIRST,o,this._graph)}return e}_readDataTypeOrLang(n){return this._completeObjectLiteral(n,!1)}_readListItemDataTypeOrLang(n){return this._completeObjectLiteral(n,!0)}_completeLiteral(n){let o=this._literal(this._literalValue);switch(n.type){case"type":case"typeIRI":const r=this._readEntity(n);if(r===void 0)return;o=this._literal(this._literalValue,r),n=null;break;case"langcode":o=this._literal(this._literalValue,n.value),n=null}return{token:n,literal:o}}_completeSubjectLiteral(n){return this._subject=this._completeLiteral(n).literal,this._readPredicateOrNamedGraph}_completeObjectLiteral(n,o){const r=this._completeLiteral(n);if(r)return this._object=r.literal,o&&this._emit(this._subject,this.RDF_FIRST,this._object,this._graph),r.token===null?this._getContextEndReader():(this._readCallback=this._getContextEndReader(),this._readCallback(r.token))}_readFormulaTail(n){return n.type!=="}"?this._readPunctuation(n):(this._subject!==null&&this._emit(this._subject,this._predicate,this._object,this._graph),this._restoreContext("formula",n),this._object===null?this._readPredicate:this._getContextEndReader())}_readPunctuation(n){let o,r=this._graph;const e=this._subject,t=this._inversePredicate;switch(n.type){case"}":if(this._graph===null)return this._error("Unexpected graph closing",n);if(this._n3Mode)return this._readFormulaTail(n);this._graph=null;case".":this._subject=null,o=this._contextStack.length?this._readSubject:this._readInTopContext,t&&(this._inversePredicate=!1);break;case";":o=this._readPredicate;break;case",":o=this._readObject;break;case"{|":if(!this._supportsRDFStar)return this._error("Unexpected RDF* syntax",n);const d=this._predicate,U=this._object;this._subject=this._quad(e,d,U,this.DEFAULTGRAPH),o=this._readPredicate;break;case"|}":if(this._subject.termType!=="Quad")return this._error("Unexpected asserted triple closing",n);this._subject=null,o=this._readPunctuation;break;default:if(this._supportsQuads&&this._graph===null&&(r=this._readEntity(n))!==void 0){o=this._readQuadPunctuation;break}return this._error(`Expected punctuation to follow "${this._object.id}"`,n)}if(e!==null){const d=this._predicate,U=this._object;t?this._emit(U,d,e,r):this._emit(e,d,U,r)}return o}_readBlankNodePunctuation(n){let o;switch(n.type){case";":o=this._readPredicate;break;case",":o=this._readObject;break;default:return this._error(`Expected punctuation to follow "${this._object.id}"`,n)}return this._emit(this._subject,this._predicate,this._object,this._graph),o}_readQuadPunctuation(n){return n.type!=="."?this._error("Expected dot to follow quad",n):this._readInTopContext}_readPrefix(n){return n.type!=="prefix"?this._error("Expected prefix to follow @prefix",n):(this._prefix=n.value,this._readPrefixIRI)}_readPrefixIRI(n){if(n.type!=="IRI")return this._error(`Expected IRI to follow prefix "${this._prefix}:"`,n);const o=this._readEntity(n);return this._prefixes[this._prefix]=o.value,this._prefixCallback(this._prefix,o),this._readDeclarationPunctuation}_readBaseIRI(n){const o=n.type==="IRI"&&this._resolveIRI(n.value);return o?(this._setBase(o),this._readDeclarationPunctuation):this._error("Expected valid IRI to follow base declaration",n)}_readNamedGraphLabel(n){switch(n.type){case"IRI":case"blank":case"prefixed":return this._readSubject(n),this._readGraph;case"[":return this._readNamedGraphBlankLabel;default:return this._error("Invalid graph label",n)}}_readNamedGraphBlankLabel(n){return n.type!=="]"?this._error("Invalid graph label",n):(this._subject=this._blankNode(),this._readGraph)}_readDeclarationPunctuation(n){return this._sparqlStyle?(this._sparqlStyle=!1,this._readInTopContext(n)):n.type!=="."?this._error("Expected declaration to end with a dot",n):this._readInTopContext}_readQuantifierList(n){let o;switch(n.type){case"IRI":case"prefixed":if((o=this._readEntity(n,!0))!==void 0)break;default:return this._error(`Unexpected ${n.type}`,n)}return this._explicitQuantifiers?(this._subject===null?this._emit(this._graph||this.DEFAULTGRAPH,this._predicate,this._subject=this._blankNode(),this.QUANTIFIERS_GRAPH):this._emit(this._subject,this.RDF_REST,this._subject=this._blankNode(),this.QUANTIFIERS_GRAPH),this._emit(this._subject,this.RDF_FIRST,o,this.QUANTIFIERS_GRAPH)):this._quantified[o.id]=this._quantifier(this._blankNode().value),this._readQuantifierPunctuation}_readQuantifierPunctuation(n){return n.type===","?this._readQuantifierList:(this._explicitQuantifiers&&(this._emit(this._subject,this.RDF_REST,this.RDF_NIL,this.QUANTIFIERS_GRAPH),this._subject=null),this._readCallback=this._getContextEndReader(),this._readCallback(n))}_getPathReader(n){return this._afterPath=n,this._readPath}_readPath(n){switch(n.type){case"!":return this._readForwardPath;case"^":return this._readBackwardPath;default:const o=this._contextStack,r=o.length&&o[o.length-1];if(r&&r.type==="item"){const e=this._subject;this._restoreContext("item",n),this._emit(this._subject,this.RDF_FIRST,e,this._graph)}return this._afterPath(n)}}_readForwardPath(n){let o,r;const e=this._blankNode();if((r=this._readEntity(n))!==void 0)return this._predicate===null?(o=this._subject,this._subject=e):(o=this._object,this._object=e),this._emit(o,r,e,this._graph),this._readPath}_readBackwardPath(n){const o=this._blankNode();let r,e;if((r=this._readEntity(n))!==void 0)return this._predicate===null?(e=this._subject,this._subject=o):(e=this._object,this._object=o),this._emit(o,r,e,this._graph),this._readPath}_readRDFStarTailOrGraph(n){return n.type!==">>"?this._supportsQuads&&this._graph===null&&(this._graph=this._readEntity(n))!==void 0?this._readRDFStarTail:this._error(`Expected >> to follow "${this._object.id}"`,n):this._readRDFStarTail(n)}_readRDFStarTail(n){if(n.type!==">>")return this._error(`Expected >> but got ${n.type}`,n);const o=this._quad(this._subject,this._predicate,this._object,this._graph||this.DEFAULTGRAPH);return this._restoreContext("<<",n),this._subject===null?(this._subject=o,this._readPredicate):(this._object=o,this._getContextEndReader())}_getContextEndReader(){const n=this._contextStack;if(!n.length)return this._readPunctuation;switch(n[n.length-1].type){case"blank":return this._readBlankNodeTail;case"list":return this._readListItem;case"formula":return this._readFormulaTail;case"<<":return this._readRDFStarTailOrGraph}}_emit(n,o,r,e){this._callback(null,this._quad(n,o,r,e||this.DEFAULTGRAPH))}_error(n,o){const r=new Error(`${n} on line ${o.line}.`);r.context={token:o,line:o.line,previousToken:this._lexer.previousToken},this._callback(r),this._callback=yt}_resolveIRI(n){return/^[a-z][a-z0-9+.-]*:/i.test(n)?n:this._resolveRelativeIRI(n)}_resolveRelativeIRI(n){if(!n.length)return this._base;switch(n[0]){case"#":return this._base+n;case"?":return this._base.replace(/(?:\?.*)?$/,n);case"/":return(n[1]==="/"?this._baseScheme:this._baseRoot)+this._removeDotSegments(n);default:return/^[^/:]*:/.test(n)?null:this._removeDotSegments(this._basePath+n)}}_removeDotSegments(n){if(!/(^|\/)\.\.?($|[/#?])/.test(n))return n;const o=n.length;let r="",e=-1,t=-1,d=0,U="/";for(;e<o;){switch(U){case":":if(t<0&&n[++e]==="/"&&n[++e]==="/")for(;(t=e+1)<o&&n[t]!=="/";)e=t;break;case"?":case"#":e=o;break;case"/":if(n[e+1]===".")switch(U=n[1+ ++e],U){case"/":r+=n.substring(d,e-1),d=e+1;break;case void 0:case"?":case"#":return r+n.substring(d,e)+n.substr(e+1);case".":if(U=n[1+ ++e],U===void 0||U==="/"||U==="?"||U==="#"){if(r+=n.substring(d,e-2),(d=r.lastIndexOf("/"))>=t&&(r=r.substr(0,d)),U!=="/")return`${r}/${n.substr(e+1)}`;d=e+1}}}U=n[++e]}return r+n.substring(d)}parse(n,o,r){if(this._readCallback=this._readInTopContext,this._sparqlStyle=!1,this._prefixes=Object.create(null),this._prefixes._=this._blankNodePrefix?this._blankNodePrefix.substr(2):`b${Wt++}_`,this._prefixCallback=r||yt,this._inversePredicate=!1,this._quantified=Object.create(null),!o){const e=[];let t;if(this._callback=(d,U)=>{d?t=d:U&&e.push(U)},this._lexer.tokenize(n).every(d=>this._readCallback=this._readCallback(d)),t)throw t;return e}this._callback=o,this._lexer.tokenize(n,(e,t)=>{e!==null?(this._callback(e),this._callback=yt):this._readCallback&&(this._readCallback=this._readCallback(t))})}}function yt(){}function Kt(s,n){const o=n.namedNode;s._namedNode=o,s._blankNode=n.blankNode,s._literal=n.literal,s._variable=n.variable,s._quad=n.quad,s.DEFAULTGRAPH=n.defaultGraph(),s.RDF_FIRST=o($.rdf.first),s.RDF_REST=o($.rdf.rest),s.RDF_NIL=o($.rdf.nil),s.N3_FORALL=o($.r.forAll),s.N3_FORSOME=o($.r.forSome),s.ABBREVIATIONS={a:o($.rdf.type),"=":o($.owl.sameAs),">":o($.log.implies)},s.QUANTIFIERS_GRAPH=o("urn:n3:quantifiers")}Kt(gt.prototype,u);var Un=De(4841),ut=function(s,n,o,r){return new(o||(o=Promise))(function(e,t){function d(oe){try{a(r.next(oe))}catch(H){t(H)}}function U(oe){try{a(r.throw(oe))}catch(H){t(H)}}function a(oe){var H;oe.done?e(oe.value):(H=oe.value,H instanceof o?H:new o(function(be){be(H)})).then(d,U)}a((r=r.apply(s,n||[])).next())})};const $t={},bt={};class Xt{constructor(n){this.loadedOwlImports=[],this.loadedClasses=[],this.config=n}loadGraphs(){return ut(this,void 0,void 0,function*(){this.loadedOwlImports=[],this.loadedClasses=[];const n=new ke,o=new ke;this.config.prefixes={},yield Promise.all([this.importRDF(this.config.attributes.shapes?this.config.attributes.shapes:this.config.attributes.shapesUrl?this.fetchRDF(this.config.attributes.shapesUrl):"",n,M),this.importRDF(this.config.attributes.values?this.config.attributes.values:this.config.attributes.valuesUrl?this.fetchRDF(this.config.attributes.valuesUrl):"",o,void 0,new gt({blankNodePrefix:""}))]),this.config.shapesGraph=n,this.config.dataGraph=o})}importRDF(n,o,r,e){return ut(this,void 0,void 0,function*(){const t=e||new gt,d=U=>ut(this,void 0,void 0,function*(){const a=[];yield new Promise((oe,H)=>{t.parse(U,(be,R,Ee)=>{if(be)return H(be);if(R){if(o.add(new q(R.subject,R.predicate,R.object,r)),this.config.attributes.ignoreOwlImports===null&&g.equals(R.predicate)){const xe=this.toURL(R.object.value);xe&&this.loadedOwlImports.indexOf(xe)<0&&(this.loadedOwlImports.push(xe),a.push(this.importRDF(this.fetchRDF(xe),o,r,e)))}if(this.config.classInstanceProvider&&k.equals(R.predicate)){const xe=R.object.value;if(this.loadedClasses.indexOf(xe)<0){let Re;xe in bt?Re=bt[xe]:(Re=this.config.classInstanceProvider(xe),bt[xe]=Re),this.loadedClasses.push(xe),a.push(this.importRDF(Re,o,r,e))}}}else Ee&&this.config.registerPrefixes(Ee),oe(null)})});try{yield Promise.all(a)}catch(oe){console.warn(oe)}});if(n instanceof Promise&&(n=yield n),n){try{n=yield(0,Un.toRDF)(JSON.parse(n),{format:"application/n-quads"})}catch{}yield d(n)}})}fetchRDF(n){return ut(this,void 0,void 0,function*(){if(n in $t)return $t[n];const o=fetch(n,{headers:{Accept:"text/turtle, application/trig, application/n-triples, application/n-quads, text/n3, application/ld+json"}}).then(r=>r.text());return $t[n]=o,o})}toURL(n){if(K(n))return n;if(this.config.prefixes){const o=n.split(":");if(o.length===2){const r=this.config.prefixes[o[0]];if(r&&K(n=n.replace(`${o[0]}:`,r)))return n}}return null}}class vt{constructor(){this.shapes=null,this.shapesUrl=null,this.shapeSubject=null,this.values=null,this.valuesUrl=null,this.valueSubject=null,this.valuesNamespace="",this.view=null,this.language=navigator.language,this.loading="Loading…",this.ignoreOwlImports=null,this.collapse=null,this.submitButton=null}}class wt{constructor(n,o){this.attributes=new vt,this.loader=new Xt(this),this.prefixes={},this.editMode=!0,this.dataGraph=new ke,this.lists={},this.groups=[],this._shapesGraph=new ke,this.theme=n,this.form=o}updateAttributes(n){const o=new vt;Object.keys(o).forEach(r=>{const e=n.dataset[r];e!==void 0&&(o[r]=e)}),this.editMode=o.view===null,this.attributes=o}static dataAttributes(){const n=new vt;return Object.keys(n).map(o=>"data-"+o.replace(/[A-Z]/g,r=>"-"+r.toLowerCase()))}get shapesGraph(){return this._shapesGraph}set shapesGraph(n){this._shapesGraph=n,this.lists=n.extractLists(),this.groups=[],n.getQuads(null,D,`${F}PropertyGroup`,M).forEach(o=>{this.groups.push(o.subject.value)})}registerPrefixes(n){for(const o in n)o&&(this.prefixes[o]=n[o])}}const xt=s=>{const n=s.namespace("http://www.w3.org/2001/XMLSchema#"),o=s.namespace("http://www.w3.org/1999/02/22-rdf-syntax-ns#");return{first:o.first,nil:o.nil,rest:o.rest,langString:o.langString,xsd:n}};function Qe(s,n){return s==null?n:Array.isArray(s)?s:typeof s!="string"&&s[Symbol.iterator]?[...s]:[s]}class _t{constructor(n,{bind:o=!1}={}){this._factories=n.slice();for(const r of this._factories){typeof r.prototype.init=="function"&&r.prototype.init.call(this);for(const e of r.exports||[])this[e]=o?r.prototype[e].bind(this):r.prototype[e]}}clone(){const n=new _t(this._factories);for(const o of n._factories)typeof o.prototype.clone=="function"&&o.prototype.clone.call(n,this);return n}}const Gn=_t;class Yt{constructor(n){this.value=n}equals(n){return!!n&&n.termType===this.termType&&n.value===this.value}}Yt.prototype.termType="BlankNode";const Jn=Yt;class Ct{equals(n){return!!n&&n.termType===this.termType}}Ct.prototype.termType="DefaultGraph",Ct.prototype.value="";const Hn=Ct,Zt=function(s,n){if(!n)return null;if(n.termType==="BlankNode")return s.blankNode(n.value);if(n.termType==="DefaultGraph")return s.defaultGraph();if(n.termType==="Literal")return s.literal(n.value,n.language||s.namedNode(n.datatype.value));if(n.termType==="NamedNode")return s.namedNode(n.value);if(n.termType==="Quad"){const o=s.fromTerm(n.subject),r=s.fromTerm(n.predicate),e=s.fromTerm(n.object),t=s.fromTerm(n.graph);return s.quad(o,r,e,t)}if(n.termType==="Variable")return s.variable(n.value);throw new Error(`unknown termType ${n.termType}`)};class en{constructor(n,o,r){this.value=n,this.language=o,this.datatype=r}equals(n){return!!n&&n.termType===this.termType&&n.value===this.value&&n.language===this.language&&n.datatype.equals(this.datatype)}}en.prototype.termType="Literal";const tn=en;class nn{constructor(n){this.value=n}equals(n){return!!n&&n.termType===this.termType&&n.value===this.value}}nn.prototype.termType="NamedNode";const qt=nn;class St{constructor(n,o,r,e){this.subject=n,this.predicate=o,this.object=r,this.graph=e}equals(n){return!!n&&(n.termType==="Quad"||!n.termType)&&n.subject.equals(this.subject)&&n.predicate.equals(this.predicate)&&n.object.equals(this.object)&&n.graph.equals(this.graph)}}St.prototype.termType="Quad",St.prototype.value="";const zn=St;class an{constructor(n){this.value=n}equals(n){return!!n&&n.termType===this.termType&&n.value===this.value}}an.prototype.termType="Variable";const Wn=an,Kn=new qt("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),Xn=new qt("http://www.w3.org/2001/XMLSchema#string");class on{constructor(){this.init()}init(){this._data={blankNodeCounter:0,defaultGraph:new Hn}}namedNode(n){return new qt(n)}blankNode(n){return n=n||"b"+ ++this._data.blankNodeCounter,new Jn(n)}literal(n,o){return typeof o=="string"?new tn(n,o,Kn):new tn(n,"",o||Xn)}variable(n){return new Wn(n)}defaultGraph(){return this._data.defaultGraph}quad(n,o,r,e=this.defaultGraph()){return new zn(n,o,r,e)}fromTerm(n){return Zt(this,n)}fromQuad(n){return Zt(this,n)}}on.exports=["blankNode","defaultGraph","fromQuad","fromTerm","literal","namedNode","quad","variable"];const Et=on,Yn=new Et,Zn={apply:(s,n,o)=>s(o[0]),get:(s,n)=>s(n)},ve=function(s,{factory:n=Yn}={}){const o=(r="")=>n.namedNode(`${s}${r.raw||r}`);return typeof Proxy>"u"?o:new Proxy(o,Zn)};class dn{namespace(n){return ve(n,{factory:this})}}dn.exports=["namespace"];const rn=dn,Ze=new Gn([rn,Et]),{xsd:It}=xt(Ze);function sn(s,n){if(typeof s!="string")throw new Error("Named node must be an IRI string");return n.namedNode(s)}function ln(s,n="Literal",o,r){if(s&&typeof s=="object"&&s.termType)return s;if(s&&s.constructor.name==="URL")return sn(s.toString(),r);if(n==="BlankNode")return function(e,t){if(e&&typeof e!="string")throw new Error("Blank node identifier must be a string");return t.blankNode(e)}(s,r);if(s!=null){if(n==="Literal")return function(e,t,d){if(typeof e=="string")return(t=t&&(t.value||t.toString()))&&t.indexOf(":")!==-1&&(t=d.namedNode(t)),d.literal(e.toString(),t);const U=function(a,oe=Ze){return function(H,be=Ze){return typeof H!="boolean"?null:be.literal(H.toString(),It("boolean"))}(a,oe)||function(H,be=Ze){return typeof H!="number"?null:Number.isInteger(H)?be.literal(H.toString(10),It("integer")):be.literal(H.toString(10),It("double"))}(a,oe)||function(H,be=Ze){return typeof H!="string"?null:be.literal(H)}(a,oe)}(e,d);if(!U)throw new Error("The value cannot be converted to a literal node");return U}(s,o,r);if(n==="NamedNode")return sn(s,r);throw new Error("unknown type")}}const un=xt(Ze);function ea(s,n){const o=n.termType!=="Literal",r=un.langString.equals(n.datatype)||un.xsd.string.equals(n.datatype);if(o||!r)return s;const e=n.language.toLowerCase();return s.has(e)?s.get(e).push(n):s.set(e,[n]),s}class Rt{constructor({dataset:n,graph:o,value:r,factory:e,namespace:t}){this.dataset=n,this.graph=o,this.factory=e,this.namespace=t,this.term=ln(r,void 0,void 0,e)}clone({dataset:n=this.dataset,graph:o=this.graph,value:r,factory:e=this.factory,namespace:t=this.namespace}){return new Rt({dataset:n,graph:o,value:r,factory:e,namespace:t})}has(n,o){return this.matchProperty(Qe(this.term),n,o,Qe(this.graph),"subject").map(r=>this.clone({value:r}))}in(n){return this.matchProperty(null,n,Qe(this.term),Qe(this.graph),"subject").map(o=>this.clone({value:o}))}out(n,{language:o}={}){let r=this.matchProperty(Qe(this.term),n,null,Qe(this.graph),"object");return o!==void 0&&(r=function(e,{language:t}){const d=typeof t=="string"?[t]:t,U=function(a){const oe=a.reduce(ea,new Map),H=[...oe.entries()];return be=>{const R=be.toLowerCase();if(R==="*")return H[0]&&H[0][1];const Ee=oe.get(R);if(Ee)return Ee;const xe=H.find(([Re])=>Re.startsWith(R));return xe&&xe[1]}}(e);return d.map(U).find(Boolean)||[]}(r,{language:o})),r.map(e=>this.clone({value:e}))}addIn(n,o){const r=[];return this.term&&o.forEach(e=>{n.forEach(t=>{this.dataset.add(this.factory.quad(e,t,this.term,this.graph))}),r.push(this.clone({value:e}))}),r}addOut(n,o){const r=[];return this.term&&o.forEach(e=>{n.forEach(t=>{this.dataset.add(this.factory.quad(this.term,t,e,this.graph))}),r.push(this.clone({value:e}))}),r}addList(n,o){this.term&&n.forEach(r=>{const e=o.map(()=>this.factory.blankNode());this.dataset.add(this.factory.quad(this.term,r,e[0]||this.namespace.nil,this.graph));for(let t=0;t<e.length;t++)this.dataset.add(this.factory.quad(e[t],this.namespace.first,o[t],this.graph)),this.dataset.add(this.factory.quad(e[t],this.namespace.rest,e[t+1]||this.namespace.nil,this.graph))})}deleteIn(n,o){this.deleteMatch(o,n,Qe(this.term),Qe(this.graph))}deleteOut(n,o){this.deleteMatch(Qe(this.term),n,o,Qe(this.graph))}deleteList(n){n.forEach(o=>{for(const r of this.dataset.match(this.term,o))this.deleteItems(r)})}deleteItems(n){let o=[n];for(;!o[o.length-1].object.equals(this.namespace.nil);){const r=o[o.length-1].object;o=o.concat([...this.dataset.match(r)])}o.forEach(r=>{this.dataset.delete(r)})}match(n,o,r,e){if(!(n||o||r||e))return[...this.dataset];n=n||[null],o=o||[null],r=r||[null],e=e||[null];const t=[];for(const d of e)for(const U of n)for(const a of o)for(const oe of r)for(const H of this.dataset.match(U,a,oe,d))t.push(H);return t}matchProperty(n,o,r,e,t){return this.match(n,o,r,e).map(d=>d[t])}deleteMatch(n,o,r,e){this.match(n,o,r,e).forEach(t=>{this.dataset.delete(t)})}}class Ue{constructor({dataset:n,graph:o,term:r,value:e,factory:t,_context:d}){if(this.factory=t,this.namespace=xt(t),d)return void(this._context=d);const U=r&&Qe(r)||e&&Qe(e)||[null];this._context=U.map(a=>new Rt({dataset:n,graph:o,value:a,factory:this.factory,namespace:this.namespace}))}get term(){const n=this.terms;if(n.length===1)return n[0]}get terms(){return this._context.map(n=>n.term).filter(Boolean)}get value(){const n=this.term;return n&&n.value}get values(){return this.terms.map(n=>n.value)}get dataset(){const n=this.datasets;if(n.length===1)return n[0]}get datasets(){return this._context.map(n=>n.dataset).filter(Boolean)}any(){return Ue.fromContext(this._context.map(n=>n.clone({})),this)}isList(){return!(!this.term||!this.term.equals(this.namespace.nil)&&!this.out(this.namespace.first).term)}list(){if(this.terms.length>1)throw new Error("iterator over multiple terms is not supported");if(this.term&&(this.term.termType!=="NamedNode"&&this.term.termType!=="BlankNode"||!this.term.equals(this.namespace.nil)&&!this.out(this.namespace.first).term))return null;let n=this;return{[Symbol.iterator]:()=>({next:()=>{if(!n.term||n.term.equals(this.namespace.nil))return{done:!0};const o=n.out(this.namespace.first);if(o.terms.length>1)throw new Error(`Invalid list: multiple values for rdf:first on ${n.value}`);const r=n.out(this.namespace.rest);if(r.terms.length>1)throw new Error(`Invalid list: multiple values for rdf:rest on ${n.value}`);return n=r,{done:!1,value:o}}})}}toArray(){return this._context.map(n=>Ue.fromContext(n,this)).filter(n=>n.terms.some(Boolean))}filter(n){const o=this._context.map(r=>Ue.fromContext(r,this));return Ue.fromContext(this._context.filter((r,e)=>n(Ue.fromContext(r,this),e,o)),this)}forEach(n){return this.toArray().forEach(n),this}map(n){return this.toArray().map(n)}toString(){return this.values.join()}node(n,{type:o,datatype:r,language:e}={}){const t=(n=this._toTermArray(n,o,r||e)||[null]).reduce((d,U)=>d.concat(this._context.reduce((a,oe)=>a.concat([oe.clone({value:U})]),[])),[]);return Ue.fromContext(t,{factory:this.factory})}blankNode(n){return this.node(n,{type:"BlankNode"})}literal(n,o){return this.node(n,{type:"Literal",datatype:o})}namedNode(n){return this.node(n,{type:"NamedNode"})}in(n){n=this._toTermArray(n);const o=this._context.reduce((r,e)=>r.concat(e.in(n)),[]);return Ue.fromContext(o,this)}out(n,o={}){n=this._toTermArray(n);const r=this._context.reduce((e,t)=>e.concat(t.out(n,o)),[]);return Ue.fromContext(r,this)}has(n,o){n=this._toTermArray(n),o=this._toTermArray(o);const r=this._context.reduce((e,t)=>e.concat(t.has(n,o)),[]);return Ue.fromContext(r,this)}addIn(n,o,r){if(!n)throw new Error("predicate parameter is required");typeof o=="function"&&(r=o,o=null),n=this._toTermArray(n),o=this._toTermArray(o)||[this.factory.blankNode()];const e=this._context.map(t=>t.addIn(n,o));return r&&Ue.fromContext(e,this).forEach(r),this}addOut(n,o,r){if(!n)throw new Error("predicate parameter is required");typeof o=="function"&&(r=o,o=null),n=this._toTermArray(n),o=this._toTermArray(o)||[this.factory.blankNode()];const e=this._context.map(t=>t.addOut(n,o));return r&&Ue.fromContext(e,this).forEach(r),this}addList(n,o){if(!n||!o)throw new Error("predicate and items parameter is required");return n=this._toTermArray(n),o=this._toTermArray(o),this._context.forEach(r=>r.addList(n,o)),this}deleteIn(n,o){return n=this._toTermArray(n),o=this._toTermArray(o),this._context.forEach(r=>r.deleteIn(n,o)),this}deleteOut(n,o){return n=this._toTermArray(n),o=this._toTermArray(o),this._context.forEach(r=>r.deleteOut(n,o)),this}deleteList(n){if(!n)throw new Error("predicate parameter is required");return n=this._toTermArray(n),this._context.forEach(o=>o.deleteList(n)),this}_toTermArray(n,o,r){return function(e,t,d,U){return e!=null||t?(Qe(e)||[void 0]).reduce((a,oe)=>typeof oe=="object"&&oe.terms?a.concat(oe.terms):(a.push(ln(oe,t,d,U)),a),[]):e}(n,o,r,this.factory)}static fromContext(n,{factory:o}){return new Ue({_context:Qe(n),factory:o})}}function st({dataset:s,graph:n,term:o,value:r,factory:e=Ze,_context:t}){return new Ue({dataset:s,graph:n,term:o,value:r,factory:e,_context:t})}class jt{constructor(n,{bind:o=!1}={}){this._factories=n.slice();for(const r of this._factories){typeof r.prototype.init=="function"&&r.prototype.init.call(this);for(const e of r.exports||[])this[e]=o?r.prototype[e].bind(this):r.prototype[e]}}clone(){const n=new jt(this._factories);for(const o of n._factories)typeof o.prototype.clone=="function"&&o.prototype.clone.call(n,this);return n}}const ta=jt;function et(s){return typeof s=="string"||s instanceof String}function Pe(s){if(typeof s=="string")return s;if(!s)return"";if(s.id!==void 0&&s.termType!=="Quad")return s.id;let n,o,r,e;switch(s.termType){case"NamedNode":return s.value;case"BlankNode":return`_:${s.value}`;case"Variable":return`?${s.value}`;case"DefaultGraph":return"";case"Literal":return s.language?`"${s.value}"@${s.language}`:`"${s.value}"${s.datatype&&s.datatype.value!=="http://www.w3.org/2001/XMLSchema#string"?`^^${s.datatype.value}`:""}`;case"Quad":return n=Lt(Pe(s.subject)),o=Lt(Pe(s.predicate)),r=Lt(Pe(s.object)),e=s.graph.termType==="DefaultGraph"?"":` ${Pe(s.graph)}`,`<<${n} ${o} ${r}${e}>>`;default:throw new Error(`Unexpected termType: ${s.termType}`)}}const na=/^"(.*".*)(?="[^"]*$)/;function Lt(s){return s.replace(na,(n,o)=>`"${o.replace(/"/g,'""')}`)}class aa{constructor(n){if(this._size=0,this._graphs=Object.create(null),this._id=0,this._ids=Object.create(null),this._ids["><"]=0,this._entities=Object.create(null),this._quads=new Map,n)for(const o of n)this.add(o)}get size(){let n=this._size;if(n!==null)return n;n=0;const o=this._graphs;let r,e;for(const t in o)for(const d in r=o[t].subjects)for(const U in e=r[d])n+=Object.keys(e[U]).length;return this._size=n,this._size}add(n){let o=Pe(n.subject),r=Pe(n.predicate),e=Pe(n.object);const t=Pe(n.graph);let d=this._graphs[t];d||(d=this._graphs[t]={subjects:{},predicates:{},objects:{}},Object.freeze(d));const U=this._ids,a=this._entities;return o=U[o]||(U[a[++this._id]=o]=this._id),r=U[r]||(U[a[++this._id]=r]=this._id),e=U[e]||(U[a[++this._id]=e]=this._id),this._addToIndex(d.subjects,o,r,e),this._addToIndex(d.predicates,r,e,o),this._addToIndex(d.objects,e,o,r),this._setQuad(o,r,e,t,n),this._size=null,this}delete(n){let o=Pe(n.subject),r=Pe(n.predicate),e=Pe(n.object);const t=Pe(n.graph),d=this._ids,U=this._graphs;let a,oe,H;if(!((o=d[o])&&(r=d[r])&&(e=d[e])&&(a=U[t])&&(oe=a.subjects[o])&&(H=oe[r])&&e in H))return this;for(o in this._removeFromIndex(a.subjects,o,r,e),this._removeFromIndex(a.predicates,r,e,o),this._removeFromIndex(a.objects,e,o,r),this._size!==null&&this._size--,this._deleteQuad(o,r,e,t),a.subjects)return this;return delete U[t],this}has(n){const o=Pe(n.subject),r=Pe(n.predicate),e=Pe(n.object),t=Pe(n.graph),d=this._graphs[t];if(!d)return!1;const U=this._ids;let a,oe,H;return!(et(o)&&!(a=U[o])||et(r)&&!(oe=U[r])||et(e)&&!(H=U[e]))&&this._countInIndex(d.objects,H,a,oe)===1}match(n,o,r,e){return this._createDataset(this._match(n,o,r,e))}[Symbol.iterator](){return this._match()[Symbol.iterator]()}_addToIndex(n,o,r,e){const t=n[o]||(n[o]={}),d=t[r]||(t[r]={}),U=e in d;return U||(d[e]=null),!U}_removeFromIndex(n,o,r,e){const t=n[o],d=t[r];delete d[e];for(const U in d)return;delete t[r];for(const U in t)return;delete n[o]}_findInIndex(n,o,r,e,t,d,U,a,oe,H){let be,R,Ee;o&&((be=n,n={})[o]=be[o]);for(const xe in n)if(R=n[xe],R){r&&((be=R,R={})[r]=be[r]);for(const Re in R)if(Ee=R[Re],Ee){const Le=e?e in Ee?[e]:[]:Object.keys(Ee);for(let Oe=0;Oe<Le.length;Oe++){const We={[t]:xe,[d]:Re,[U]:Le[Oe]},nt=this._getQuad(We.subject,We.predicate,We.object,a);if(H)H.push(nt);else if(oe(nt))return!0}}}return H}_countInIndex(n,o,r,e){let t,d,U,a=0;o&&((t=n,n={})[o]=t[o]);for(const oe in n)if(d=n[oe],d){r&&((t=d,d={})[r]=t[r]);for(const H in d)U=d[H],U&&(e?e in U&&a++:a+=Object.keys(U).length)}return a}_getGraphs(n){return et(n)?{[n]:this._graphs[n]}:this._graphs}_match(n,o,r,e){n=n&&Pe(n),o=o&&Pe(o),r=r&&Pe(r),e=e&&Pe(e);const t=[],d=this._getGraphs(e),U=this._ids;let a,oe,H,be;if(et(n)&&!(oe=U[n])||et(o)&&!(H=U[o])||et(r)&&!(be=U[r]))return t;for(const R in d)a=d[R],a&&(oe?be?this._findInIndex(a.objects,be,oe,H,"object","subject","predicate",R,null,t):this._findInIndex(a.subjects,oe,H,null,"subject","predicate","object",R,null,t):H?this._findInIndex(a.predicates,H,be,null,"predicate","object","subject",R,null,t):be?this._findInIndex(a.objects,be,null,null,"object","subject","predicate",R,null,t):this._findInIndex(a.subjects,null,null,null,"subject","predicate","object",R,null,t));return t}_getQuad(n,o,r,e){return this._quads.get(this._toId(n,o,r,e))}_setQuad(n,o,r,e,t){this._quads.set(this._toId(n,o,r,e),t)}_deleteQuad(n,o,r,e){this._quads.delete(this._toId(n,o,r,e))}_createDataset(n){return new this.constructor(n)}_toId(n,o,r,e){return`${n}:${o}:${r}:${e}`}}const oa=aa;class mn{dataset(n){return new oa(n)}}mn.exports=["dataset"];const cn=new ta([Et,mn,rn]);function Tt(s){return{sh:ve("http://www.w3.org/ns/shacl#",{factory:s}),xsd:ve("http://www.w3.org/2001/XMLSchema#",{factory:s}),rdf:ve("http://www.w3.org/1999/02/22-rdf-syntax-ns#",{factory:s}),rdfs:ve("http://www.w3.org/2000/01/rdf-schema#",{factory:s})}}const Te=Tt();var dt=De(5250);function pn(s){try{return dt(s)}catch{return null}}class da{constructor(n){if(this.index=new Map,n)for(const o of n)this.add(o)}get size(){return this.index.size}add(n){const o=dt(n);return this.index.has(o)||this.index.set(o,n),this}clear(){this.index.clear()}delete(n){return!!n&&this.index.delete(pn(n))}entries(){return this.values().entries()}forEach(n,o){return this.values().forEach(n,o)}has(n){return!!n&&this.index.has(pn(n))}values(){return new Set(this.index.values())}keys(){return this.values()}[Symbol.iterator](){return this.values()[Symbol.iterator]()}}const hn=da,Me=class extends hn{addAll(s){for(const n of s)this.add(n)}},ra=typeof window<"u"?window:Ga,ia=class{constructor(s,n,o){this.context=s,this.funcName=n,this.func=o}execute(s,n,o){return this.func.apply(ra,[this.context,s,n,o])}};ve("http://www.w3.org/ns/auth/acl#"),ve("https://www.w3.org/ns/activitystreams#"),ve("http://purl.org/ontology/bibo/"),ve("http://creativecommons.org/ns#"),ve("http://www.w3.org/ns/auth/cert#"),ve("http://www.w3.org/2011/content#"),ve("http://qudt.org/vocab/constant/"),ve("http://www.cidoc-crm.org/cidoc-crm/");const sa=ve("http://www.w3.org/ns/csvw#"),fn=(ve("http://commontag.org/ns#"),ve("http://datashapes.org/sparql#"),ve("http://datashapes.org/dash#"),ve("http://dbpedia.org/ontology/"),ve("http://purl.org/dc/elements/1.1/"),ve("http://purl.org/dc/dcam/"),ve("http://www.w3.org/ns/dcat#"),ve("http://purl.org/dc/dcmitype/"),ve("http://purl.org/dc/terms/"),ve("http://www.ics.forth.gr/isl/CRMdig/"),ve("http://qudt.org/vocab/discipline/"),ve("http://usefulinc.com/ns/doap#"),ve("http://www.w3.org/ns/dpv#"),ve("http://www.w3.org/ns/dqv#"),ve("http://www.linkedmodel.org/schema/dtype#"),ve("http://www.w3.org/ns/duv#"),ve("http://www.w3.org/ns/earl#"),ve("http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#"),ve("http://www.w3.org/2003/12/exif/ns#"),ve("http://xmlns.com/foaf/0.1/"),ve("http://purl.org/vocab/frbr/core#"),ve("http://www.opengis.net/ont/geosparql#"),ve("http://www.opengis.net/def/function/geosparql/"),ve("http://www.opengis.net/def/rule/geosparql/"),ve("http://www.opengis.net/ont/gml#"),ve("http://www.geonames.org/ontology#"),ve("http://purl.org/goodrelations/v1#"),ve("http://www.w3.org/2003/g/data-view#"),ve("https://gs1.org/voc/"),ve("http://vocab.gtfs.org/terms#"),ve("http://www.w3.org/2011/http#"),ve("http://www.w3.org/ns/hydra/core#"),ve("http://www.w3.org/2002/12/cal/icaltzd#"),ve("https://linked.art/ns/terms/"),ve("http://www.w3.org/ns/ldp#"),ve("http://www.w3.org/2000/10/swap/list#"),ve("http://www.w3.org/ns/locn#"),ve("http://www.w3.org/2000/10/swap/log#"),ve("http://lexvo.org/ontology#"),ve("http://w3id.org/nfdi4ing/metadata4ing#"),ve("http://www.w3.org/ns/ma-ont#"),ve("http://www.loc.gov/mads/rdf/v1#"),ve("http://www.w3.org/2000/10/swap/math#"),ve("http://www.w3.org/ns/oa#"),ve("http://ogp.me/ns#"),ve("http://www.w3.org/ns/solid/oidc#"),ve("http://www.w3.org/ns/org#"),ve("http://www.w3.org/2002/07/owl#"),ve("http://www.w3.org/ns/pim/space#"),ve("http://qudt.org/vocab/prefix/"),ve("http://www.w3.org/ns/prov#"),ve("http://purl.org/linked-data/cube#"),ve("http://qudt.org/vocab/dimensionvector/"),ve("http://qudt.org/vocab/quantitykind/"),ve("http://qudt.org/schema/qudt/"),ve("http://rdaregistry.info/Elements/u/"),ve("http://www.w3.org/1999/02/22-rdf-syntax-ns#")),Se=(ve("http://www.w3.org/ns/rdfa#"),ve("http://www.w3.org/2000/01/rdf-schema#"),ve("http://purl.org/stuff/rev#"),ve("https://www.ica.org/standards/RiC/ontology#"),ve("http://www.w3.org/ns/r2rml#"),ve("http://purl.org/rss/1.0/"),ve("http://schema.org/"),ve("http://www.w3.org/ns/sparql-service-description#"),ve("http://purl.org/linked-data/sdmx#"),ve("http://semanticweb.cs.vu.nl/2009/11/sem/"),ve("http://www.w3.org/2000/10/swap/set#"),ve("http://www.opengis.net/ont/sf#"),ve("http://www.w3.org/ns/shacl#"),ve("http://www.w3.org/ns/shex#"),ve("https://www.w3.org/ns/shacl-shacl#"),ve("http://rdfs.org/sioc/ns#"),ve("http://www.w3.org/2004/02/skos/core#"),ve("http://www.w3.org/2008/05/skos-xl#"),ve("http://www.w3.org/ns/solid/terms#"),ve("http://www.w3.org/ns/sosa/"),ve("http://qudt.org/vocab/sou/"),ve("http://www.w3.org/ns/ssn/"),ve("http://www.w3.org/ns/posix/stat#"),ve("http://www.w3.org/2000/10/swap/string#"),ve("http://www.w3.org/2006/03/test-description#"),ve("http://www.w3.org/2006/time#"),ve("http://qudt.org/vocab/unit/"),ve("http://www.linkedmodel.org/schema/vaem#"),ve("http://purl.org/vocab/vann/"),ve("http://www.w3.org/2006/vcard/ns#"),ve("http://rdfs.org/ns/void#"),ve("http://www.w3.org/2003/06/sw-vocab-status/ns#"),ve("http://www.w3.org/2007/05/powder-s#"),ve("http://www.w3.org/2003/01/geo/wgs84_pos#"),ve("http://www.w3.org/1999/xhtml/vocab#"),ve("http://rdf-vocabulary.ddialliance.org/xkos#"),ve("http://www.w3.org/2001/XMLSchema#"));ve("http://www.w3.org/2007/rif#"),ve("http://rdf.data-vocabulary.org/#"),ve("http://www.w3.org/2007/05/powder#"),ve("http://www.w3.org/XML/1998/namespace/");class la{constructor(n){if(this.index=new Map,n)for(const[o,r]of n)this.set(o,r)}get size(){return this.index.size}clear(){this.index.clear()}delete(n){return this.index.delete(dt(n))}*entries(){for(const[,{term:n,value:o}]of this.index)yield[n,o]}forEach(n,o){for(const r of this.entries())n.call(o,r[1],r[0],this)}get(n){const o=this.index.get(dt(n));return o&&o.value}has(n){return this.index.has(dt(n))}*keys(){for(const[,{term:n}]of this.index)yield n}set(n,o){const r=dt(n);return this.index.set(r,{term:n,value:o}),this}*values(){for(const[,{value:n}]of this.index)yield n}[Symbol.iterator](){return this.entries()[Symbol.iterator]()}}const ua=la,qe=new class{constructor(){Ln(this,"validators");this.validators=new ua}register(s,n){this.validators.set(s,n)}find(s){return s?this.validators.get(s):null}};function Nn(s){return![`
`,"\r","	"].some(n=>s.includes(n))}qe.register(Se.anySimpleType,()=>!0),qe.register(Se.anyAtomicType,()=>!0),qe.register(Se.string,()=>!0),qe.register(Se.normalizedString,s=>Nn(s)),qe.register(Se.token,s=>Nn(s)&&!s.startsWith(" ")&&!s.endsWith(" ")&&!s.includes("  "));const ma=/^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;qe.register(Se.language,s=>ma.test(s));const ca=/^[^\ufffe\uffff]*$/;qe.register(Se.anyURI,s=>ca.test(s));const mt="(\\+|-)?",Je=new RegExp(`^${mt}\\d+$`);qe.register(Se.integer,s=>Je.test(s)),qe.register(Se.nonNegativeInteger,s=>Je.test(s)&&BigInt(s)>=BigInt("0")),qe.register(Se.positiveInteger,s=>Je.test(s)&&BigInt(s)>BigInt("0")),qe.register(Se.nonPositiveInteger,s=>Je.test(s)&&BigInt(s)<=BigInt("0")),qe.register(Se.negativeInteger,s=>Je.test(s)&&BigInt(s)<BigInt("0")),qe.register(Se.int,s=>Je.test(s)&&BigInt(s)>=BigInt("-2147483647")&&BigInt(s)<=BigInt("2147483648")),qe.register(Se.unsignedInt,s=>Je.test(s)&&BigInt(s)>=BigInt("0")&&BigInt(s)<=BigInt("4294967295")),qe.register(Se.long,s=>Je.test(s)&&BigInt(s)>=BigInt("-9223372036854775808")&&BigInt(s)<=BigInt("9223372036854775807")),qe.register(Se.unsignedLong,s=>Je.test(s)&&BigInt(s)>=BigInt("0")&&BigInt(s)<=BigInt("18446744073709551615")),qe.register(Se.short,s=>Je.test(s)&&BigInt(s)>=BigInt("-32768")&&BigInt(s)<=BigInt("32767")),qe.register(Se.unsignedShort,s=>Je.test(s)&&BigInt(s)>=BigInt("0")&&BigInt(s)<=BigInt("65535")),qe.register(Se.byte,s=>Je.test(s)&&BigInt(s)>=BigInt("-128")&&BigInt(s)<=BigInt("127")),qe.register(Se.unsignedByte,s=>Je.test(s)&&BigInt(s)>=BigInt("0")&&BigInt(s)<=BigInt("255")),qe.register(Se.boolean,s=>s==="1"||s==="true"||s==="0"||s==="false");const gn=`${mt}\\d+(\\.\\d+)?`,pa=new RegExp(`^${mt}${gn}$`);qe.register(Se.decimal,s=>pa.test(s)),qe.register(Se.float,yn),qe.register(Se.double,yn);const ha=new RegExp(`^${mt}${gn}((E|e)(\\+|-)?\\d+)?$`);function yn(s){return s==="INF"||s==="-INF"||s==="NaN"||ha.test(s)}const ct="-?",$n="\\d+M",bn="\\d+M",At="\\d+(\\.\\d+)?S",vn=`(\\d+Y(${$n})?|${$n})`,wn=`T((\\d+H(${bn})?(${At})?)|(${bn}(${At})?)|${At})`,Pt=`(\\d+D(${wn})?|${wn})`,fa=new RegExp(`^${ct}P((${vn}(${Pt})?)|${Pt})$`);qe.register(Se.duration,s=>fa.test(s));const Na=new RegExp(`^${ct}P${Pt}$`);qe.register(Se.dayTimeDuration,s=>Na.test(s));const ga=new RegExp(`^${ct}P${vn}$`);qe.register(Se.yearMonthDuration,s=>ga.test(s));const Ot=`${ct}(([1-9]\\d{3,})|(0\\d{3}))`,Xe="(((\\+|-)\\d{2}:\\d{2})|Z)",pt="\\d{2}",kt="\\d{2}",Dt=`${Ot}-${pt}-${kt}`,Mt="\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?",ya=new RegExp(`^${Dt}T${Mt}${Xe}?$`);qe.register(Se.dateTime,s=>ya.test(s));const $a=new RegExp(`^${Dt}T${Mt}${Xe}$`);qe.register(Se.dateTimeStamp,s=>$a.test(s));const ba=new RegExp(`^${Dt}${Xe}?$`);qe.register(Se.date,s=>ba.test(s));const va=new RegExp(`^${kt}${Xe}?$`);qe.register(Se.gDay,s=>va.test(s));const wa=new RegExp(`^--${pt}${Xe}?$`);qe.register(Se.gMonth,s=>wa.test(s));const xa=new RegExp(`^${pt}-${kt}${Xe}?$`);qe.register(Se.gMonthDay,s=>xa.test(s));const _a=new RegExp(`^${Ot}${Xe}?$`);qe.register(Se.gYear,s=>_a.test(s));const Ca=new RegExp(`^${Ot}-${pt}${Xe}?$`);qe.register(Se.gYearMonth,s=>Ca.test(s));const qa=new RegExp(`^${Mt}${Xe}?$`);qe.register(Se.time,s=>qa.test(s));const Sa=/^([0-9a-fA-F]{2})*$/;qe.register(Se.hexBinary,s=>Sa.test(s));const xn="[A-Za-z0-9+/]",ht=`(${xn} ?)`,Ea=new RegExp(`^((${ht}{4})*((${ht}{3}${xn})|(${ht}{2}([AEIMQUYcgkosw048] ?)=)|(${ht}([AQgw] ?)= ?=)))?$`);qe.register(Se.base64Binary,s=>Ea.test(s)),qe.register(sa.JSON,s=>{try{return JSON.parse(s),!0}catch{return!1}}),qe.register(Se.NOTATION,()=>!0),qe.register(Se.QName,()=>!0),qe.register(Se.Name,()=>!0),qe.register(Se.NCName,()=>!0),qe.register(Se.ENTITY,()=>!0),qe.register(Se.ID,()=>!0),qe.register(Se.IDREF,()=>!0),qe.register(Se.NMTOKEN,()=>!0),qe.register(Se.ENTITIES,()=>!0),qe.register(Se.IDREFS,()=>!0),qe.register(Se.NMTOKENS,()=>!0),qe.register(fn.XMLLiteral,()=>!0),qe.register(fn.HTML,()=>!0);var _n=De(9349);function tt(s,n,o){if(s.term.termType==="NamedNode"&&!o)return s.term;if(s.term.termType==="BlankNode"||s.term.termType==="NamedNode"){if(s.out(n.rdf.first).term)return[...s.list()].map(a=>tt(a,n,o));const r=s.out(n.sh.alternativePath);if(r.term)return{or:[...r.list()].map(a=>tt(a,n,o))};const e=s.out(n.sh.zeroOrMorePath);if(e.term)return{zeroOrMore:tt(e,n,o)};const t=s.out(n.sh.oneOrMorePath);if(t.term)return{oneOrMore:tt(t,n,o)};const d=s.out(n.sh.zeroOrOnePath);if(d.term)return{zeroOrOne:tt(d,n,o)};const U=s.out(n.sh.inversePath);return U.term?{inverse:tt(U,n,o)}:s.term}throw new Error(`Unsupported SHACL path: ${s.term.value}`)}function He(s,n,o){return[...Bt(s,n,o)]}function Bt(s,n,o){if(o.termType==="NamedNode")return function(r,e,t){return new Me(r.node(e).out(t).terms)}(s,n,o);if(Array.isArray(o))return function(r,e,t){let d=new Me([e]);for(const U of t)d=new Me(Vt(d,a=>He(r,a,U)));return d}(s,n,o);if(o.or)return function(r,e,t){return new Me(Vt(t.or,d=>He(r,e,d)))}(s,n,o);if(o.inverse)return function(r,e,t){if(t.inverse.termType!=="NamedNode")throw new Error("Unsupported: Inverse paths only work for named nodes");return new Me(r.node(e).in(t.inverse).terms)}(s,n,o);if(o.zeroOrOne)return function(r,e,t){const d=Bt(r,e,t.zeroOrOne);return d.add(e),d}(s,n,o);if(o.zeroOrMore)return function(r,e,t){const d=Ft(r,e,t.zeroOrMore);return d.add(e),d}(s,n,o);if(o.oneOrMore)return function(r,e,t){return Ft(r,e,t.oneOrMore)}(s,n,o);throw new Error(`Unsupported path object: ${o}`)}function Ft(s,n,o,r){(r=r||new Me).add(n);const e=Bt(s,n,o),t=Vt(e,d=>r.has(d)?[]:[...Ft(s,d,o,r)]);return e.addAll(t),e}function Vt(s,n){return[...s].reduce((o,r)=>o.concat(n(r)),[])}function Cn(s,n,o=new hn){if(n.termType!=="BlankNode"||o.has(n))return[];o.add(n);const r=[...s.match(n,null,null)],e=r.map(t=>Cn(s,t.object,o));return r.concat(...e)}function Qt(s,n){const o=Ut(s,n);return o.add(s.term),[...o].reduce((r,e)=>{const t=s.node(e).in(n.rdf.type).terms;return r.addAll(t),r},new Me)}function Ut(s,n){const o=s.in(n.rdfs.subClassOf),r=o.toArray().reduce((e,t)=>{const d=Ut(t,n);return e.addAll(d),e},new Me);return new Me([...o.terms,...r])}function Gt(s,n,o){const r=Ut(n,o);return r.add(n.term),s.out(o.rdf.type).terms.some(e=>r.has(e))}function rt(s){return[...s.list()].map(({term:n})=>n)}function qn(s,n,o){const{sh:r,xsd:e}=s.ns,t=o.shape.shapeNode,d=o.getParameterValue(r.qualifiedValueShapesDisjoint),U=o.getParameterValue(r.qualifiedValueShape),a=s.factory.literal("true",e.boolean),oe=new Me;if(a.equals(d)){const be=s.$shapes.node(t).in(r.property).out(r.property).out(r.qualifiedValueShape).filter(({term:R})=>!R.equals(U)).terms;oe.addAll(be)}const H=o.shape.pathObject;return He(s.$data,n,H).filter(be=>s.nodeConformsToShape(be,U)&&!function(R,Ee,xe){for(let Re=0;Re<xe.length;Re++)if(R.nodeConformsToShape(Ee,xe[Re]))return!0;return!1}(s,be,[...oe])).length}function it(s,n,o){if(!s||!n||s.termType!=="Literal"||n.termType!=="Literal"||Sn(s,o)!==Sn(n,o))return null;const r=(0,_n.fromRdf)(s),e=(0,_n.fromRdf)(n);return typeof r!=typeof e?null:typeof r=="string"?r.localeCompare(e):r-e}function Sn(s,n){return n.xsd.dateTime.equals(s.datatype)&&/^.*(((\+|-)\d{2}:\d{2})|Z)$/.test(s.value)}const je={validateAnd:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.and);return rt(s.$shapes.node(t)).every(d=>s.nodeConformsToShape(o,d))},validateClass:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.class);return Gt(s.$data.node(o),s.$data.node(t),s.ns)},validateClosed:function(s,n,o,r){const{sh:e,xsd:t}=s.ns,d=r.getParameterValue(e.closed),U=r.getParameterValue(e.ignoredProperties),a=r.shape.shapeNode;if(!s.factory.literal("true",t.boolean).equals(d))return;const oe=new Me(s.$shapes.node(a).out(e.property).out(e.path).terms.filter(be=>be.termType==="NamedNode"));U&&oe.addAll(rt(s.$shapes.node(U)));const H=[];return[...s.$data.dataset.match(o,null,null)].filter(({predicate:be})=>!oe.has(be)).forEach(({predicate:be,object:R})=>{H.push({path:be,value:R})}),H},validateDatatype:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.datatype);return o.termType==="Literal"&&t.equals(o.datatype)&&function(d){if(d.termType!=="Literal")throw new Error("Cannot validate non-literal terms");const U=qe.find(d.datatype);return!U||U(d.value)}(o)},validateDisjoint:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.disjoint);return s.$data.dataset.match(n,t,o).size===0},validateEqualsNode:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.equals),d=[];let U=0;return He(s.$data,n,t).forEach(a=>{U++,a.equals(n)||d.push({value:a})}),d.length===0&&U===0&&d.push({value:n}),d},validateEqualsProperty:function(s,n,o,r){const{sh:e}=s.ns,t=r.shape.pathObject,d=r.getParameterValue(e.equals),U=[];return He(s.$data,n,t).forEach(a=>{s.$data.dataset.match(n,d,a).size===0&&U.push({value:a})}),[...s.$data.dataset.match(n,d,null)].forEach(({object:a})=>{const oe=a;He(s.$data,n,t).some(H=>H.equals(oe))||U.push({value:oe})}),U},validateHasValueNode:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.hasValue);return n.equals(t)},validateHasValueProperty:function(s,n,o,r){const{sh:e}=s.ns,t=r.shape.pathObject,d=r.getParameterValue(e.hasValue);return He(s.$data,n,t).some(U=>U.equals(d))},validateIn:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.in);return new Me(rt(s.$shapes.node(t))).has(o)},validateLanguageIn:function(s,n,o,r){const{sh:e}=s.ns;if(o.termType!=="Literal")return!1;const t=o.language;if(!t||t==="")return!1;const d=r.getParameterValue(e.languageIn);return rt(s.$shapes.node(d)).some(U=>t.startsWith(U.value))},validateLessThanProperty:function(s,n,o,r){const{sh:e}=s.ns,t=r.shape.pathObject,d=He(s.$data,n,t),U=r.getParameterValue(e.lessThan),a=s.$data.node(n).out(U).terms,oe=[];for(const H of d)for(const be of a){const R=it(H,be,s.ns);(R===null||R>=0)&&oe.push({value:H})}return oe},validateLessThanOrEqualsProperty:function(s,n,o,r){const{sh:e}=s.ns,t=r.shape.pathObject,d=He(s.$data,n,t),U=r.getParameterValue(e.lessThanOrEquals),a=s.$data.node(n).out(U).terms,oe=[];for(const H of d)for(const be of a){const R=it(H,be,s.ns);(R===null||R>0)&&oe.push({value:H})}return oe},validateMaxCountProperty:function(s,n,o,r){const{sh:e}=s.ns,t=r.shape.pathObject,d=He(s.$data,n,t).length,U=r.getParameterValue(e.maxCount);return d<=Number(U.value)},validateMaxExclusive:function(s,n,o,r){const{sh:e}=s.ns,t=it(o,r.getParameterValue(e.maxExclusive),s.ns);return t!==null&&t<0},validateMaxInclusive:function(s,n,o,r){const{sh:e}=s.ns,t=it(o,r.getParameterValue(e.maxInclusive),s.ns);return t!==null&&t<=0},validateMaxLength:function(s,n,o,r){if(o.termType==="BlankNode")return!1;const{sh:e}=s.ns,t=r.getParameterValue(e.maxLength);return o.value.length<=Number(t.value)},validateMinCountProperty:function(s,n,o,r){const{sh:e}=s.ns,t=r.shape.pathObject,d=He(s.$data,n,t).length,U=r.getParameterValue(e.minCount);return d>=Number(U.value)},validateMinExclusive:function(s,n,o,r){const{sh:e}=s.ns,t=it(o,r.getParameterValue(e.minExclusive),s.ns);return t!==null&&t>0},validateMinInclusive:function(s,n,o,r){const{sh:e}=s.ns,t=it(o,r.getParameterValue(e.minInclusive),s.ns);return t!==null&&t>=0},validateMinLength:function(s,n,o,r){if(o.termType==="BlankNode")return!1;const{sh:e}=s.ns,t=r.getParameterValue(e.minLength);return o.value.length>=Number(t.value)},validateNode:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.node);return s.nodeConformsToShape(o,t)},validateNodeKind:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.nodeKind);return o.termType==="BlankNode"?e.BlankNode.equals(t)||e.BlankNodeOrIRI.equals(t)||e.BlankNodeOrLiteral.equals(t):o.termType==="NamedNode"?e.IRI.equals(t)||e.BlankNodeOrIRI.equals(t)||e.IRIOrLiteral.equals(t):o.termType==="Literal"?e.Literal.equals(t)||e.BlankNodeOrLiteral.equals(t)||e.IRIOrLiteral.equals(t):void 0},validateNot:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.not);return!s.nodeConformsToShape(o,t)},validateOr:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.or);return rt(s.$shapes.node(t)).some(d=>s.nodeConformsToShape(o,d))},validatePattern:function(s,n,o,r){if(o.termType==="BlankNode")return!1;const{sh:e}=s.ns,t=r.getParameterValue(e.flags),d=r.getParameterValue(e.pattern);return(t?new RegExp(d.value,t.value):new RegExp(d.value)).test(o.value)},validateQualifiedMaxCountProperty:function(s,n,o,r){const{sh:e}=s.ns,t=qn(s,n,r),d=r.getParameterValue(e.qualifiedMaxCount);return d.termType==="Literal"&&t<=Number(d.value)},validateQualifiedMinCountProperty:function(s,n,o,r){const{sh:e}=s.ns,t=qn(s,n,r),d=r.getParameterValue(e.qualifiedMinCount);return d.termType==="Literal"&&t>=Number(d.value)},validateUniqueLangProperty:function(s,n,o,r){const{sh:e,xsd:t}=s.ns,d=r.getParameterValue(e.uniqueLang);if(!s.factory.literal("true",t.boolean).equals(d))return;const U=r.shape.pathObject,a={};He(s.$data,n,U).forEach(H=>{const be=H.language;if(be&&be!==""){const R=a[be];a[be]=R?R+1:1}});const oe=[];for(const H in a)if(Object.prototype.hasOwnProperty.call(a,H)){const be=a[H];be>1&&oe.push('Language "'+H+'" has been used by '+be+" values")}return oe},validateXone:function(s,n,o,r){const{sh:e}=s.ns,t=r.getParameterValue(e.xone);return rt(s.$shapes.node(t)).map(d=>s.nodeConformsToShape(o,d)).filter(Boolean).length===1}},Ia={[Te.sh.AndConstraintComponent.value]:{validator:{func:je.validateAnd}},[Te.sh.ClassConstraintComponent.value]:{validator:{func:je.validateClass}},[Te.sh.ClosedConstraintComponent.value]:{validator:{func:je.validateClosed,message:"Predicate is not allowed (closed shape)"}},[Te.sh.DatatypeConstraintComponent.value]:{validator:{func:je.validateDatatype,message:"Value does not have datatype {$datatype}"}},[Te.sh.DisjointConstraintComponent.value]:{validator:{func:je.validateDisjoint,message:"Value node must not also be one of the values of {$disjoint}"}},[Te.sh.EqualsConstraintComponent.value]:{nodeValidator:{func:je.validateEqualsNode,message:"Must have same values as {$equals}"},propertyValidator:{func:je.validateEqualsProperty,message:"Must have same values as {$equals}"}},[Te.sh.HasValueConstraintComponent.value]:{nodeValidator:{func:je.validateHasValueNode,message:"Value must be {$hasValue}"},propertyValidator:{func:je.validateHasValueProperty,message:"Missing expected value {$hasValue}"}},[Te.sh.InConstraintComponent.value]:{validator:{func:je.validateIn,message:"Value is not in {$in}"}},[Te.sh.LanguageInConstraintComponent.value]:{validator:{func:je.validateLanguageIn,message:"Language does not match any of {$languageIn}"}},[Te.sh.LessThanConstraintComponent.value]:{propertyValidator:{func:je.validateLessThanProperty,message:"Value is not less than value of {$lessThan}"}},[Te.sh.LessThanOrEqualsConstraintComponent.value]:{propertyValidator:{func:je.validateLessThanOrEqualsProperty,message:"Value is not less than or equal to value of {$lessThanOrEquals}"}},[Te.sh.MaxCountConstraintComponent.value]:{propertyValidator:{func:je.validateMaxCountProperty,message:"More than {$maxCount} values"}},[Te.sh.MaxExclusiveConstraintComponent.value]:{validator:{func:je.validateMaxExclusive,message:"Value is not less than {$maxExclusive}"}},[Te.sh.MaxInclusiveConstraintComponent.value]:{validator:{func:je.validateMaxInclusive,message:"Value is not less than or equal to {$maxInclusive}"}},[Te.sh.MaxLengthConstraintComponent.value]:{validator:{func:je.validateMaxLength,message:"Value has more than {$maxLength} characters"}},[Te.sh.MinCountConstraintComponent.value]:{propertyValidator:{func:je.validateMinCountProperty,message:"Less than {$minCount} values"}},[Te.sh.MinExclusiveConstraintComponent.value]:{validator:{func:je.validateMinExclusive,message:"Value is not greater than {$minExclusive}"}},[Te.sh.MinInclusiveConstraintComponent.value]:{validator:{func:je.validateMinInclusive,message:"Value is not greater than or equal to {$minInclusive}"}},[Te.sh.MinLengthConstraintComponent.value]:{validator:{func:je.validateMinLength,message:"Value has less than {$minLength} characters"}},[Te.sh.NodeConstraintComponent.value]:{validator:{func:je.validateNode,message:"Value does not have shape {$node}"}},[Te.sh.NodeKindConstraintComponent.value]:{validator:{func:je.validateNodeKind,message:"Value does not have node kind {$nodeKind}"}},[Te.sh.NotConstraintComponent.value]:{validator:{func:je.validateNot,message:"Value does have shape {$not}"}},[Te.sh.OrConstraintComponent.value]:{validator:{func:je.validateOr}},[Te.sh.PatternConstraintComponent.value]:{validator:{func:je.validatePattern,message:'Value does not match pattern "{$pattern}"'}},[Te.sh.QualifiedMaxCountConstraintComponent.value]:{propertyValidator:{func:je.validateQualifiedMaxCountProperty,message:"More than {$qualifiedMaxCount} values have shape {$qualifiedValueShape}"}},[Te.sh.QualifiedMinCountConstraintComponent.value]:{propertyValidator:{func:je.validateQualifiedMinCountProperty,message:"Less than {$qualifiedMinCount} values have shape {$qualifiedValueShape}"}},[Te.sh.UniqueLangConstraintComponent.value]:{propertyValidator:{func:je.validateUniqueLangProperty,message:'Language "{?lang}" used more than once'}},[Te.sh.XoneConstraintComponent.value]:{validator:{func:je.validateXone}}};class En{constructor(n,o,r,e){this.shape=n,this.component=o,this.paramValue=r,this.shapeNodePointer=e.node(n.shapeNode)}getParameterValue(n){return this.paramValue||this.shapeNodePointer.out(n).term}get validationFunction(){return this.shape.isPropertyShape?this.component.propertyValidationFunction:this.component.nodeValidationFunction}get isValidationFunctionGeneric(){return this.shape.isPropertyShape?this.component.propertyValidationFunctionGeneric:this.component.nodeValidationFunctionGeneric}get componentMessages(){return this.component.getMessages(this.shape)}}class Ra{constructor(n,o){const{$shapes:r,factory:e,ns:t}=o,{sh:d,xsd:U}=t;this.context=o,this.node=n,this.nodePointer=r.node(n),this.parameters=[],this.parameterNodes=[],this.requiredParameters=[],this.optionals={};const a=e.literal("true",U.boolean);this.nodePointer.out(d.parameter).forEach(oe=>{const H=oe.term;oe.out(d.path).forEach(({term:be})=>{this.parameters.push(be),this.parameterNodes.push(H),r.dataset.match(H,d.optional,a).size>0?this.optionals[be.value]=!0:this.requiredParameters.push(be)})}),this.nodeValidationFunction=this.findValidationFunction(d.nodeValidator),this.nodeValidationFunction||(this.nodeValidationFunction=this.findValidationFunction(d.validator),this.nodeValidationFunctionGeneric=!0),this.propertyValidationFunction=this.findValidationFunction(d.propertyValidator),this.propertyValidationFunction||(this.propertyValidationFunction=this.findValidationFunction(d.validator),this.propertyValidationFunctionGeneric=!0)}findValidationFunction(n){const o=n.value.split("#").slice(-1)[0],r=this.findValidator(o);return r?new ia(this.context,r.func.name,r.func):null}getMessages(n){const o=(n.isPropertyShape?this.propertyValidationFunctionGeneric:this.nodeValidationFunctionGeneric)?"validator":n.isPropertyShape?"propertyValidator":"nodeValidator",r=this.findValidator(o);if(!r)return[];const e=r.message;return e?[e]:[]}findValidator(n){const o=Ia[this.node.value];return o&&o[n]||null}isComplete(n){return!this.parameters.some(o=>this.isRequired(o.value)&&this.context.$shapes.dataset.match(n,o,null).size===0)}isRequired(n){return!this.optionals[n]}}class ja{constructor(n,o){const{$shapes:r,ns:e,shapesGraph:t}=n,{sh:d}=e;this.context=n,this.shapeNode=o,this.shapeNodePointer=r.node(o),this.severity=this.shapeNodePointer.out(d.severity).term||d.Violation,this.deactivated=this.shapeNodePointer.out(d.deactivated).value==="true",this.path=this.shapeNodePointer.out(d.path).term,this.isPropertyShape=this.path!=null,this._pathObject=void 0,this.constraints=[];const U=new Me;[...r.dataset.match(o,null,null)].forEach(a=>{const oe=t.getComponentWithParameter(a.predicate);oe&&!U.has(oe.node)&&(oe.parameters.length===1?this.constraints.push(new En(this,oe,a.object,r)):oe.isComplete(o)&&(this.constraints.push(new En(this,oe,void 0,r)),U.add(oe.node)))})}get pathObject(){const{$shapes:n,ns:o,allowNamedNodeInList:r}=this.context;return this._pathObject===void 0&&(this._pathObject=this.path?tt(n.node(this.path),o,r):null),this._pathObject}getTargetNodes(n){const{$shapes:o,ns:r}=this.context,{rdfs:e,sh:t}=r,d=new Me;Gt(o.node(this.shapeNode),o.node(e.Class),r)&&d.addAll(Qt(n.node(this.shapeNode),r)),[...o.dataset.match(this.shapeNode,t.targetClass,null)].forEach(({object:a})=>{d.addAll(Qt(n.node(a),r))});const U=this.shapeNodePointer.out(t.targetNode).terms.filter(a=>n.dataset.match(a).size>0||n.dataset.match(null,a).size>0||n.dataset.match(null,null,a).size>0);return d.addAll(U),this.shapeNodePointer.out(t.targetSubjectsOf).terms.forEach(a=>{const oe=[...n.dataset.match(null,a,null)].map(({subject:H})=>H);d.addAll(oe)}),this.shapeNodePointer.out(t.targetObjectsOf).terms.forEach(a=>{const oe=[...n.dataset.match(null,a,null)].map(({object:H})=>H);d.addAll(oe)}),[...d]}getValueNodes(n,o){return this.path?He(o,n,this.pathObject):[n]}}const La=class{constructor(s){this.context=s;const{sh:n}=s.ns,o=Qt(s.$shapes.node(n.ConstraintComponent),s.ns);this._components=[...o].map(r=>new Ra(r,s)),this._parametersMap=new Map;for(const r of this._components)for(const e of r.parameters)this._parametersMap.set(e.value,r);this._shapes=new Map}getComponentWithParameter(s){return this._parametersMap.get(s.value)}getShape(s){if(!this._shapes.has(s.value)){const n=new ja(this.context,s);this._shapes.set(s.value,n)}return this._shapes.get(s.value)}get shapeNodesWithConstraints(){if(!this._shapeNodesWithConstraints){const s=new Me;for(const n of this._components){const o=n.requiredParameters;for(const r of o){const e=[...this.context.$shapes.dataset.match(null,r,null)].map(({subject:t})=>t);s.addAll(e)}}this._shapeNodesWithConstraints=[...s]}return this._shapeNodesWithConstraints}get shapesWithTarget(){const{$shapes:s,ns:n}=this.context,{rdfs:o,sh:r}=n;return this._shapesWithTarget||(this._shapesWithTarget=this.shapeNodesWithConstraints.filter(e=>Gt(s.node(e),s.node(o.Class),n)||s.node(e).out([r.targetClass,r.targetNode,r.targetSubjectsOf,r.targetObjectsOf,r.target]).terms.length>0).map(e=>this.getShape(e))),this._shapesWithTarget}};var Ta=De(7833);class Jt{constructor(n,o){this.pointer=n,this.term=n.term,this.dataset=n.dataset,this.ns=o}get message(){return this.pointer.out(this.ns.sh.resultMessage).terms||[]}get path(){return this.pointer.out(this.ns.sh.resultPath).term||null}get focusNode(){return this.pointer.out(this.ns.sh.focusNode).term||null}get severity(){return this.pointer.out(this.ns.sh.resultSeverity).term||null}get sourceConstraintComponent(){return this.pointer.out(this.ns.sh.sourceConstraintComponent).term||null}get sourceShape(){return this.pointer.out(this.ns.sh.sourceShape).term||null}get value(){return this.pointer.out(this.ns.sh.value).term||null}get detail(){return this.pointer.out(this.ns.sh.detail).map(n=>new Jt(n,this.ns))}}const Aa=class{constructor(s,n){n=n||{},this.factory=n.factory||cn,this.ns=n.ns||Tt(this.factory);const{sh:o,xsd:r}=this.ns;this.pointer=s,this.term=s.term,this.dataset=s.dataset;const e=s.out(o.result),t=e.terms.length===0;s.addOut(o.conforms,this.factory.literal(t.toString(),r.boolean)),this.conforms=t,this.results=e.toArray().map(d=>new Jt(d,this.ns))}},Pa=Ta("validation-enging::error");function In(s,n,o){for(const r of s.dataset)n.dataset.add(r);n.addOut(o,s)}const Oa=class{constructor(s,n){this.context=s,this.factory=s.factory,this.maxErrors=n.maxErrors,this.initReport(),this.recordErrorsLevel=0,this.violationsCount=0,this.validationError=null,this.nestedResults={}}initReport(){const{rdf:s,sh:n}=this.context.ns;this.reportPointer=st({dataset:this.factory.dataset(),factory:this.factory,term:this.factory.blankNode("report")}).addOut(s.type,n.ValidationReport)}validateAll(s){if(this.maxErrorsReached())return!0;this.validationError=null;try{this.initReport();let n=!1;const o=this.context.shapesGraph.shapesWithTarget;for(const r of o){const e=r.getTargetNodes(s);for(const t of e)this.validateNodeAgainstShape(t,r,s)&&(n=!0)}return n}catch(n){return this.validationError=n,!0}}validateNodeAgainstShape(s,n,o){if(this.maxErrorsReached())return!0;if(n.deactivated)return!1;const r=n.getValueNodes(s,o);let e=!1;for(const t of n.constraints)this.validateNodeAgainstConstraint(s,r,t,o)&&(e=!0);return e}validateNodeAgainstConstraint(s,n,o,r){const{sh:e}=this.context.ns;if(this.maxErrorsReached())return!0;if(e.PropertyConstraintComponent.equals(o.component.node)){let t=!1;for(const d of n)this.validateNodeAgainstShape(d,this.context.shapesGraph.getShape(o.paramValue),r)&&(t=!0);return t}if(!o.validationFunction)throw new Error("Cannot find validator for constraint component "+o.component.node.value);if(o.isValidationFunctionGeneric){let t=!1;for(const d of n){if(this.maxErrorsReached())break;const U=this.validateValueNodeAgainstConstraint(s,d,o);U&&this.violationsCount++,t=t||U}return t}return this.validateValueNodeAgainstConstraint(s,null,o)}validateValueNodeAgainstConstraint(s,n,o){const{sh:r}=this.context.ns;this.recordErrorsLevel++;const e=o.validationFunction.execute(s,n,o),t=(Array.isArray(e)?e:[e]).map(d=>this.createResultFromObject(d,o,s,n)).filter(Boolean);if(this.recordErrorsLevel===1)for(const d of t)In(d,this.reportPointer,r.result);else this.nestedResults[this.recordErrorsLevel]=(this.nestedResults[this.recordErrorsLevel]||[]).concat(t);return this.recordErrorsLevel--,t.length>0}maxErrorsReached(){return!!this.maxErrors&&this.violationsCount>=this.maxErrors}getReport(){if(this.validationError)throw Pa("Validation Failure: "+this.validationError),this.validationError;return new Aa(this.reportPointer,{factory:this.factory,ns:this.context.ns})}createResultFromObject(s,n,o,r){const{sh:e}=this.context.ns,t=this.normalizeValidationResult(s,r);if(!t)return null;const d=this.createResult(n,o);t.path?(d.addOut(e.resultPath,t.path),this.copyNestedStructure(t.path,d)):n.shape.isPropertyShape&&(d.addOut(e.resultPath,n.shape.path),this.copyNestedStructure(n.shape.path,d)),t.value?(d.addOut(e.value,t.value),this.copyNestedStructure(t.value,d)):r&&(d.addOut(e.value,r),this.copyNestedStructure(r,d));const U=this.createResultMessages(t,n);for(const a of U)d.addOut(e.resultMessage,a);return d}normalizeValidationResult(s,n){return s===!1?{value:n}:typeof s=="string"?{message:s,value:n}:typeof s=="object"?s:null}createResult(s,n){const{rdf:o,sh:r}=this.context.ns,e=s.shape.severity,t=s.component.node,d=s.shape.shapeNode,U=this.factory.blankNode(),a=st({dataset:this.factory.dataset(),term:U});a.addOut(o.type,r.ValidationResult).addOut(r.resultSeverity,e).addOut(r.sourceConstraintComponent,t).addOut(r.sourceShape,d).addOut(r.focusNode,n),this.copyNestedStructure(d,a),this.copyNestedStructure(n,a);const oe=this.nestedResults[this.recordErrorsLevel+1];if(oe){if(t.equals(r.NodeConstraintComponent))for(const H of oe)In(H,a,r.detail);this.nestedResults[this.recordErrorsLevel+1]=[]}return a}copyNestedStructure(s,n){const o=Cn(this.context.$shapes.dataset,s);for(const r of o)n.dataset.add(r)}createResultMessages(s,n){const{$shapes:o,ns:r}=this.context,{sh:e}=r;let t=[];return s.message&&(t=[this.factory.literal(s.message)]),t.length===0&&(t=o.node(n.shape.shapeNode).out(e.message).terms),t.length===0&&(t=n.componentMessages.map(d=>this.factory.literal(d))),t.length===0&&(t=o.node(n.component.node).out(e.message).terms),t.map(d=>function(U,a,oe){const H=a.component.parameters.reduce((be,R)=>{const Ee=function(Le){let Oe=Le.lastIndexOf("#");if(Oe<0&&(Oe=Le.lastIndexOf("/")),Oe<0)throw new Error(`Cannot get local name of ${Le}`);return Le.substring(Oe+1)}(R.value),xe=(Re=a.getParameterValue(R))?Re.termType==="NamedNode"?"<"+Re.value+">":Re.termType==="BlankNode"?"Blank node "+Re.value:Re.value:"NULL";var Re;return be.replace(`{$${Ee}}`,xe).replace(`{?${Ee}}`,xe)},U.value);return oe.literal(H,U.language||U.datatype)}(d,n,this.factory))}},ka=class{constructor(s,n){n=n||{},this.factory=n.factory||cn,this.ns=Tt(this.factory),this.allowNamedNodeInList=n.allowNamedNodeInList!==void 0&&n.allowNamedNodeInList,this.loadShapes(s),this.validationEngine=new Oa(this,n),this.depth=0}validate(s){return this.$data=st({dataset:s,factory:this.factory}),this.validationEngine.validateAll(this.$data),this.validationEngine.getReport()}validateNode(s,n,o){return this.$data=st({dataset:s,factory:this.factory}),this.nodeConformsToShape(n,o),this.validationEngine.getReport()}loadShapes(s){const n=(({factory:r})=>{const e=r,t="http://www.w3.org/ns/shacl#",d="http://www.w3.org/1999/02/22-rdf-syntax-ns#",U="http://www.w3.org/2002/07/owl#",a="http://www.w3.org/2000/01/rdf-schema#",oe="http://www.w3.org/ns/shacl-shacl#",H="http://www.w3.org/2001/XMLSchema#",be="http://datashapes.org/dash#",R=[];for(let Ee=0;Ee<76;Ee++)R.push(e.blankNode());return[e.quad(e.namedNode(t),e.namedNode(`${d}type`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(t),e.namedNode(`${a}comment`),e.literal("This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language.","en"),e.namedNode(t)),e.quad(e.namedNode(t),e.namedNode(`${a}label`),e.literal("W3C Shapes Constraint Language (SHACL) Vocabulary","en"),e.namedNode(t)),e.quad(e.namedNode(t),e.namedNode(`${t}declare`),R[0],e.namedNode(t)),e.quad(e.namedNode(t),e.namedNode(`${t}suggestedShapesGraph`),e.namedNode(oe),e.namedNode(t)),e.quad(e.namedNode(`${t}AbstractResult`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}AbstractResult`),e.namedNode(`${a}comment`),e.literal("The base class of validation results, typically not instantiated directly.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}AbstractResult`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}AbstractResult`),e.namedNode(`${a}label`),e.literal("Abstract result","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}AbstractResult`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent-and`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent-and`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent-and`),e.namedNode(`${t}path`),e.namedNode(`${t}and`),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent`),e.namedNode(`${a}label`),e.literal("And constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}AndConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}AndConstraintComponent-and`),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNode`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNode`),e.namedNode(`${a}comment`),e.literal("The node kind of all blank nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNode`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNode`),e.namedNode(`${a}label`),e.literal("Blank node","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(`${a}comment`),e.literal("The node kind of all blank nodes or IRIs.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(`${a}label`),e.literal("Blank node or IRI","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrLiteral`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrLiteral`),e.namedNode(`${a}comment`),e.literal("The node kind of all blank nodes or literals.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrLiteral`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}BlankNodeOrLiteral`),e.namedNode(`${a}label`),e.literal("Blank node or literal","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent-class`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent-class`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent-class`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}IRI`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent-class`),e.namedNode(`${t}path`),e.namedNode(`${t}class`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that each value node is an instance of a given type.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent`),e.namedNode(`${a}label`),e.literal("Class constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ClassConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}ClassConstraintComponent-class`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-closed`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-closed`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-closed`),e.namedNode(`${t}datatype`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-closed`),e.namedNode(`${t}path`),e.namedNode(`${t}closed`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-ignoredProperties`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-ignoredProperties`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-ignoredProperties`),e.namedNode(`${t}optional`),e.literal("true",e.namedNode(`${H}boolean`)),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent-ignoredProperties`),e.namedNode(`${t}path`),e.namedNode(`${t}ignoredProperties`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent`),e.namedNode(`${a}label`),e.literal("Closed constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}ClosedConstraintComponent-closed`),e.namedNode(t)),e.quad(e.namedNode(`${t}ClosedConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}ClosedConstraintComponent-ignoredProperties`),e.namedNode(t)),e.quad(e.namedNode(`${t}ConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}ConstraintComponent`),e.namedNode(`${a}comment`),e.literal("The class of constraint components.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ConstraintComponent`),e.namedNode(`${a}label`),e.literal("Constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ConstraintComponent`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Parameterizable`),e.namedNode(t)),e.quad(e.namedNode(`${t}CountExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}CountExpression`),e.namedNode(`${a}comment`),e.literal("A count expression is a blank node with exactly one value for the property sh:count which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}CountExpression`),e.namedNode(`${a}label`),e.literal("Count Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}CountExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}CountExpression`),e.namedNode(`${t}property`),R[1],e.namedNode(t)),e.quad(e.namedNode(`${t}CountExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}count`),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent-datatype`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent-datatype`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent-datatype`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent-datatype`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}IRI`),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent-datatype`),e.namedNode(`${t}path`),e.namedNode(`${t}datatype`),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the datatype of all value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent`),e.namedNode(`${a}label`),e.literal("Datatype constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}DatatypeConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}DatatypeConstraintComponent-datatype`),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent-disjoint`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent-disjoint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent-disjoint`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}IRI`),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent-disjoint`),e.namedNode(`${t}path`),e.namedNode(`${t}disjoint`),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent`),e.namedNode(`${a}label`),e.literal("Disjoint constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}DisjointConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}DisjointConstraintComponent-disjoint`),e.namedNode(t)),e.quad(e.namedNode(`${t}DistinctExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}DistinctExpression`),e.namedNode(`${a}comment`),e.literal("A distinct expression is a blank node with exactly one value for the property sh:distinct which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}DistinctExpression`),e.namedNode(`${a}label`),e.literal("Distinct Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}DistinctExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}DistinctExpression`),e.namedNode(`${t}property`),R[2],e.namedNode(t)),e.quad(e.namedNode(`${t}DistinctExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}distinct`),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent-equals`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent-equals`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent-equals`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}IRI`),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent-equals`),e.namedNode(`${t}path`),e.namedNode(`${t}equals`),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent`),e.namedNode(`${a}label`),e.literal("Equals constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}EqualsConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}EqualsConstraintComponent-equals`),e.namedNode(t)),e.quad(e.namedNode(`${t}ExistsExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}ExistsExpression`),e.namedNode(`${a}comment`),e.literal("An exists expression is a blank node with exactly one value for sh:exists (which is a well-formed shape)."),e.namedNode(t)),e.quad(e.namedNode(`${t}ExistsExpression`),e.namedNode(`${a}label`),e.literal("Exists Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}ExistsExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}ExistsExpression`),e.namedNode(`${t}property`),R[3],e.namedNode(t)),e.quad(e.namedNode(`${t}ExistsExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}exists`),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent-expression`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent-expression`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent-expression`),e.namedNode(`${t}path`),e.namedNode(`${t}expression`),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that a given node expression produces true for all value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent`),e.namedNode(`${a}label`),e.literal("Expression constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ExpressionConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}ExpressionConstraintComponent-expression`),e.namedNode(t)),e.quad(e.namedNode(`${t}FilterShapeExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}FilterShapeExpression`),e.namedNode(`${a}comment`),e.literal("A filter shape expression is a blank node with exactly one value for sh:filterShape (which is a well-formed shape) and at most one value for sh:nodes (which is a well-formed node expression)."),e.namedNode(t)),e.quad(e.namedNode(`${t}FilterShapeExpression`),e.namedNode(`${a}label`),e.literal("Filter Shape Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}FilterShapeExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}FilterShapeExpression`),e.namedNode(`${t}property`),R[4],e.namedNode(t)),e.quad(e.namedNode(`${t}FilterShapeExpression`),e.namedNode(`${t}property`),R[5],e.namedNode(t)),e.quad(e.namedNode(`${t}FilterShapeExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}filterShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}FocusNodeOrConstantTermExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}FocusNodeOrConstantTermExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}IRIOrLiteral`),e.namedNode(t)),e.quad(e.namedNode(`${t}Function`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Function`),e.namedNode(`${a}comment`),e.literal("The class of SHACL functions.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Function`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Function`),e.namedNode(`${a}label`),e.literal("Function","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Function`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Parameterizable`),e.namedNode(t)),e.quad(e.namedNode(`${t}FunctionExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}FunctionExpression`),e.namedNode(`${a}comment`),e.literal("A function expression is a blank node that does not fulfill any of the syntax rules of the other node expression types and which is the subject of exactly one triple T where the object is a well-formed SHACL list, and each member of that list is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}FunctionExpression`),e.namedNode(`${a}label`),e.literal("Function Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}FunctionExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}GroupConcatExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}GroupConcatExpression`),e.namedNode(`${a}comment`),e.literal("A group concat expression is a blank node with exactly one value for the property sh:groupConcat which is a well-formed node expression. A group concat expression can have a single value for the property sh:separator which is literal with datatype xsd:string."),e.namedNode(t)),e.quad(e.namedNode(`${t}GroupConcatExpression`),e.namedNode(`${a}label`),e.literal("Group Concat Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}GroupConcatExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}GroupConcatExpression`),e.namedNode(`${t}property`),R[6],e.namedNode(t)),e.quad(e.namedNode(`${t}GroupConcatExpression`),e.namedNode(`${t}property`),R[7],e.namedNode(t)),e.quad(e.namedNode(`${t}GroupConcatExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}groupConcat`),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent-hasValue`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent-hasValue`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent-hasValue`),e.namedNode(`${t}path`),e.namedNode(`${t}hasValue`),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that one of the value nodes is a given RDF node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent`),e.namedNode(`${a}label`),e.literal("Has-value constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}HasValueConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}HasValueConstraintComponent-hasValue`),e.namedNode(t)),e.quad(e.namedNode(`${t}IRI`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}IRI`),e.namedNode(`${a}comment`),e.literal("The node kind of all IRIs.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}IRI`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}IRI`),e.namedNode(`${a}label`),e.literal("IRI","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}IRIOrLiteral`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}IRIOrLiteral`),e.namedNode(`${a}comment`),e.literal("The node kind of all IRIs or literals.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}IRIOrLiteral`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}IRIOrLiteral`),e.namedNode(`${a}label`),e.literal("IRI or literal","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${a}comment`),e.literal("An if expression is a blank node with exactly one value for sh:if (which is a well-formed node expression), at most one value for sh:then (which is a well-formed node expression) and at most one value for sh:else (which is a well-formed node expression)."),e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${a}label`),e.literal("If Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${t}property`),R[8],e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${t}property`),R[9],e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${t}property`),R[10],e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}else`),e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}if`),e.namedNode(t)),e.quad(e.namedNode(`${t}IfExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}then`),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent-in`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent-in`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent-in`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent-in`),e.namedNode(`${t}path`),e.namedNode(`${t}in`),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to exclusively enumerate the permitted value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent`),e.namedNode(`${a}label`),e.literal("In constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}InConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}InConstraintComponent-in`),e.namedNode(t)),e.quad(e.namedNode(`${t}Info`),e.namedNode(`${d}type`),e.namedNode(`${t}Severity`),e.namedNode(t)),e.quad(e.namedNode(`${t}Info`),e.namedNode(`${a}comment`),e.literal("The severity for an informational validation result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Info`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Info`),e.namedNode(`${a}label`),e.literal("Info","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}IntersectionExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}IntersectionExpression`),e.namedNode(`${a}comment`),e.literal("An intersection expression is a blank node with exactly one value for the property sh:intersection which is a well-formed SHACL list with at least two members (which are well-formed node expressions)."),e.namedNode(t)),e.quad(e.namedNode(`${t}IntersectionExpression`),e.namedNode(`${a}label`),e.literal("Intersection Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}IntersectionExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}IntersectionExpression`),e.namedNode(`${t}property`),R[11],e.namedNode(t)),e.quad(e.namedNode(`${t}IntersectionExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}intersection`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint-js`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint-js`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint-js`),e.namedNode(`${t}path`),e.namedNode(`${t}js`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint`),e.namedNode(`${a}comment`),e.literal("The class of constraints backed by a JavaScript function.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint`),e.namedNode(`${a}label`),e.literal("JavaScript-based constraint","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraint`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}JSExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraintComponent`),e.namedNode(`${a}label`),e.literal("JavaScript constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}JSConstraint-js`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSExecutable`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSExecutable`),e.namedNode(`${a}comment`),e.literal("Abstract base class of resources that declare an executable JavaScript.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSExecutable`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSExecutable`),e.namedNode(`${a}label`),e.literal("JavaScript executable","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSExecutable`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSFunction`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSFunction`),e.namedNode(`${a}comment`),e.literal("The class of SHACL functions that execute a JavaScript function when called.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSFunction`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSFunction`),e.namedNode(`${a}label`),e.literal("JavaScript function","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSFunction`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Function`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSFunction`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}JSExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSLibrary`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSLibrary`),e.namedNode(`${a}comment`),e.literal("Represents a JavaScript library, typically identified by one or more URLs of files to include.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSLibrary`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSLibrary`),e.namedNode(`${a}label`),e.literal("JavaScript library","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSLibrary`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSRule`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSRule`),e.namedNode(`${a}comment`),e.literal("The class of SHACL rules expressed using JavaScript.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSRule`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSRule`),e.namedNode(`${a}label`),e.literal("JavaScript rule","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSRule`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}JSExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSRule`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Rule`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTarget`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTarget`),e.namedNode(`${a}comment`),e.literal("The class of targets that are based on JavaScript functions.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTarget`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTarget`),e.namedNode(`${a}label`),e.literal("JavaScript target","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTarget`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}JSExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTarget`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Target`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTargetType`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTargetType`),e.namedNode(`${a}comment`),e.literal("The (meta) class for parameterizable targets that are based on JavaScript functions.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTargetType`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTargetType`),e.namedNode(`${a}label`),e.literal("JavaScript target type","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTargetType`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}JSExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSTargetType`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}TargetType`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSValidator`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSValidator`),e.namedNode(`${a}comment`),e.literal("A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSValidator`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}JSValidator`),e.namedNode(`${a}label`),e.literal("JavaScript validator","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}JSValidator`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}JSExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}JSValidator`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Validator`),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent-languageIn`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent-languageIn`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent-languageIn`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent-languageIn`),e.namedNode(`${t}path`),e.namedNode(`${t}languageIn`),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to enumerate language tags that all value nodes must have.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent`),e.namedNode(`${a}label`),e.literal("Language-in constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}LanguageInConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}LanguageInConstraintComponent-languageIn`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent-lessThan`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent-lessThan`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent-lessThan`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}IRI`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent-lessThan`),e.namedNode(`${t}path`),e.namedNode(`${t}lessThan`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent`),e.namedNode(`${a}label`),e.literal("Less-than constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}LessThanConstraintComponent-lessThan`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}IRI`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),e.namedNode(`${t}path`),e.namedNode(`${t}lessThanOrEquals`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent`),e.namedNode(`${a}label`),e.literal("less-than-or-equals constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}LessThanOrEqualsConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),e.namedNode(t)),e.quad(e.namedNode(`${t}LimitExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}LimitExpression`),e.namedNode(`${a}comment`),e.literal("A limit expression is a blank node with exactly one value for the property sh:limit which is a literal with datatype xsd:integer and with exactly one value for the property sh:nodes which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}LimitExpression`),e.namedNode(`${a}label`),e.literal("Limit Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}LimitExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}LimitExpression`),e.namedNode(`${t}property`),R[12],e.namedNode(t)),e.quad(e.namedNode(`${t}LimitExpression`),e.namedNode(`${t}property`),R[13],e.namedNode(t)),e.quad(e.namedNode(`${t}LimitExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}limit`),e.namedNode(t)),e.quad(e.namedNode(`${t}Literal`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}Literal`),e.namedNode(`${a}comment`),e.literal("The node kind of all literals.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Literal`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Literal`),e.namedNode(`${a}label`),e.literal("Literal","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent-maxCount`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent-maxCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent-maxCount`),e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent-maxCount`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent-maxCount`),e.namedNode(`${t}path`),e.namedNode(`${t}maxCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the maximum number of value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent`),e.namedNode(`${a}label`),e.literal("Max-count constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MaxCountConstraintComponent-maxCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent-maxExclusive`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent-maxExclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent-maxExclusive`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent-maxExclusive`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}Literal`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent-maxExclusive`),e.namedNode(`${t}path`),e.namedNode(`${t}maxExclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent`),e.namedNode(`${a}label`),e.literal("Max-exclusive constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExclusiveConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MaxExclusiveConstraintComponent-maxExclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExpression`),e.namedNode(`${a}comment`),e.literal("A max expression is a blank node with exactly one value for the property sh:max which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExpression`),e.namedNode(`${a}label`),e.literal("Max Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExpression`),e.namedNode(`${t}property`),R[14],e.namedNode(t)),e.quad(e.namedNode(`${t}MaxExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}max`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent-maxInclusive`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent-maxInclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent-maxInclusive`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent-maxInclusive`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}Literal`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent-maxInclusive`),e.namedNode(`${t}path`),e.namedNode(`${t}maxInclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent`),e.namedNode(`${a}label`),e.literal("Max-inclusive constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxInclusiveConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MaxInclusiveConstraintComponent-maxInclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent-maxLength`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent-maxLength`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent-maxLength`),e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent-maxLength`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent-maxLength`),e.namedNode(`${t}path`),e.namedNode(`${t}maxLength`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the maximum string length of value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent`),e.namedNode(`${a}label`),e.literal("Max-length constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MaxLengthConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MaxLengthConstraintComponent-maxLength`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent-minCount`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent-minCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent-minCount`),e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent-minCount`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent-minCount`),e.namedNode(`${t}path`),e.namedNode(`${t}minCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the minimum number of value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent`),e.namedNode(`${a}label`),e.literal("Min-count constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MinCountConstraintComponent-minCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent-minExclusive`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent-minExclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent-minExclusive`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent-minExclusive`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}Literal`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent-minExclusive`),e.namedNode(`${t}path`),e.namedNode(`${t}minExclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent`),e.namedNode(`${a}label`),e.literal("Min-exclusive constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExclusiveConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MinExclusiveConstraintComponent-minExclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExpression`),e.namedNode(`${a}comment`),e.literal("A min expression is a blank node with exactly one value for the property sh:min which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExpression`),e.namedNode(`${a}label`),e.literal("Min Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinExpression`),e.namedNode(`${t}property`),R[15],e.namedNode(t)),e.quad(e.namedNode(`${t}MinExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}min`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent-minInclusive`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent-minInclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent-minInclusive`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent-minInclusive`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}Literal`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent-minInclusive`),e.namedNode(`${t}path`),e.namedNode(`${t}minInclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent`),e.namedNode(`${a}label`),e.literal("Min-inclusive constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinInclusiveConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MinInclusiveConstraintComponent-minInclusive`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent-minLength`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent-minLength`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent-minLength`),e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent-minLength`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent-minLength`),e.namedNode(`${t}path`),e.namedNode(`${t}minLength`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the minimum string length of value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent`),e.namedNode(`${a}label`),e.literal("Min-length constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinLengthConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}MinLengthConstraintComponent-minLength`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinusExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinusExpression`),e.namedNode(`${a}comment`),e.literal("A minus expression is a blank node with exactly one value for the property sh:minus which is a well-formed node expression and exactly one value for the property sh:nodes which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}MinusExpression`),e.namedNode(`${a}label`),e.literal("Minus Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}MinusExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}MinusExpression`),e.namedNode(`${t}property`),R[16],e.namedNode(t)),e.quad(e.namedNode(`${t}MinusExpression`),e.namedNode(`${t}property`),R[17],e.namedNode(t)),e.quad(e.namedNode(`${t}MinusExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}minus`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent-node`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent-node`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent-node`),e.namedNode(`${t}path`),e.namedNode(`${t}node`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that all value nodes conform to the given node shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent`),e.namedNode(`${a}label`),e.literal("Node constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}NodeConstraintComponent-node`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeExpression`),e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${t}expression`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeExpression`),e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${t}values`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeExpression`),e.namedNode(`${t}xone`),R[18],e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKind`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKind`),e.namedNode(`${a}comment`),e.literal("The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKind`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKind`),e.namedNode(`${a}label`),e.literal("Node kind","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKind`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent-nodeKind`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent-nodeKind`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent-nodeKind`),e.namedNode(`${t}in`),R[19],e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent-nodeKind`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent-nodeKind`),e.namedNode(`${t}path`),e.namedNode(`${t}nodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the RDF node kind of each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent`),e.namedNode(`${a}label`),e.literal("Node-kind constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeKindConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}NodeKindConstraintComponent-nodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeShape`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeShape`),e.namedNode(`${a}comment`),e.literal("A node shape is a shape that specifies constraint that need to be met with respect to focus nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeShape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeShape`),e.namedNode(`${a}label`),e.literal("Node shape","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NodeShape`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent-not`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent-not`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent-not`),e.namedNode(`${t}path`),e.namedNode(`${t}not`),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that value nodes do not conform to a given shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent`),e.namedNode(`${a}label`),e.literal("Not constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}NotConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}NotConstraintComponent-not`),e.namedNode(t)),e.quad(e.namedNode(`${t}OffsetExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}OffsetExpression`),e.namedNode(`${a}comment`),e.literal("An offset expression is a blank node with exactly one value for the property sh:offset which is a literal with datatype xsd:integer and with exactly one value for the property sh:nodes which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}OffsetExpression`),e.namedNode(`${a}label`),e.literal("Offset Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}OffsetExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}OffsetExpression`),e.namedNode(`${t}property`),R[20],e.namedNode(t)),e.quad(e.namedNode(`${t}OffsetExpression`),e.namedNode(`${t}property`),R[21],e.namedNode(t)),e.quad(e.namedNode(`${t}OffsetExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}offset`),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent-or`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent-or`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent-or`),e.namedNode(`${t}path`),e.namedNode(`${t}or`),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent`),e.namedNode(`${a}label`),e.literal("Or constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}OrConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}OrConstraintComponent-or`),e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${a}comment`),e.literal("An orderBy expression is a blank node with exactly one value for the property sh:orderBy which is a well-formed node expression and with exactly one value for the property sh:nodes which is a well-formed node expression. An orderBy expression can have one value for the property sh:desc which is either true or false."),e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${a}label`),e.literal("OrderBy Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${t}property`),R[22],e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${t}property`),R[23],e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${t}property`),R[24],e.namedNode(t)),e.quad(e.namedNode(`${t}OrderByExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}orderBy`),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameter`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameter`),e.namedNode(`${a}comment`),e.literal("The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameter`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameter`),e.namedNode(`${a}label`),e.literal("Parameter","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameter`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}PropertyShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameterizable`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameterizable`),e.namedNode(`${a}comment`),e.literal("Superclass of components that can take parameters, especially functions and constraint components.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameterizable`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameterizable`),e.namedNode(`${a}label`),e.literal("Parameterizable","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Parameterizable`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}PathExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}PathExpression`),e.namedNode(`${a}comment`),e.literal("A path expression is a blank node with exactly one value of the property sh:path (which are well-formed property paths) and at most one value for sh:nodes (which is a well-formed node expression)."),e.namedNode(t)),e.quad(e.namedNode(`${t}PathExpression`),e.namedNode(`${a}label`),e.literal("Path Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}PathExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}PathExpression`),e.namedNode(`${t}property`),R[25],e.namedNode(t)),e.quad(e.namedNode(`${t}PathExpression`),e.namedNode(`${t}property`),R[26],e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-flags`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-flags`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-flags`),e.namedNode(`${t}datatype`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-flags`),e.namedNode(`${t}optional`),e.literal("true",e.namedNode(`${H}boolean`)),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-flags`),e.namedNode(`${t}path`),e.namedNode(`${t}flags`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-pattern`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-pattern`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-pattern`),e.namedNode(`${t}datatype`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent-pattern`),e.namedNode(`${t}path`),e.namedNode(`${t}pattern`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that every value node matches a given regular expression.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent`),e.namedNode(`${a}label`),e.literal("Pattern constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}PatternConstraintComponent-flags`),e.namedNode(t)),e.quad(e.namedNode(`${t}PatternConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}PatternConstraintComponent-pattern`),e.namedNode(t)),e.quad(e.namedNode(`${t}PrefixDeclaration`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}PrefixDeclaration`),e.namedNode(`${a}comment`),e.literal("The class of prefix declarations, consisting of pairs of a prefix with a namespace.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PrefixDeclaration`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PrefixDeclaration`),e.namedNode(`${a}label`),e.literal("Prefix declaration","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PrefixDeclaration`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent-property`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent-property`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent-property`),e.namedNode(`${t}path`),e.namedNode(`${t}property`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that all value nodes conform to the given property shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent`),e.namedNode(`${a}label`),e.literal("Property constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}PropertyConstraintComponent-property`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyGroup`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyGroup`),e.namedNode(`${a}comment`),e.literal("Instances of this class represent groups of property shapes that belong together.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyGroup`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyGroup`),e.namedNode(`${a}label`),e.literal("Property group","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyGroup`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyShape`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyShape`),e.namedNode(`${a}comment`),e.literal("A property shape is a shape that specifies constraints on the values of a focus node for a given property or path.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyShape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyShape`),e.namedNode(`${a}label`),e.literal("Property shape","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}PropertyShape`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),e.namedNode(`${t}path`),e.namedNode(`${t}qualifiedMaxCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),e.namedNode(`${t}path`),e.namedNode(`${t}qualifiedValueShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${t}datatype`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${t}optional`),e.literal("true",e.namedNode(`${H}boolean`)),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${t}path`),e.namedNode(`${t}qualifiedValueShapesDisjoint`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent`),e.namedNode(`${a}label`),e.literal("Qualified-max-count constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMaxCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedMinCount`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedMinCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedMinCount`),e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedMinCount`),e.namedNode(`${t}path`),e.namedNode(`${t}qualifiedMinCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShape`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShape`),e.namedNode(`${t}path`),e.namedNode(`${t}qualifiedValueShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${t}datatype`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${t}optional`),e.literal("true",e.namedNode(`${H}boolean`)),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(`${t}path`),e.namedNode(`${t}qualifiedValueShapesDisjoint`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent`),e.namedNode(`${a}label`),e.literal("Qualified-min-count constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedMinCount`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}QualifiedMinCountConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),e.namedNode(t)),e.quad(e.namedNode(`${t}ResultAnnotation`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}ResultAnnotation`),e.namedNode(`${a}comment`),e.literal("A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ResultAnnotation`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ResultAnnotation`),e.namedNode(`${a}label`),e.literal("Result annotation","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ResultAnnotation`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}Rule`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Rule`),e.namedNode(`${a}comment`),e.literal("The class of SHACL rules. Never instantiated directly.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Rule`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Rule`),e.namedNode(`${a}label`),e.literal("Rule","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Rule`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(`${a}comment`),e.literal("The class of SPARQL executables that are based on an ASK query.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(`${a}label`),e.literal("SPARQL ASK executable","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${a}comment`),e.literal("A SPARQL ASK expression is a blank node with exactly one value for the property sh:ask which is string literal. The blank node may have values for the property sh:prefixes and these values are IRIs or blank nodes. Using the values of sh:prefixes as defined by 5.2.1 Prefix Declarations for SPARQL Queries, the value of sh:ask must be valid SPARQL 1.1 ASK query. The blank node may also have exactly one value for the property sh:nodes which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${a}label`),e.literal("SPARQL ASK Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${t}property`),R[27],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${t}property`),R[28],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${t}property`),R[29],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}ask`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskValidator`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskValidator`),e.namedNode(`${a}comment`),e.literal("The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskValidator`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskValidator`),e.namedNode(`${a}label`),e.literal("SPARQL ASK validator","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskValidator`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLAskValidator`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Validator`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraint`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraint`),e.namedNode(`${a}comment`),e.literal("The class of constraints based on SPARQL SELECT queries.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraint`),e.namedNode(`${a}label`),e.literal("SPARQL constraint","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraint`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent-sparql`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent-sparql`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent-sparql`),e.namedNode(`${t}path`),e.namedNode(`${t}sparql`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to define constraints based on SPARQL queries.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent`),e.namedNode(`${a}label`),e.literal("SPARQL constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}SPARQLConstraintComponent-sparql`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstructExecutable`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstructExecutable`),e.namedNode(`${a}comment`),e.literal("The class of SPARQL executables that are based on a CONSTRUCT query.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstructExecutable`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstructExecutable`),e.namedNode(`${a}label`),e.literal("SPARQL CONSTRUCT executable","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLConstructExecutable`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLExecutable`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLExecutable`),e.namedNode(`${a}comment`),e.literal("The class of resources that encapsulate a SPARQL query.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLExecutable`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLExecutable`),e.namedNode(`${a}label`),e.literal("SPARQL executable","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLExecutable`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLFunction`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLFunction`),e.namedNode(`${a}comment`),e.literal("A function backed by a SPARQL query - either ASK or SELECT.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLFunction`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLFunction`),e.namedNode(`${a}label`),e.literal("SPARQL function","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLFunction`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Function`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLFunction`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLFunction`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${a}comment`),e.literal("The class of SHACL rules based on SPARQL CONSTRUCT queries.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${a}label`),e.literal("SPARQL CONSTRUCT rule","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Rule`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLConstructExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${t}property`),R[30],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLRule`),e.namedNode(`${t}property`),R[31],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(`${a}comment`),e.literal("The class of SPARQL executables based on a SELECT query.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(`${a}label`),e.literal("SPARQL SELECT executable","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${a}comment`),e.literal("A SPARQL SELECT expression is a blank node with exactly one value for the property sh:select which is string literal. The blank node may have values for the property sh:prefixes and these values are IRIs or blank nodes. Using the values of sh:prefixes as defined by 5.2.1 Prefix Declarations for SPARQL Queries, the value of sh:select must be valid SPARQL 1.1 SELECT query with exactly one result variable. The blank node may also have exactly one value for the property sh:nodes which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${a}label`),e.literal("SPARQL SELECT Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${t}property`),R[32],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${t}property`),R[33],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${t}property`),R[34],e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}select`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectValidator`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectValidator`),e.namedNode(`${a}comment`),e.literal("The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectValidator`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectValidator`),e.namedNode(`${a}label`),e.literal("SPARQL SELECT validator","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectValidator`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLSelectValidator`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Validator`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTarget`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTarget`),e.namedNode(`${a}comment`),e.literal("The class of targets that are based on SPARQL queries.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTarget`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTarget`),e.namedNode(`${a}label`),e.literal("SPARQL target","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTarget`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTarget`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTarget`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Target`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTargetType`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTargetType`),e.namedNode(`${a}comment`),e.literal("The (meta) class for parameterizable targets that are based on SPARQL queries.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTargetType`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTargetType`),e.namedNode(`${a}label`),e.literal("SPARQL target type","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTargetType`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTargetType`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLTargetType`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}TargetType`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLUpdateExecutable`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLUpdateExecutable`),e.namedNode(`${a}comment`),e.literal("The class of SPARQL executables based on a SPARQL UPDATE.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLUpdateExecutable`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLUpdateExecutable`),e.namedNode(`${a}label`),e.literal("SPARQL UPDATE executable","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}SPARQLUpdateExecutable`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}SPARQLExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}Severity`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Severity`),e.namedNode(`${a}comment`),e.literal("The class of validation result severity levels, including violation and warning levels.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Severity`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Severity`),e.namedNode(`${a}label`),e.literal("Severity","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Severity`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}Shape`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Shape`),e.namedNode(`${a}comment`),e.literal("A shape is a collection of constraints that may be targeted for certain nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Shape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Shape`),e.namedNode(`${a}label`),e.literal("Shape","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Shape`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}SumExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}SumExpression`),e.namedNode(`${a}comment`),e.literal("A sum expression is a blank node with exactly one value for the property sh:sum which is a well-formed node expression."),e.namedNode(t)),e.quad(e.namedNode(`${t}SumExpression`),e.namedNode(`${a}label`),e.literal("Sum Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}SumExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}SumExpression`),e.namedNode(`${t}property`),R[35],e.namedNode(t)),e.quad(e.namedNode(`${t}SumExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}sum`),e.namedNode(t)),e.quad(e.namedNode(`${t}Target`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Target`),e.namedNode(`${a}comment`),e.literal("The base class of targets such as those based on SPARQL queries.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Target`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Target`),e.namedNode(`${a}label`),e.literal("Target","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Target`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}TargetType`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}TargetType`),e.namedNode(`${a}comment`),e.literal("The (meta) class for parameterizable targets.	Instances of this are instantiated as values of the sh:target property.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}TargetType`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}TargetType`),e.namedNode(`${a}label`),e.literal("Target type","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}TargetType`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}TargetType`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Parameterizable`),e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${a}label`),e.literal("A rule based on triple (subject, predicate, object) pattern.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}Rule`),e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${t}property`),R[36],e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${t}property`),R[37],e.namedNode(t)),e.quad(e.namedNode(`${t}TripleRule`),e.namedNode(`${t}property`),R[38],e.namedNode(t)),e.quad(e.namedNode(`${t}UnionExpression`),e.namedNode(`${d}type`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}UnionExpression`),e.namedNode(`${a}comment`),e.literal("A union expression is a blank node with exactly one value for the property sh:union which is a well-formed SHACL list with at least two members (which are well-formed node expressions)."),e.namedNode(t)),e.quad(e.namedNode(`${t}UnionExpression`),e.namedNode(`${a}label`),e.literal("Union Expression"),e.namedNode(t)),e.quad(e.namedNode(`${t}UnionExpression`),e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(e.namedNode(`${t}UnionExpression`),e.namedNode(`${t}property`),R[39],e.namedNode(t)),e.quad(e.namedNode(`${t}UnionExpression`),e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${t}union`),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent-uniqueLang`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent-uniqueLang`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent-uniqueLang`),e.namedNode(`${t}datatype`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent-uniqueLang`),e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent-uniqueLang`),e.namedNode(`${t}path`),e.namedNode(`${t}uniqueLang`),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to specify that no pair of value nodes may use the same language tag.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent`),e.namedNode(`${a}label`),e.literal("Unique-languages constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}UniqueLangConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}UniqueLangConstraintComponent-uniqueLang`),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationReport`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationReport`),e.namedNode(`${a}comment`),e.literal("The class of SHACL validation reports.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationReport`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationReport`),e.namedNode(`${a}label`),e.literal("Validation report","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationReport`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationResult`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationResult`),e.namedNode(`${a}comment`),e.literal("The class of validation results.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationResult`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationResult`),e.namedNode(`${a}label`),e.literal("Validation result","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ValidationResult`),e.namedNode(`${a}subClassOf`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}Validator`),e.namedNode(`${d}type`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}Validator`),e.namedNode(`${a}comment`),e.literal("The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Validator`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Validator`),e.namedNode(`${a}label`),e.literal("Validator","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Validator`),e.namedNode(`${a}subClassOf`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}Violation`),e.namedNode(`${d}type`),e.namedNode(`${t}Severity`),e.namedNode(t)),e.quad(e.namedNode(`${t}Violation`),e.namedNode(`${a}comment`),e.literal("The severity for a violation validation result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Violation`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Violation`),e.namedNode(`${a}label`),e.literal("Violation","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Warning`),e.namedNode(`${d}type`),e.namedNode(`${t}Severity`),e.namedNode(t)),e.quad(e.namedNode(`${t}Warning`),e.namedNode(`${a}comment`),e.literal("The severity for a warning validation result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}Warning`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}Warning`),e.namedNode(`${a}label`),e.literal("Warning","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent-xone`),e.namedNode(`${d}type`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent-xone`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent-xone`),e.namedNode(`${t}path`),e.namedNode(`${t}xone`),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent`),e.namedNode(`${a}comment`),e.literal("A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent`),e.namedNode(`${a}label`),e.literal("Exactly one constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}XoneConstraintComponent`),e.namedNode(`${t}parameter`),e.namedNode(`${t}XoneConstraintComponent-xone`),e.namedNode(t)),e.quad(e.namedNode(`${t}alternativePath`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}alternativePath`),e.namedNode(`${a}comment`),e.literal("The (single) value of this property must be a list of path elements, representing the elements of alternative paths.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}alternativePath`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}alternativePath`),e.namedNode(`${a}label`),e.literal("alternative path","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}alternativePath`),e.namedNode(`${a}range`),e.namedNode(`${d}List`),e.namedNode(t)),e.quad(e.namedNode(`${t}and`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}and`),e.namedNode(`${a}comment`),e.literal("RDF list of shapes to validate the value nodes against.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}and`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}and`),e.namedNode(`${a}label`),e.literal("and","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}and`),e.namedNode(`${a}range`),e.namedNode(`${d}List`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationProperty`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationProperty`),e.namedNode(`${a}comment`),e.literal("The annotation property that shall be set.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationProperty`),e.namedNode(`${a}domain`),e.namedNode(`${t}ResultAnnotation`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationProperty`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationProperty`),e.namedNode(`${a}label`),e.literal("annotation property","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationProperty`),e.namedNode(`${a}range`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationValue`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationValue`),e.namedNode(`${a}comment`),e.literal("The (default) values of the annotation property.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationValue`),e.namedNode(`${a}domain`),e.namedNode(`${t}ResultAnnotation`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationValue`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationValue`),e.namedNode(`${a}label`),e.literal("annotation value","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationVarName`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationVarName`),e.namedNode(`${a}comment`),e.literal("The name of the SPARQL variable from the SELECT clause that shall be used for the values.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationVarName`),e.namedNode(`${a}domain`),e.namedNode(`${t}ResultAnnotation`),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationVarName`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationVarName`),e.namedNode(`${a}label`),e.literal("annotation variable name","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}annotationVarName`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}ask`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}ask`),e.namedNode(`${a}comment`),e.literal("The SPARQL ASK query to execute.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ask`),e.namedNode(`${a}domain`),e.namedNode(`${t}SPARQLAskExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}ask`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ask`),e.namedNode(`${a}label`),e.literal("ask","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ask`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}class`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}class`),e.namedNode(`${a}comment`),e.literal("The type that all value nodes must have.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}class`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}class`),e.namedNode(`${a}label`),e.literal("class","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}class`),e.namedNode(`${a}range`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}closed`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}closed`),e.namedNode(`${a}comment`),e.literal("If set to true then the shape is closed.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}closed`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}closed`),e.namedNode(`${a}label`),e.literal("closed","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}closed`),e.namedNode(`${a}range`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}condition`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}condition`),e.namedNode(`${a}comment`),e.literal("The shapes that the focus nodes need to conform to before a rule is executed on them.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}condition`),e.namedNode(`${a}domain`),e.namedNode(`${t}Rule`),e.namedNode(t)),e.quad(e.namedNode(`${t}condition`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}condition`),e.namedNode(`${a}label`),e.literal("condition","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}condition`),e.namedNode(`${a}range`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}conforms`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}conforms`),e.namedNode(`${a}comment`),e.literal("True if the validation did not produce any validation results, and false otherwise.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}conforms`),e.namedNode(`${a}domain`),e.namedNode(`${t}ValidationReport`),e.namedNode(t)),e.quad(e.namedNode(`${t}conforms`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}conforms`),e.namedNode(`${a}label`),e.literal("conforms","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}conforms`),e.namedNode(`${a}range`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}construct`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}construct`),e.namedNode(`${a}comment`),e.literal("The SPARQL CONSTRUCT query to execute.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}construct`),e.namedNode(`${a}domain`),e.namedNode(`${t}SPARQLConstructExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}construct`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}construct`),e.namedNode(`${a}label`),e.literal("construct","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}construct`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}count`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}datatype`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}datatype`),e.namedNode(`${a}comment`),e.literal("Specifies an RDF datatype that all value nodes must have.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}datatype`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}datatype`),e.namedNode(`${a}label`),e.literal("datatype","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}datatype`),e.namedNode(`${a}range`),e.namedNode(`${a}Datatype`),e.namedNode(t)),e.quad(e.namedNode(`${t}deactivated`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}deactivated`),e.namedNode(`${a}comment`),e.literal("If set to true then all nodes conform to this.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}deactivated`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}deactivated`),e.namedNode(`${a}label`),e.literal("deactivated","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}deactivated`),e.namedNode(`${a}range`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}declare`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}declare`),e.namedNode(`${a}comment`),e.literal("Links a resource with its namespace prefix declarations.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}declare`),e.namedNode(`${a}domain`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(`${t}declare`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}declare`),e.namedNode(`${a}label`),e.literal("declare","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}declare`),e.namedNode(`${a}range`),e.namedNode(`${t}PrefixDeclaration`),e.namedNode(t)),e.quad(e.namedNode(`${t}defaultValue`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}defaultValue`),e.namedNode(`${a}comment`),e.literal("A default value for a property, for example for user interface tools to pre-populate input fields.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}defaultValue`),e.namedNode(`${a}domain`),e.namedNode(`${t}PropertyShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}defaultValue`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}defaultValue`),e.namedNode(`${a}label`),e.literal("default value","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}desc`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}description`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}description`),e.namedNode(`${a}comment`),e.literal("Human-readable descriptions for the property in the context of the surrounding shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}description`),e.namedNode(`${a}domain`),e.namedNode(`${t}PropertyShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}description`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}description`),e.namedNode(`${a}label`),e.literal("description","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}detail`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}detail`),e.namedNode(`${a}comment`),e.literal("Links a result with other results that provide more details, for example to describe violations against nested shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}detail`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}detail`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}detail`),e.namedNode(`${a}label`),e.literal("detail","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}detail`),e.namedNode(`${a}range`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}disjoint`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}disjoint`),e.namedNode(`${a}comment`),e.literal("Specifies a property where the set of values must be disjoint with the value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}disjoint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}disjoint`),e.namedNode(`${a}label`),e.literal("disjoint","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}disjoint`),e.namedNode(`${a}range`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}distinct`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}else`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}entailment`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}entailment`),e.namedNode(`${a}comment`),e.literal("An entailment regime that indicates what kind of inferencing is required by a shapes graph.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}entailment`),e.namedNode(`${a}domain`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(`${t}entailment`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}entailment`),e.namedNode(`${a}label`),e.literal("entailment","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}entailment`),e.namedNode(`${a}range`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}equals`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}equals`),e.namedNode(`${a}comment`),e.literal("Specifies a property that must have the same values as the value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}equals`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}equals`),e.namedNode(`${a}label`),e.literal("equals","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}equals`),e.namedNode(`${a}range`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}exists`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}expression`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}expression`),e.namedNode(`${a}comment`),e.literal("The node expression that must return true for the value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}expression`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}expression`),e.namedNode(`${a}label`),e.literal("expression","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}filterShape`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}filterShape`),e.namedNode(`${a}comment`),e.literal("The shape that all input nodes of the expression need to conform to.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}filterShape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}filterShape`),e.namedNode(`${a}label`),e.literal("filter shape","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}filterShape`),e.namedNode(`${a}range`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}flags`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}flags`),e.namedNode(`${a}comment`),e.literal("An optional flag to be used with regular expression pattern matching.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}flags`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}flags`),e.namedNode(`${a}label`),e.literal("flags","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}flags`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}focusNode`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}focusNode`),e.namedNode(`${a}comment`),e.literal("The focus node that was validated when the result was produced.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}focusNode`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}focusNode`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}focusNode`),e.namedNode(`${a}label`),e.literal("focus node","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}group`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}group`),e.namedNode(`${a}comment`),e.literal("Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}group`),e.namedNode(`${a}domain`),e.namedNode(`${t}PropertyShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}group`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}group`),e.namedNode(`${a}label`),e.literal("group","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}group`),e.namedNode(`${a}range`),e.namedNode(`${t}PropertyGroup`),e.namedNode(t)),e.quad(e.namedNode(`${t}groupConcat`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}hasValue`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}hasValue`),e.namedNode(`${a}comment`),e.literal("Specifies a value that must be among the value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}hasValue`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}hasValue`),e.namedNode(`${a}label`),e.literal("has value","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}if`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}ignoredProperties`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}ignoredProperties`),e.namedNode(`${a}comment`),e.literal("An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ignoredProperties`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}ignoredProperties`),e.namedNode(`${a}label`),e.literal("ignored properties","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}ignoredProperties`),e.namedNode(`${a}range`),e.namedNode(`${d}List`),e.namedNode(t)),e.quad(e.namedNode(`${t}in`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}in`),e.namedNode(`${a}comment`),e.literal("Specifies a list of allowed values so that each value node must be among the members of the given list.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}in`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}in`),e.namedNode(`${a}label`),e.literal("in","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}in`),e.namedNode(`${a}range`),e.namedNode(`${d}List`),e.namedNode(t)),e.quad(e.namedNode(`${t}intersection`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}intersection`),e.namedNode(`${a}comment`),e.literal("A list of node expressions that shall be intersected.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}intersection`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}intersection`),e.namedNode(`${a}label`),e.literal("intersection","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}inversePath`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}inversePath`),e.namedNode(`${a}comment`),e.literal("The (single) value of this property represents an inverse path (object to subject).","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}inversePath`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}inversePath`),e.namedNode(`${a}label`),e.literal("inverse path","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}inversePath`),e.namedNode(`${a}range`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}js`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}js`),e.namedNode(`${a}comment`),e.literal("Constraints expressed in JavaScript."),e.namedNode(t)),e.quad(e.namedNode(`${t}js`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}js`),e.namedNode(`${a}label`),e.literal("JavaScript constraint","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}js`),e.namedNode(`${a}range`),e.namedNode(`${t}JSConstraint`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsFunctionName`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsFunctionName`),e.namedNode(`${a}comment`),e.literal("The name of the JavaScript function to execute.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}jsFunctionName`),e.namedNode(`${a}domain`),e.namedNode(`${t}JSExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsFunctionName`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}jsFunctionName`),e.namedNode(`${a}label`),e.literal("JavaScript function name","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}jsFunctionName`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibrary`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibrary`),e.namedNode(`${a}comment`),e.literal("Declares which JavaScript libraries are needed to execute this.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibrary`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibrary`),e.namedNode(`${a}label`),e.literal("JavaScript library","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibrary`),e.namedNode(`${a}range`),e.namedNode(`${t}JSLibrary`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibraryURL`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibraryURL`),e.namedNode(`${a}comment`),e.literal("Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibraryURL`),e.namedNode(`${a}domain`),e.namedNode(`${t}JSLibrary`),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibraryURL`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibraryURL`),e.namedNode(`${a}label`),e.literal("JavaScript library URL","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}jsLibraryURL`),e.namedNode(`${a}range`),e.namedNode(`${H}anyURI`),e.namedNode(t)),e.quad(e.namedNode(`${t}labelTemplate`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}labelTemplate`),e.namedNode(`${a}comment`),e.literal("Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}labelTemplate`),e.namedNode(`${a}domain`),e.namedNode(`${t}Parameterizable`),e.namedNode(t)),e.quad(e.namedNode(`${t}labelTemplate`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}labelTemplate`),e.namedNode(`${a}label`),e.literal("label template","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}languageIn`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}languageIn`),e.namedNode(`${a}comment`),e.literal("Specifies a list of language tags that all value nodes must have.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}languageIn`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}languageIn`),e.namedNode(`${a}label`),e.literal("language in","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}languageIn`),e.namedNode(`${a}range`),e.namedNode(`${d}List`),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThan`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThan`),e.namedNode(`${a}comment`),e.literal("Specifies a property that must have smaller values than the value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThan`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThan`),e.namedNode(`${a}label`),e.literal("less than","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThan`),e.namedNode(`${a}range`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThanOrEquals`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThanOrEquals`),e.namedNode(`${a}comment`),e.literal("Specifies a property that must have smaller or equal values than the value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThanOrEquals`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThanOrEquals`),e.namedNode(`${a}label`),e.literal("less than or equals","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}lessThanOrEquals`),e.namedNode(`${a}range`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}limit`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}max`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}maxCount`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}maxCount`),e.namedNode(`${a}comment`),e.literal("Specifies the maximum number of values in the set of value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}maxCount`),e.namedNode(`${a}label`),e.literal("max count","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxCount`),e.namedNode(`${a}range`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}maxExclusive`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}maxExclusive`),e.namedNode(`${a}comment`),e.literal("Specifies the maximum exclusive value of each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxExclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}maxExclusive`),e.namedNode(`${a}label`),e.literal("max exclusive","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxInclusive`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}maxInclusive`),e.namedNode(`${a}comment`),e.literal("Specifies the maximum inclusive value of each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxInclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}maxInclusive`),e.namedNode(`${a}label`),e.literal("max inclusive","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxLength`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}maxLength`),e.namedNode(`${a}comment`),e.literal("Specifies the maximum string length of each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxLength`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}maxLength`),e.namedNode(`${a}label`),e.literal("max length","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}maxLength`),e.namedNode(`${a}range`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}message`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}message`),e.namedNode(`${a}comment`),e.literal("A human-readable message (possibly with placeholders for variables) explaining the cause of the result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}message`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}message`),e.namedNode(`${a}label`),e.literal("message","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}min`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}minCount`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}minCount`),e.namedNode(`${a}comment`),e.literal("Specifies the minimum number of values in the set of value nodes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}minCount`),e.namedNode(`${a}label`),e.literal("min count","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minCount`),e.namedNode(`${a}range`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}minExclusive`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}minExclusive`),e.namedNode(`${a}comment`),e.literal("Specifies the minimum exclusive value of each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minExclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}minExclusive`),e.namedNode(`${a}label`),e.literal("min exclusive","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minInclusive`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}minInclusive`),e.namedNode(`${a}comment`),e.literal("Specifies the minimum inclusive value of each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minInclusive`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}minInclusive`),e.namedNode(`${a}label`),e.literal("min inclusive","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minLength`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}minLength`),e.namedNode(`${a}comment`),e.literal("Specifies the minimum string length of each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minLength`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}minLength`),e.namedNode(`${a}label`),e.literal("min length","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}minLength`),e.namedNode(`${a}range`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}minus`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}name`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}name`),e.namedNode(`${a}comment`),e.literal("Human-readable labels for the property in the context of the surrounding shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}name`),e.namedNode(`${a}domain`),e.namedNode(`${t}PropertyShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}name`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}name`),e.namedNode(`${a}label`),e.literal("name","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}namespace`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}namespace`),e.namedNode(`${a}comment`),e.literal("The namespace associated with a prefix in a prefix declaration.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}namespace`),e.namedNode(`${a}domain`),e.namedNode(`${t}PrefixDeclaration`),e.namedNode(t)),e.quad(e.namedNode(`${t}namespace`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}namespace`),e.namedNode(`${a}label`),e.literal("namespace","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}namespace`),e.namedNode(`${a}range`),e.namedNode(`${H}anyURI`),e.namedNode(t)),e.quad(e.namedNode(`${t}node`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}node`),e.namedNode(`${a}comment`),e.literal("Specifies the node shape that all value nodes must conform to.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}node`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}node`),e.namedNode(`${a}label`),e.literal("node","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}node`),e.namedNode(`${a}range`),e.namedNode(`${t}NodeShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeKind`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeKind`),e.namedNode(`${a}comment`),e.literal("Specifies the node kind (e.g. IRI or literal) each value node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeKind`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeKind`),e.namedNode(`${a}label`),e.literal("node kind","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeKind`),e.namedNode(`${a}range`),e.namedNode(`${t}NodeKind`),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeValidator`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeValidator`),e.namedNode(`${a}comment`),e.literal("The validator(s) used to evaluate a constraint in the context of a node shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeValidator`),e.namedNode(`${a}domain`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeValidator`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeValidator`),e.namedNode(`${a}label`),e.literal("shape validator","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}nodeValidator`),e.namedNode(`${a}range`),e.namedNode(`${t}Validator`),e.namedNode(t)),e.quad(e.namedNode(`${t}nodes`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}nodes`),e.namedNode(`${a}comment`),e.literal("The node expression producing the input nodes of a filter shape expression.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}nodes`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}nodes`),e.namedNode(`${a}label`),e.literal("nodes","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}not`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}not`),e.namedNode(`${a}comment`),e.literal("Specifies a shape that the value nodes must not conform to.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}not`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}not`),e.namedNode(`${a}label`),e.literal("not","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}not`),e.namedNode(`${a}range`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}object`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}object`),e.namedNode(`${a}comment`),e.literal("An expression producing the nodes that shall be inferred as objects.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}object`),e.namedNode(`${a}domain`),e.namedNode(`${t}TripleRule`),e.namedNode(t)),e.quad(e.namedNode(`${t}object`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}object`),e.namedNode(`${a}label`),e.literal("object","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}offset`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}oneOrMorePath`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}oneOrMorePath`),e.namedNode(`${a}comment`),e.literal("The (single) value of this property represents a path that is matched one or more times.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}oneOrMorePath`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}oneOrMorePath`),e.namedNode(`${a}label`),e.literal("one or more path","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}oneOrMorePath`),e.namedNode(`${a}range`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}optional`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}optional`),e.namedNode(`${a}comment`),e.literal("Indicates whether a parameter is optional.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}optional`),e.namedNode(`${a}domain`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}optional`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}optional`),e.namedNode(`${a}label`),e.literal("optional","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}optional`),e.namedNode(`${a}range`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}or`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}or`),e.namedNode(`${a}comment`),e.literal("Specifies a list of shapes so that the value nodes must conform to at least one of the shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}or`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}or`),e.namedNode(`${a}label`),e.literal("or","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}or`),e.namedNode(`${a}range`),e.namedNode(`${d}List`),e.namedNode(t)),e.quad(e.namedNode(`${t}order`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}order`),e.namedNode(`${a}comment`),e.literal("Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}order`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}order`),e.namedNode(`${a}label`),e.literal("order","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}orderBy`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}parameter`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}parameter`),e.namedNode(`${a}comment`),e.literal("The parameters of a function or constraint component.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}parameter`),e.namedNode(`${a}domain`),e.namedNode(`${t}Parameterizable`),e.namedNode(t)),e.quad(e.namedNode(`${t}parameter`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}parameter`),e.namedNode(`${a}label`),e.literal("parameter","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}parameter`),e.namedNode(`${a}range`),e.namedNode(`${t}Parameter`),e.namedNode(t)),e.quad(e.namedNode(`${t}path`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}path`),e.namedNode(`${a}comment`),e.literal("Specifies the property path of a property shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}path`),e.namedNode(`${a}domain`),e.namedNode(`${t}PropertyShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}path`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}path`),e.namedNode(`${a}label`),e.literal("path","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}path`),e.namedNode(`${a}range`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}pattern`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}pattern`),e.namedNode(`${a}comment`),e.literal("Specifies a regular expression pattern that the string representations of the value nodes must match.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}pattern`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}pattern`),e.namedNode(`${a}label`),e.literal("pattern","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}pattern`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}predicate`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}predicate`),e.namedNode(`${a}comment`),e.literal("An expression producing the properties that shall be inferred as predicates.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}predicate`),e.namedNode(`${a}domain`),e.namedNode(`${t}TripleRule`),e.namedNode(t)),e.quad(e.namedNode(`${t}predicate`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}predicate`),e.namedNode(`${a}label`),e.literal("predicate","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}prefix`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}prefix`),e.namedNode(`${a}comment`),e.literal("The prefix of a prefix declaration.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}prefix`),e.namedNode(`${a}domain`),e.namedNode(`${t}PrefixDeclaration`),e.namedNode(t)),e.quad(e.namedNode(`${t}prefix`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}prefix`),e.namedNode(`${a}label`),e.literal("prefix","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}prefix`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}prefixes`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}prefixes`),e.namedNode(`${a}comment`),e.literal("The prefixes that shall be applied before parsing the associated SPARQL query.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}prefixes`),e.namedNode(`${a}domain`),e.namedNode(`${t}SPARQLExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}prefixes`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}prefixes`),e.namedNode(`${a}label`),e.literal("prefixes","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}prefixes`),e.namedNode(`${a}range`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(`${t}property`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}property`),e.namedNode(`${a}comment`),e.literal("Links a shape to its property shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}property`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}property`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}property`),e.namedNode(`${a}label`),e.literal("property","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}property`),e.namedNode(`${a}range`),e.namedNode(`${t}PropertyShape`),e.namedNode(t)),e.quad(e.namedNode(`${t}propertyValidator`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}propertyValidator`),e.namedNode(`${a}comment`),e.literal("The validator(s) used to evaluate a constraint in the context of a property shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}propertyValidator`),e.namedNode(`${a}domain`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}propertyValidator`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}propertyValidator`),e.namedNode(`${a}label`),e.literal("property validator","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}propertyValidator`),e.namedNode(`${a}range`),e.namedNode(`${t}Validator`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMaxCount`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMaxCount`),e.namedNode(`${a}comment`),e.literal("The maximum number of value nodes that can conform to the shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMaxCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMaxCount`),e.namedNode(`${a}label`),e.literal("qualified max count","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMaxCount`),e.namedNode(`${a}range`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMinCount`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMinCount`),e.namedNode(`${a}comment`),e.literal("The minimum number of value nodes that must conform to the shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMinCount`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMinCount`),e.namedNode(`${a}label`),e.literal("qualified min count","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedMinCount`),e.namedNode(`${a}range`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShape`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShape`),e.namedNode(`${a}comment`),e.literal("The shape that a specified number of values must conform to.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShape`),e.namedNode(`${a}label`),e.literal("qualified value shape","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShape`),e.namedNode(`${a}range`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShapesDisjoint`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShapesDisjoint`),e.namedNode(`${a}comment`),e.literal("Can be used to mark the qualified value shape to be disjoint with its sibling shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShapesDisjoint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShapesDisjoint`),e.namedNode(`${a}label`),e.literal("qualified value shapes disjoint","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}qualifiedValueShapesDisjoint`),e.namedNode(`${a}range`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}result`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}result`),e.namedNode(`${a}comment`),e.literal("The validation results contained in a validation report.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}result`),e.namedNode(`${a}domain`),e.namedNode(`${t}ValidationReport`),e.namedNode(t)),e.quad(e.namedNode(`${t}result`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}result`),e.namedNode(`${a}label`),e.literal("result","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}result`),e.namedNode(`${a}range`),e.namedNode(`${t}ValidationResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultAnnotation`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultAnnotation`),e.namedNode(`${a}comment`),e.literal("Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultAnnotation`),e.namedNode(`${a}domain`),e.namedNode(`${t}SPARQLSelectValidator`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultAnnotation`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}resultAnnotation`),e.namedNode(`${a}label`),e.literal("result annotation","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultAnnotation`),e.namedNode(`${a}range`),e.namedNode(`${t}ResultAnnotation`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultMessage`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultMessage`),e.namedNode(`${a}comment`),e.literal("Human-readable messages explaining the cause of the result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultMessage`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultMessage`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}resultMessage`),e.namedNode(`${a}label`),e.literal("result message","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultPath`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultPath`),e.namedNode(`${a}comment`),e.literal("The path of a validation result, based on the path of the validated property shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultPath`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultPath`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}resultPath`),e.namedNode(`${a}label`),e.literal("result path","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultPath`),e.namedNode(`${a}range`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultSeverity`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultSeverity`),e.namedNode(`${a}comment`),e.literal("The severity of the result, e.g. warning.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultSeverity`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}resultSeverity`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}resultSeverity`),e.namedNode(`${a}label`),e.literal("result severity","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}resultSeverity`),e.namedNode(`${a}range`),e.namedNode(`${t}Severity`),e.namedNode(t)),e.quad(e.namedNode(`${t}returnType`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}returnType`),e.namedNode(`${a}comment`),e.literal("The expected type of values returned by the associated function.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}returnType`),e.namedNode(`${a}domain`),e.namedNode(`${t}Function`),e.namedNode(t)),e.quad(e.namedNode(`${t}returnType`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}returnType`),e.namedNode(`${a}label`),e.literal("return type","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}returnType`),e.namedNode(`${a}range`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}rule`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}rule`),e.namedNode(`${a}comment`),e.literal("The rules linked to a shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}rule`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}rule`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}rule`),e.namedNode(`${a}label`),e.literal("rule","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}rule`),e.namedNode(`${a}range`),e.namedNode(`${t}Rule`),e.namedNode(t)),e.quad(e.namedNode(`${t}select`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}select`),e.namedNode(`${a}comment`),e.literal("The SPARQL SELECT query to execute.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}select`),e.namedNode(`${a}domain`),e.namedNode(`${t}SPARQLSelectExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}select`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}select`),e.namedNode(`${a}label`),e.literal("select","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}select`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}separator`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}severity`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}severity`),e.namedNode(`${a}comment`),e.literal("Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}severity`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}severity`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}severity`),e.namedNode(`${a}label`),e.literal("severity","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}severity`),e.namedNode(`${a}range`),e.namedNode(`${t}Severity`),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraph`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraph`),e.namedNode(`${a}comment`),e.literal("Shapes graphs that should be used when validating this data graph.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraph`),e.namedNode(`${a}domain`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraph`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraph`),e.namedNode(`${a}label`),e.literal("shapes graph","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraph`),e.namedNode(`${a}range`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraphWellFormed`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraphWellFormed`),e.namedNode(`${a}comment`),e.literal("If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraphWellFormed`),e.namedNode(`${a}domain`),e.namedNode(`${t}ValidationReport`),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraphWellFormed`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraphWellFormed`),e.namedNode(`${a}label`),e.literal("shapes graph well-formed","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}shapesGraphWellFormed`),e.namedNode(`${a}range`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraint`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraint`),e.namedNode(`${a}comment`),e.literal("The constraint that was validated when the result was produced.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraint`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraint`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraint`),e.namedNode(`${a}label`),e.literal("source constraint","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraintComponent`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraintComponent`),e.namedNode(`${a}comment`),e.literal("The constraint component that is the source of the result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraintComponent`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraintComponent`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraintComponent`),e.namedNode(`${a}label`),e.literal("source constraint component","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceConstraintComponent`),e.namedNode(`${a}range`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceShape`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceShape`),e.namedNode(`${a}comment`),e.literal("The shape that is was validated when the result was produced.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceShape`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceShape`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceShape`),e.namedNode(`${a}label`),e.literal("source shape","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sourceShape`),e.namedNode(`${a}range`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}sparql`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}sparql`),e.namedNode(`${a}comment`),e.literal("Links a shape with SPARQL constraints.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sparql`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}sparql`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}sparql`),e.namedNode(`${a}label`),e.literal("constraint (in SPARQL)","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}sparql`),e.namedNode(`${a}range`),e.namedNode(`${t}SPARQLConstraint`),e.namedNode(t)),e.quad(e.namedNode(`${t}subject`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}subject`),e.namedNode(`${a}comment`),e.literal("An expression producing the resources that shall be inferred as subjects.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}subject`),e.namedNode(`${a}domain`),e.namedNode(`${t}TripleRule`),e.namedNode(t)),e.quad(e.namedNode(`${t}subject`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}subject`),e.namedNode(`${a}label`),e.literal("subject","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}suggestedShapesGraph`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}suggestedShapesGraph`),e.namedNode(`${a}comment`),e.literal("Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}suggestedShapesGraph`),e.namedNode(`${a}domain`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(`${t}suggestedShapesGraph`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}suggestedShapesGraph`),e.namedNode(`${a}label`),e.literal("suggested shapes graph","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}suggestedShapesGraph`),e.namedNode(`${a}range`),e.namedNode(`${U}Ontology`),e.namedNode(t)),e.quad(e.namedNode(`${t}sum`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}target`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}target`),e.namedNode(`${a}comment`),e.literal("Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}target`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}target`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}target`),e.namedNode(`${a}label`),e.literal("target","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}target`),e.namedNode(`${a}range`),e.namedNode(`${t}Target`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetClass`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetClass`),e.namedNode(`${a}comment`),e.literal("Links a shape to a class, indicating that all instances of the class must conform to the shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetClass`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetClass`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}targetClass`),e.namedNode(`${a}label`),e.literal("target class","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetClass`),e.namedNode(`${a}range`),e.namedNode(`${a}Class`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetNode`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetNode`),e.namedNode(`${a}comment`),e.literal("Links a shape to individual nodes, indicating that these nodes must conform to the shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetNode`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetNode`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}targetNode`),e.namedNode(`${a}label`),e.literal("target node","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${a}comment`),e.literal("Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${a}label`),e.literal("target objects of","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetObjectsOf`),e.namedNode(`${a}range`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${a}comment`),e.literal("Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${a}domain`),e.namedNode(`${t}Shape`),e.namedNode(t)),e.quad(e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${a}label`),e.literal("target subjects of","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}targetSubjectsOf`),e.namedNode(`${a}range`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}then`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}this`),e.namedNode(`${d}type`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}this`),e.namedNode(`${a}comment`),e.literal("A node expression that represents the current focus node.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}this`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}this`),e.namedNode(`${a}label`),e.literal("this","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}union`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}union`),e.namedNode(`${a}comment`),e.literal("A list of node expressions that shall be used together.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}union`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}union`),e.namedNode(`${a}label`),e.literal("union","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}uniqueLang`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}uniqueLang`),e.namedNode(`${a}comment`),e.literal("Specifies whether all node values must have a unique (or no) language tag.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}uniqueLang`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}uniqueLang`),e.namedNode(`${a}label`),e.literal("unique languages","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}uniqueLang`),e.namedNode(`${a}range`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(e.namedNode(`${t}update`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}update`),e.namedNode(`${a}comment`),e.literal("The SPARQL UPDATE to execute.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}update`),e.namedNode(`${a}domain`),e.namedNode(`${t}SPARQLUpdateExecutable`),e.namedNode(t)),e.quad(e.namedNode(`${t}update`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}update`),e.namedNode(`${a}label`),e.literal("update","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}update`),e.namedNode(`${a}range`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(e.namedNode(`${t}validator`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}validator`),e.namedNode(`${a}comment`),e.literal("The validator(s) used to evaluate constraints of either node or property shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}validator`),e.namedNode(`${a}domain`),e.namedNode(`${t}ConstraintComponent`),e.namedNode(t)),e.quad(e.namedNode(`${t}validator`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}validator`),e.namedNode(`${a}label`),e.literal("validator","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}validator`),e.namedNode(`${a}range`),e.namedNode(`${t}Validator`),e.namedNode(t)),e.quad(e.namedNode(`${t}value`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}value`),e.namedNode(`${a}comment`),e.literal("An RDF node that has caused the result.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}value`),e.namedNode(`${a}domain`),e.namedNode(`${t}AbstractResult`),e.namedNode(t)),e.quad(e.namedNode(`${t}value`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}value`),e.namedNode(`${a}label`),e.literal("value","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}values`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}xone`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}xone`),e.namedNode(`${a}comment`),e.literal("Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}xone`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}xone`),e.namedNode(`${a}label`),e.literal("exactly one","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}xone`),e.namedNode(`${a}range`),e.namedNode(`${d}List`),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrMorePath`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrMorePath`),e.namedNode(`${a}comment`),e.literal("The (single) value of this property represents a path that is matched zero or more times.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrMorePath`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrMorePath`),e.namedNode(`${a}label`),e.literal("zero or more path","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrMorePath`),e.namedNode(`${a}range`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrOnePath`),e.namedNode(`${d}type`),e.namedNode(`${d}Property`),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrOnePath`),e.namedNode(`${a}comment`),e.literal("The (single) value of this property represents a path that is matched zero or one times.","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrOnePath`),e.namedNode(`${a}isDefinedBy`),e.namedNode(t),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrOnePath`),e.namedNode(`${a}label`),e.literal("zero or one path","en"),e.namedNode(t)),e.quad(e.namedNode(`${t}zeroOrOnePath`),e.namedNode(`${a}range`),e.namedNode(`${a}Resource`),e.namedNode(t)),e.quad(R[4],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[4],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[4],e.namedNode(`${t}node`),e.namedNode(`${oe}ShapeShape`),e.namedNode(t)),e.quad(R[4],e.namedNode(`${t}path`),e.namedNode(`${t}filterShape`),e.namedNode(t)),e.quad(R[40],e.namedNode(`${d}first`),e.namedNode(`${t}IfExpression`),e.namedNode(t)),e.quad(R[40],e.namedNode(`${d}rest`),R[41],e.namedNode(t)),e.quad(R[16],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[16],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[16],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[16],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[32],e.namedNode(`${t}datatype`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(R[32],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[32],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[32],e.namedNode(`${t}path`),e.namedNode(`${t}select`),e.namedNode(t)),e.quad(R[6],e.namedNode(`${t}datatype`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(R[6],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[6],e.namedNode(`${t}path`),e.namedNode(`${t}separator`),e.namedNode(t)),e.quad(R[42],e.namedNode(`${d}first`),e.namedNode(`${t}BlankNodeOrLiteral`),e.namedNode(t)),e.quad(R[42],e.namedNode(`${d}rest`),R[43],e.namedNode(t)),e.quad(R[19],e.namedNode(`${d}first`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(R[19],e.namedNode(`${d}rest`),R[44],e.namedNode(t)),e.quad(R[45],e.namedNode(`${d}first`),e.namedNode(`${t}MinExpression`),e.namedNode(t)),e.quad(R[45],e.namedNode(`${d}rest`),R[46],e.namedNode(t)),e.quad(R[47],e.namedNode(`${d}first`),e.namedNode(`${t}SPARQLAskExpression`),e.namedNode(t)),e.quad(R[47],e.namedNode(`${d}rest`),R[48],e.namedNode(t)),e.quad(R[25],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[25],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[25],e.namedNode(`${t}node`),e.namedNode(`${oe}PathShape`),e.namedNode(t)),e.quad(R[25],e.namedNode(`${t}path`),e.namedNode(`${t}path`),e.namedNode(t)),e.quad(R[49],e.namedNode(`${d}first`),e.namedNode(`${t}MinusExpression`),e.namedNode(t)),e.quad(R[49],e.namedNode(`${d}rest`),R[50],e.namedNode(t)),e.quad(R[46],e.namedNode(`${d}first`),e.namedNode(`${t}MaxExpression`),e.namedNode(t)),e.quad(R[46],e.namedNode(`${d}rest`),R[51],e.namedNode(t)),e.quad(R[52],e.namedNode(`${d}first`),e.namedNode(`${t}LimitExpression`),e.namedNode(t)),e.quad(R[52],e.namedNode(`${d}rest`),R[53],e.namedNode(t)),e.quad(R[8],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[8],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[8],e.namedNode(`${t}path`),e.namedNode(`${t}then`),e.namedNode(t)),e.quad(R[44],e.namedNode(`${d}first`),e.namedNode(`${t}IRI`),e.namedNode(t)),e.quad(R[44],e.namedNode(`${d}rest`),R[54],e.namedNode(t)),e.quad(R[55],e.namedNode(`${t}zeroOrMorePath`),e.namedNode(`${d}rest`),e.namedNode(t)),e.quad(R[5],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[5],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[5],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[56],e.namedNode(`${d}first`),R[57],e.namedNode(t)),e.quad(R[56],e.namedNode(`${d}rest`),e.namedNode(`${d}nil`),e.namedNode(t)),e.quad(R[0],e.namedNode(`${t}namespace`),e.literal("http://www.w3.org/ns/shacl#"),e.namedNode(t)),e.quad(R[0],e.namedNode(`${t}prefix`),e.literal("sh"),e.namedNode(t)),e.quad(R[58],e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNode`),e.namedNode(t)),e.quad(R[58],e.namedNode(`${t}not`),R[59],e.namedNode(t)),e.quad(R[18],e.namedNode(`${d}first`),e.namedNode(`${t}FocusNodeOrConstantTermExpression`),e.namedNode(t)),e.quad(R[18],e.namedNode(`${d}rest`),R[60],e.namedNode(t)),e.quad(R[15],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[15],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[15],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[15],e.namedNode(`${t}path`),e.namedNode(`${t}min`),e.namedNode(t)),e.quad(R[30],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[30],e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(t)),e.quad(R[30],e.namedNode(`${t}path`),e.namedNode(`${t}prefixes`),e.namedNode(t)),e.quad(R[61],e.namedNode(`${d}first`),R[55],e.namedNode(t)),e.quad(R[61],e.namedNode(`${d}rest`),R[62],e.namedNode(t)),e.quad(R[1],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[1],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[1],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[1],e.namedNode(`${t}path`),e.namedNode(`${t}count`),e.namedNode(t)),e.quad(R[12],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[12],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[12],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[12],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[33],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[33],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[33],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[63],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[63],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[63],e.namedNode(`${t}node`),e.namedNode(`${be}ListShape`),e.namedNode(t)),e.quad(R[63],e.namedNode(`${t}path`),e.namedNode(`${t}intersection`),e.namedNode(t)),e.quad(R[63],e.namedNode(`${t}property`),R[64],e.namedNode(t)),e.quad(R[13],e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(R[13],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[13],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[13],e.namedNode(`${t}path`),e.namedNode(`${t}limit`),e.namedNode(t)),e.quad(R[59],e.namedNode(`${d}first`),e.namedNode(`${t}ExistsExpression`),e.namedNode(t)),e.quad(R[59],e.namedNode(`${d}rest`),R[40],e.namedNode(t)),e.quad(R[36],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[36],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[36],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[36],e.namedNode(`${t}path`),e.namedNode(`${t}object`),e.namedNode(t)),e.quad(R[2],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[2],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[2],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[2],e.namedNode(`${t}path`),e.namedNode(`${t}distinct`),e.namedNode(t)),e.quad(R[65],e.namedNode(`${d}first`),e.namedNode(`${t}IntersectionExpression`),e.namedNode(t)),e.quad(R[65],e.namedNode(`${d}rest`),R[66],e.namedNode(t)),e.quad(R[57],e.namedNode(`${t}xone`),R[59],e.namedNode(t)),e.quad(R[34],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[34],e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(t)),e.quad(R[34],e.namedNode(`${t}path`),e.namedNode(`${t}prefixes`),e.namedNode(t)),e.quad(R[67],e.namedNode(`${d}first`),e.namedNode(`${t}GroupConcatExpression`),e.namedNode(t)),e.quad(R[67],e.namedNode(`${d}rest`),R[68],e.namedNode(t)),e.quad(R[20],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[20],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[20],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[20],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[69],e.namedNode(`${t}property`),R[63],e.namedNode(t)),e.quad(R[27],e.namedNode(`${t}datatype`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(R[27],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[27],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[27],e.namedNode(`${t}path`),e.namedNode(`${t}ask`),e.namedNode(t)),e.quad(R[28],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[28],e.namedNode(`${t}nodeKind`),e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(t)),e.quad(R[28],e.namedNode(`${t}path`),e.namedNode(`${t}prefixes`),e.namedNode(t)),e.quad(R[64],e.namedNode(`${t}minCount`),e.literal("2",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[64],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[64],e.namedNode(`${t}path`),R[61],e.namedNode(t)),e.quad(R[22],e.namedNode(`${t}datatype`),e.namedNode(`${H}boolean`),e.namedNode(t)),e.quad(R[22],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[22],e.namedNode(`${t}path`),e.namedNode(`${t}desc`),e.namedNode(t)),e.quad(R[29],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[29],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[29],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[41],e.namedNode(`${d}first`),e.namedNode(`${t}FilterShapeExpression`),e.namedNode(t)),e.quad(R[41],e.namedNode(`${d}rest`),R[70],e.namedNode(t)),e.quad(R[62],e.namedNode(`${d}first`),e.namedNode(`${d}first`),e.namedNode(t)),e.quad(R[62],e.namedNode(`${d}rest`),e.namedNode(`${d}nil`),e.namedNode(t)),e.quad(R[48],e.namedNode(`${d}first`),e.namedNode(`${t}SPARQLSelectExpression`),e.namedNode(t)),e.quad(R[48],e.namedNode(`${d}rest`),e.namedNode(`${d}nil`),e.namedNode(t)),e.quad(R[26],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[26],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[26],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[71],e.namedNode(`${d}first`),e.namedNode(`${t}CountExpression`),e.namedNode(t)),e.quad(R[71],e.namedNode(`${d}rest`),R[45],e.namedNode(t)),e.quad(R[7],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[7],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[7],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[7],e.namedNode(`${t}path`),e.namedNode(`${t}groupConcat`),e.namedNode(t)),e.quad(R[54],e.namedNode(`${d}first`),e.namedNode(`${t}Literal`),e.namedNode(t)),e.quad(R[54],e.namedNode(`${d}rest`),R[72],e.namedNode(t)),e.quad(R[23],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[23],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[23],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[23],e.namedNode(`${t}path`),e.namedNode(`${t}nodes`),e.namedNode(t)),e.quad(R[21],e.namedNode(`${t}datatype`),e.namedNode(`${H}integer`),e.namedNode(t)),e.quad(R[21],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[21],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[21],e.namedNode(`${t}path`),e.namedNode(`${t}offset`),e.namedNode(t)),e.quad(R[50],e.namedNode(`${d}first`),e.namedNode(`${t}DistinctExpression`),e.namedNode(t)),e.quad(R[50],e.namedNode(`${d}rest`),R[71],e.namedNode(t)),e.quad(R[14],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[14],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[14],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[14],e.namedNode(`${t}path`),e.namedNode(`${t}max`),e.namedNode(t)),e.quad(R[51],e.namedNode(`${d}first`),e.namedNode(`${t}SumExpression`),e.namedNode(t)),e.quad(R[51],e.namedNode(`${d}rest`),R[67],e.namedNode(t)),e.quad(R[68],e.namedNode(`${d}first`),e.namedNode(`${t}OrderByExpression`),e.namedNode(t)),e.quad(R[68],e.namedNode(`${d}rest`),R[52],e.namedNode(t)),e.quad(R[60],e.namedNode(`${d}first`),R[58],e.namedNode(t)),e.quad(R[60],e.namedNode(`${d}rest`),R[56],e.namedNode(t)),e.quad(R[24],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[24],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[24],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[24],e.namedNode(`${t}path`),e.namedNode(`${t}orderBy`),e.namedNode(t)),e.quad(R[35],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[35],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[35],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[35],e.namedNode(`${t}path`),e.namedNode(`${t}sum`),e.namedNode(t)),e.quad(R[3],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[3],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[3],e.namedNode(`${t}node`),e.namedNode(`${oe}ShapeShape`),e.namedNode(t)),e.quad(R[3],e.namedNode(`${t}path`),e.namedNode(`${t}exists`),e.namedNode(t)),e.quad(R[37],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[37],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[37],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[37],e.namedNode(`${t}path`),e.namedNode(`${t}subject`),e.namedNode(t)),e.quad(R[11],e.namedNode(`${t}and`),R[73],e.namedNode(t)),e.quad(R[11],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[11],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[11],e.namedNode(`${t}node`),e.namedNode(`${be}ListShape`),e.namedNode(t)),e.quad(R[11],e.namedNode(`${t}path`),e.namedNode(`${t}intersection`),e.namedNode(t)),e.quad(R[9],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[9],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[9],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[9],e.namedNode(`${t}path`),e.namedNode(`${t}if`),e.namedNode(t)),e.quad(R[53],e.namedNode(`${d}first`),e.namedNode(`${t}OffsetExpression`),e.namedNode(t)),e.quad(R[53],e.namedNode(`${d}rest`),R[47],e.namedNode(t)),e.quad(R[72],e.namedNode(`${d}first`),e.namedNode(`${t}BlankNodeOrIRI`),e.namedNode(t)),e.quad(R[72],e.namedNode(`${d}rest`),R[42],e.namedNode(t)),e.quad(R[70],e.namedNode(`${d}first`),e.namedNode(`${t}PathExpression`),e.namedNode(t)),e.quad(R[70],e.namedNode(`${d}rest`),R[65],e.namedNode(t)),e.quad(R[38],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[38],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[38],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[38],e.namedNode(`${t}path`),e.namedNode(`${t}predicate`),e.namedNode(t)),e.quad(R[39],e.namedNode(`${t}and`),R[74],e.namedNode(t)),e.quad(R[39],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[39],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[39],e.namedNode(`${t}node`),e.namedNode(`${be}ListShape`),e.namedNode(t)),e.quad(R[39],e.namedNode(`${t}path`),e.namedNode(`${t}union`),e.namedNode(t)),e.quad(R[66],e.namedNode(`${d}first`),e.namedNode(`${t}UnionExpression`),e.namedNode(t)),e.quad(R[66],e.namedNode(`${d}rest`),R[49],e.namedNode(t)),e.quad(R[10],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[10],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[10],e.namedNode(`${t}path`),e.namedNode(`${t}else`),e.namedNode(t)),e.quad(R[17],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[17],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[17],e.namedNode(`${t}node`),e.namedNode(`${t}NodeExpression`),e.namedNode(t)),e.quad(R[17],e.namedNode(`${t}path`),e.namedNode(`${t}minus`),e.namedNode(t)),e.quad(R[74],e.namedNode(`${d}first`),R[75],e.namedNode(t)),e.quad(R[74],e.namedNode(`${d}rest`),e.namedNode(`${d}nil`),e.namedNode(t)),e.quad(R[73],e.namedNode(`${d}first`),R[75],e.namedNode(t)),e.quad(R[73],e.namedNode(`${d}rest`),e.namedNode(`${d}nil`),e.namedNode(t)),e.quad(R[31],e.namedNode(`${t}datatype`),e.namedNode(`${H}string`),e.namedNode(t)),e.quad(R[31],e.namedNode(`${t}maxCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[31],e.namedNode(`${t}minCount`),e.literal("1",e.namedNode(`${H}integer`)),e.namedNode(t)),e.quad(R[31],e.namedNode(`${t}path`),e.namedNode(`${t}construct`),e.namedNode(t)),e.quad(R[43],e.namedNode(`${d}first`),e.namedNode(`${t}IRIOrLiteral`),e.namedNode(t)),e.quad(R[43],e.namedNode(`${d}rest`),e.namedNode(`${d}nil`),e.namedNode(t))]})({factory:this.factory}),o=this.factory.dataset(n.concat([...s]));this.$shapes=st({dataset:o,factory:this.factory}),this.shapesGraph=new La(this)}nodeConformsToShape(s,n){const o=this.shapesGraph.getShape(n);try{return this.depth++,!this.validationEngine.validateNodeAgainstShape(s,o,this.$data)}finally{this.depth--}}};var Rn=function(s,n,o,r){return new(o||(o=Promise))(function(e,t){function d(oe){try{a(r.next(oe))}catch(H){t(H)}}function U(oe){try{a(r.throw(oe))}catch(H){t(H)}}function a(oe){var H;oe.done?e(oe.value):(H=oe.value,H instanceof o?H:new o(function(be){be(H)})).then(d,U)}a((r=r.apply(s,n||[])).next())})};class Da extends HTMLElement{static get observedAttributes(){return wt.dataAttributes()}constructor(n){super(),this.shape=null,this.attachShadow({mode:"open"}),this.form=document.createElement("form"),this.config=new wt(n,this.form),this.form.addEventListener("change",o=>{o.stopPropagation(),this.config.editMode&&this.validate(!0).then(r=>{this.dispatchEvent(new CustomEvent("change",{bubbles:!0,cancelable:!1,composed:!0,detail:{valid:r}}))}).catch(r=>{console.log(r)})})}connectedCallback(){this.shadowRoot.prepend(this.form)}attributeChangedCallback(){this.config.updateAttributes(this),this.initialize()}initialize(){clearTimeout(this.initDebounceTimeout),this.initDebounceTimeout=setTimeout(()=>Rn(this,void 0,void 0,function*(){this.form.replaceChildren(document.createTextNode(this.config.attributes.loading));try{yield this.config.loader.loadGraphs(),this.form.replaceChildren();const n=this.findRootShaclShapeSubject();if(n){this.form.classList.forEach(r=>{this.form.classList.remove(r)}),this.form.classList.toggle("mode-edit",this.config.editMode),this.form.classList.toggle("mode-view",!this.config.editMode),this.config.theme.apply(this.form);const o=[this.config.theme.stylesheet];for(const r of Object.entries(ae).map(e=>e[1]))r.stylesheet&&o.push(r.stylesheet);if(this.shadowRoot.adoptedStyleSheets=o,this.shape=new ze(n,this.config,this.config.attributes.valueSubject?u.namedNode(this.config.attributes.valueSubject):void 0),this.form.appendChild(this.shape),this.config.editMode){if(this.config.attributes.submitButton!==null){const r=this.config.theme.createButton(this.config.attributes.submitButton||"Submit",!0);r.addEventListener("click",e=>{e.preventDefault(),this.form.reportValidity()&&this.validate().then(t=>{var d;t?this.dispatchEvent(new Event("submit",{bubbles:!0,cancelable:!0})):(d=this.form.querySelector(":scope .invalid > .editor"))===null||d===void 0||d.focus()})}),this.form.appendChild(r)}yield this.validate(!0)}}else if(this.config.shapesGraph.size>0)throw new Error("shacl root node shape not found")}catch(n){console.error(n);const o=document.createElement("div");o.innerText=String(n),this.form.replaceChildren(o)}}),200)}serialize(n="text/turtle",o=this.toRDF()){return function(r,e,t){if(e==="application/ld+json")return function(d){const U=[];for(const a of d){const oe={"@id":a.subject.id};if(a.predicate===D)oe["@type"]=a.object.id;else{let H=a.object.value;a.object instanceof C?a.object.language?H={"@language":a.object.language,"@value":a.object.value}:a.object.datatype&&a.object.datatype.value!==`${ne}#string`&&(H={"@type":a.object.datatype.value,"@value":a.object.value}):H={"@id":a.object.id},oe[a.predicate.value]=H}U.push(oe)}return JSON.stringify(U)}(r);{const d=new ye({format:e,prefixes:t});d.addQuads(r);let U="";return d.end((a,oe)=>{a&&console.error(a),U=oe}),U}}(o.getQuads(null,null,null,null),n,this.config.prefixes)}toRDF(n=new ke){var o;return(o=this.shape)===null||o===void 0||o.toRDF(n),n}registerPlugin(n){v(n),this.initialize()}setTheme(n){this.config.theme=n,this.initialize()}setClassInstanceProvider(n){this.config.classInstanceProvider=n,this.initialize()}validate(){return Rn(this,arguments,void 0,function*(n=!1){var o,r,e;for(const d of this.form.querySelectorAll(":scope .validation-error"))d.remove();for(const d of this.form.querySelectorAll(":scope .property-instance"))d.classList.remove("invalid"),!((o=d.querySelector(":scope > .editor"))===null||o===void 0)&&o.value?d.classList.add("valid"):d.classList.remove("valid");this.config.shapesGraph.deleteGraph(""),(r=this.shape)===null||r===void 0||r.toRDF(this.config.shapesGraph);const t=yield new ka(this.config.shapesGraph).validate(this.config.shapesGraph);for(const d of t.results){const U=d.focusNode;if(d.path){const a=d.path;let oe=this.form.querySelectorAll(`:scope [data-node-id='${U.id}'] [data-path='${a.id}'] > .editor`);oe.length===0&&(oe=this.form.querySelectorAll(`:scope [data-node-id='${U.id}'] [data-path='${a.id}']`));for(const H of oe)if(H.classList.contains("editor")){if(!n||H.value){let be=H.parentElement;be.classList.add("invalid"),be.classList.remove("valid"),be.appendChild(this.createValidationErrorDisplay(d));do be.classList.contains("collapsible")&&be.classList.add("open"),be=be.parentElement;while(be)}}else n||(H.classList.add("invalid"),H.classList.remove("valid"),H.appendChild(this.createValidationErrorDisplay(d,"node")))}else n||(e=this.form.querySelector(`:scope [data-node-id='${U.id}']`))===null||e===void 0||e.prepend(this.createValidationErrorDisplay(d,"node"))}return t.conforms})}createValidationErrorDisplay(n,o){var r,e;const t=document.createElement("span");if(t.classList.add("validation-error"),o&&t.classList.add(o),n)if(((r=n.message)===null||r===void 0?void 0:r.length)>0)for(const d of n.message)t.title+=d.value+`
`;else t.title=(e=n.sourceConstraintComponent)===null||e===void 0?void 0:e.value;return t}findRootShaclShapeSubject(){let n=null;if(this.config.attributes.shapeSubject){if(n=u.namedNode(this.config.attributes.shapeSubject),!this.config.shapesGraph.has(new q(n,D,me,M)))return void console.warn(`shapes graph does not contain requested root shape ${this.config.attributes.shapeSubject}`)}else if(this.config.attributes.valueSubject&&this.config.dataGraph.size>0){const o=u.namedNode(this.config.attributes.valueSubject),r=this.config.dataGraph.getQuads(o,D,null,null);if(r.length===0)return void console.warn(`value subject '${this.config.attributes.valueSubject}' has no ${D.id} statement`);for(const e of r)if(this.config.shapesGraph.has(new q(e.object,D,me,M))){n=e.object;break}if(!n){const e=this.config.shapesGraph.getQuads(null,G,r[0].object,M);if(e.length===0)return void console.error(`value subject '${this.config.attributes.valueSubject}' has no shacl shape definition in the shapes graph`);if(e.length>1&&console.warn(`value subject '${this.config.attributes.valueSubject}' has multiple shacl shape definitions in the shapes graph, choosing the first found (${e[0].subject})`),this.config.shapesGraph.getQuads(e[0].subject,D,me,M).length===0)return void console.error(`value subject '${this.config.attributes.valueSubject}' references a shape which is not a NodeShape (${e[0].subject})`);n=e[0].subject}}else{const o=this.config.shapesGraph.getQuads(null,D,me,M);if(o.length==0)return void console.warn("shapes graph does not contain any root shapes");o.length>1&&(console.warn("shapes graph contains",o.length,"root shapes. choosing first found which is",o[0].subject.value),console.info('hint: set the shape to use with attribute "data-shape-subject"')),n=o[0].subject}return n}}class Ma extends ce{constructor(n){super(n||`.editor:not([type='checkbox']) { border: 1px solid #DDD; padding: 2px 4px; }
.property-instance label { display: inline-block; word-break: break-word; line-height: 1em; padding-top: 0.15em; padding-right: 1em; flex-shrink: 0; position: relative; }
.property-instance:not(:first-child) > label { visibility: hidden; max-height: 0; }
.mode-edit .property-instance label { width: var(--label-width); }
`),this.idCtr=0}createDefaultTemplate(n,o,r,e,t){var d;e.id="e"+this.idCtr++,e.classList.add("editor"),t!=null&&t.datatype&&(e.shaclDatatype=t.datatype),(t==null?void 0:t.minCount)!==void 0&&(e.dataset.minCount=String(t.minCount)),t!=null&&t.class&&(e.dataset.class=t.class.value),t!=null&&t.nodeKind&&(e.dataset.nodeKind=t.nodeKind.value),e.value=(o==null?void 0:o.value)||((d=t==null?void 0:t.defaultValue)===null||d===void 0?void 0:d.value)||"";const U=document.createElement("label");U.htmlFor=e.id,U.innerText=n,t!=null&&t.description&&U.setAttribute("title",t.description.value);const a=t!=null&&t.description?t.description.value:t!=null&&t.pattern?t.pattern:null;a&&e.setAttribute("placeholder",a),r&&(e.setAttribute("required","true"),U.classList.add("required"));const oe=document.createElement("div");return oe.appendChild(U),oe.appendChild(e),oe}createDateEditor(n,o,r,e){var t,d;const U=document.createElement("input");((t=e.datatype)===null||t===void 0?void 0:t.value)===ne+"dateTime"?(U.type="datetime-local",U.setAttribute("step","1")):U.type="date",U.classList.add("pr-0");const a=this.createDefaultTemplate(n,null,r,U,e);if(o)try{let oe=new Date(o.value).toISOString();oe=((d=e.datatype)===null||d===void 0?void 0:d.value)===ne+"dateTime"?oe.slice(0,19):oe.slice(0,10),U.value=oe}catch(oe){console.error(oe,o)}return a}createTextEditor(n,o,r,e){let t;return e.singleLine===!1?(t=document.createElement("textarea"),t.rows=5):(t=document.createElement("input"),t.type="text",e.pattern&&(t.pattern=e.pattern)),e.minLength&&(t.minLength=e.minLength),e.maxLength&&(t.maxLength=e.maxLength),this.createDefaultTemplate(n,o,r,t,e)}createLangStringEditor(n,o,r,e){var t;const d=this.createTextEditor(n,o,r,e),U=d.querySelector(":scope .editor");let a;if(!((t=e.languageIn)===null||t===void 0)&&t.length){a=document.createElement("select");for(const oe of e.languageIn){const H=document.createElement("option");H.innerText=oe.value,a.appendChild(H)}}else a=document.createElement("input"),a.maxLength=5,a.placeholder="lang?";return a.title="Language of the text",a.classList.add("lang-chooser"),a.addEventListener("change",oe=>{oe.stopPropagation(),U&&(U.dataset.lang=a.value,U.dispatchEvent(new Event("change",{bubbles:!0})))}),o instanceof C&&(a.value=o.language),U.dataset.lang=a.value,U.after(a),d}createBooleanEditor(n,o,r,e){var t;const d=document.createElement("input");d.type="checkbox",d.classList.add("ml-0");const U=this.createDefaultTemplate(n,null,r,d,e);return d.removeAttribute("required"),(t=U.querySelector(":scope label"))===null||t===void 0||t.classList.remove("required"),o instanceof C&&(d.checked=o.value==="true"),U}createFileEditor(n,o,r,e){const t=document.createElement("input");return t.type="file",t.addEventListener("change",d=>{var U;if(!((U=t.files)===null||U===void 0)&&U.length){d.stopPropagation();const a=new FileReader;a.readAsDataURL(t.files[0]),a.onload=()=>{var oe;t.binaryData=btoa(a.result),(oe=t.parentElement)===null||oe===void 0||oe.dispatchEvent(new Event("change",{bubbles:!0}))}}else t.binaryData=void 0}),this.createDefaultTemplate(n,o,r,t,e)}createNumberEditor(n,o,r,e){var t;const d=document.createElement("input");d.type="number",d.classList.add("pr-0");const U=e.minInclusive!==void 0?e.minInclusive:e.minExclusive!==void 0?e.minExclusive+1:void 0,a=e.maxInclusive!==void 0?e.maxInclusive:e.maxExclusive!==void 0?e.maxExclusive-1:void 0;return U!==void 0&&(d.min=String(U)),a!==void 0&&(d.max=String(a)),((t=e.datatype)===null||t===void 0?void 0:t.value)!==ne+"integer"&&(d.step="0.1"),this.createDefaultTemplate(n,o,r,d,e)}createListEditor(n,o,r,e,t){const d=document.createElement("select"),U=this.createDefaultTemplate(n,null,r,d,t);let a=!0;for(const oe of e){const H=document.createElement("option"),be=typeof oe.value=="string"?oe.value:oe.value.value;H.innerHTML=oe.label?oe.label:be,H.value=be,o&&o.value===be&&(H.selected=!0),be===""&&(a=!1),d.appendChild(H)}if(a){const oe=document.createElement("option");oe.value="",o||(oe.selected=!0),d.prepend(oe)}return o&&(d.value=o.value),U}createButton(n,o){const r=document.createElement("button");return r.type="button",r.innerHTML=n,r}}class jn extends Da{constructor(){super(new Ma)}}window.customElements.define("shacl-form",jn)})();const co={name:"FormDemo",setup(){const W=Ha(),T=Tn();return{store:W,selection:T}},components:{Term:Va},mounted(){this.getResource()},watch:{resource_iri(W){this.getResource()}},data(){return{dataModel:{},shapeTurtle:"",subject:ft.namedNode("")}},computed:{...za(Tn,["graph_iri","resource_iri"]),res_type(){if(this.dataModel.getQuads!==void 0){const W=this.dataModel.getQuads(ft.namedNode(this.resource_iri),ft.namedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#type"),null)[0];if(W)return W.object}return""}},methods:{async getResource(){this.subject=ft.namedNode(this.resource_iri),console.log("get resource: "+this.resource_iri);const W=await this.store.getResource(this.resource_iri);this.dataModel=(await Wa(W)).store},async getShape(){console.log("Get shape for target class");let W=[];const T=await this.store.sendQuery({query:Ka(this.resource_iri)});if(T.resultType==="quads"&&(W=await(await T.execute()).toArray()),W.length<1){console.log("Get shape for class of current resource");const m=await this.store.sendQuery({query:Xa(this.resource_iri)});m.resultType==="quads"&&(W=await(await m.execute()).toArray())}W.length<1?(console.log("Use default shape"),this.shapeTurtle=so(`
          @prefix sh: <http://www.w3.org/ns/shacl#> .
          @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
          @prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
          @prefix ex: <http://example.org#> .

          ex:DefaultShape
            a sh:NodeShape, rdfs:Class ;
            sh:property [
              sh:name 'class' ;
              sh:path rdf:type ;
              sh:minCount 1 ;
              sh:maxCount 1 ;
            ] ;
            sh:property [
              sh:name 'label' ;
              sh:path rdfs:label ;
              sh:maxCount 1 ;
            ] .`)):(console.log("Use found shape"),this.shapeTurtle=await this.serialize(W,{format:"text/turtle",prefixes:this.prefixes}))},selectResource(W){this.selection.changeResourceIri(W)},serialize(W,T={}){return new Promise((m,$)=>{const f=new Ya(T);W.forEach(S=>{console.log(S),f.addQuad(S)}),f.end((S,E)=>{S!==null&&$(S),m(E)})})}}},po=Be("dt",null,"IRI",-1),ho=Be("dt",null,"Type",-1),fo={class:"form-group"},No=Be("label",{for:"sourceInput",class:""},"Turtle",-1),go=Be("div",null,null,-1);function yo(W,T,m,$,f,S){const E=Za("Term");return ro(),eo(oo,null,[Be("div",null,[Be("dl",null,[po,Be("dd",null,An(W.resource_iri),1),ho,Be("dd",null,[to(E,{term:S.res_type,"onUpdate:term":T[0]||(T[0]=j=>S.res_type=j),onClick:S.selectResource},null,8,["term","onClick"])])])]),Be("div",null,[Be("strong",null,"Shape of "+An(W.resource_iri),1),Pn(" ("),Be("a",{onClick:T[1]||(T[1]=(...j)=>S.getShape&&S.getShape(...j))},"refresh"),Pn(") "),Be("form",null,[Be("div",fo,[No,no(Be("textarea",{id:"sourceInput",class:"form-control","onUpdate:modelValue":T[2]||(T[2]=j=>this.shapeTurtle=j),rows:"15"},null,512),[[ao,this.shapeTurtle]])]),Be("button",{type:"button",class:"btn btn-outline-primary mb-0",onClick:T[3]||(T[3]=j=>W.updateResource())},"Submit")])]),go],64)}const wo=Ja(co,[["render",yo]]);export{wo as default};
